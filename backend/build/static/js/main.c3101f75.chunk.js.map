{"version":3,"sources":["configs/config.js","store/actions/actionsTypes.js","store/actions/auth.js","store/actions/loader.js","store/actions/index.js","ui/globalComponent/ReactLoader.js","ui/utils/PrivateRoute.js","App.js","serviceWorker.js","store/reducers/auth.js","store/reducers/loader.js","store/configureStore.js","ui/globalComponent/Footer.js","index.js"],"names":["__webpack_require__","d","__webpack_exports__","rootUrl","LOGIN","SIGNUP","LOGOUT","AUTH_ERROR","CLEAR_ERROR","START_LOADING","STOP_LOADING","signup","data","dispatch","axios","post","email","password","name","tel","then","res","localStorage","setItem","JSON","stringify","startSignup","clearLoader","catch","err","response","message","authError","error","type","actionTypes","login","startLogin","errorType","clearError","logout","removeItem","autoSignIn","authData","getItem","parse","now","Date","token","user","parseInt","expiresDate","get","_id","newAuthData","_objectSpread","console","log","userId","previousData","newData","soclialAuthStart","photo","renderLoader","auth_login","auth_logout","auth_signup","auth_autoSignIn","auth_clearError","auth_soclialAuthStart","loader_renderLoader","loader_clearLoader","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_loader_spinner__WEBPACK_IMPORTED_MODULE_1__","react_loader_spinner__WEBPACK_IMPORTED_MODULE_1___default","ReactLoader","props","a","createElement","style","height","width","zIndex","className","color","timeout","PrivateRoute","_ref","Component","component","rest","Object","objectWithoutProperties","react_default","react_router","assign","render","to","pathname","state","from","location","Home","lazy","Promise","all","e","bind","SignupPage","LoginPage","AllServicesPage","AllEventsPage","SingleCategoryPage","DetailsPage","SupplierDashboard","SupplierRegistration","SupplierConfirmationForm","Gallery","UserGallery","Profile","Notifications","UserReservations","FilterResults","NotFound","Admin","App","this","onAutoSiginIn","react_router_dom","react","fallback","path","exact","filter","PrivateRoute_PrivateRoute","connect","auth","Boolean","window","hostname","match","initialState","role","reducer","arguments","length","undefined","action","accountValidated","loading","loader_objectSpread","rootReducer","combineReducers","authReducer","loader","loaderReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","configureStore","createStore","applyMiddleware","thunk","Footer","alignItems","defaults","baseURL","headers","store","ReactDOM","es","id","src_App","globalComponent_Footer","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c3101f75.chunk.js","sourcesContent":["//export const rootUrl = \"http://localhost:5000\";\r\nexport  const rootUrl = \"https://entrecops.co\";","export const LOGIN = 'LOGIN';\r\nexport const SIGNUP = 'SIGNUP';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const AUTH_ERROR = 'AUTH_ERROR';\r\nexport const CLEAR_ERROR = 'CLEAR_ERROR';\r\n\r\nexport const SOCIAL_AUTH = 'SOCIAL_AUTH';\r\n\r\nexport const START_LOADING = 'START_LOADING';\r\nexport const STOP_LOADING = 'STOP_LOADING';","import * as actionTypes from '../actions/actionsTypes';\r\nimport {clearLoader} from '../actions'\r\nimport axios from 'axios';\r\n\r\nexport const signup = (data) => {\r\n    return dispatch => {\r\n        try {\r\n            axios.post('/api/user/signup', {\r\n                \"email\": data.email,\r\n                \"password\": data.password,\r\n                \"name\": data.name,\r\n                \"tel\": data.tel\r\n            })\r\n            .then(res => {\r\n                // Save in localstorage\r\n                localStorage.setItem('authData', JSON.stringify(res.data));\r\n                dispatch(startSignup(res.data))\r\n                dispatch(clearLoader())\r\n            })\r\n            .catch(err => {\r\n                // User already Exist\r\n                if (err.response.data.message === 'EMAIL_EXIST') {\r\n                    dispatch(authError(\"Adresse Email déja utilisée\"))\r\n                } else {\r\n                    dispatch(authError(\"Une érreur s'est produite, Veuillez reéssayer\"))\r\n                }\r\n                dispatch(clearLoader())\r\n            })\r\n        } catch (error) {\r\n            dispatch(authError(\"Problème de connection.\"))\r\n            dispatch(clearLoader())\r\n        }\r\n    }\r\n};\r\n\r\nexport const startSignup = (data) => {\r\n    return {\r\n        type: actionTypes.SIGNUP,\r\n        data: data\r\n    }\r\n};\r\n\r\n\r\nexport const login = (data) => {\r\n    return dispatch => {\r\n        try {\r\n            axios.post('/api/user/login', {\r\n                \"email\": data.email,\r\n                \"password\": data.password\r\n            })\r\n            .then(res => {\r\n                // Save in localstorage\r\n                localStorage.setItem('authData', JSON.stringify(res.data));\r\n                dispatch(startLogin(res.data))\r\n                dispatch(clearLoader())\r\n            })\r\n            .catch(err => {\r\n                if (err.response.data.message === 'WRONG_PASSWORD'\r\n                    || err.response.data.message === 'EMAIL_NOT_EXIST') {\r\n                    dispatch(authError(\"Vos informations sont Incorrectes.\"))\r\n                } else {\r\n                    dispatch(authError(\"Une érreur s'est produite, Veuillez reéssayer\"))\r\n                }\r\n                dispatch(clearLoader())\r\n            })\r\n        } catch (error) {\r\n            dispatch(authError(\"Erreur de connexion. Veuillez reéssayer.\"))\r\n            dispatch(clearLoader())\r\n        }\r\n    }\r\n};\r\n\r\nexport const startLogin = (data) => {\r\n    return {\r\n        type: actionTypes.LOGIN,\r\n        data: data\r\n    }\r\n};\r\n\r\nexport const authError = (type) => {\r\n    return {\r\n        type: actionTypes.AUTH_ERROR,\r\n        errorType: type\r\n    }\r\n};\r\n\r\nexport const clearError = () => {\r\n    return {\r\n        type: actionTypes.CLEAR_ERROR\r\n    }\r\n};\r\n\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('authData')\r\n    return {\r\n        type: actionTypes.LOGOUT\r\n    }\r\n};\r\n\r\n// Auto signin the user when the token expires\r\nexport const autoSignIn = () => {\r\n    let authData = localStorage.getItem(\"authData\");\r\n    authData = JSON.parse(authData);\r\n    return dispatch => {\r\n        const now = new Date();\r\n        if (authData && authData.token && authData.user) {\r\n            const parsedExpiryDate = new Date(parseInt(authData.expiresDate));\r\n            if (parsedExpiryDate > now) {\r\n                // Get user data and update the local storage/ The localstorage can be outdated\r\n                axios.get('/api/user/' + authData.user._id)\r\n                .then(res => {\r\n                    const newAuthData = {...authData};\r\n                    newAuthData.user = res.data.user;\r\n                    localStorage.setItem(\"authData\", JSON.stringify(newAuthData));\r\n                    dispatch(startLogin(newAuthData));\r\n                    console.log(\"Auto sign\")\r\n                })\r\n                .catch(err => {\r\n\r\n                })\r\n            } else {\r\n                // Generate a new token and login the user\r\n                const user = {\r\n                    email: authData.user.email,\r\n                    name: authData.user.name,\r\n                    userId: authData.user.userId,\r\n                }\r\n                axios.post('/api/user/generatetoken', user)\r\n                .then(res => {\r\n                    console.log(\"Re signin\");\r\n                    // Update the localstorage localstorage\r\n                    let previousData = JSON.parse(localStorage.getItem('authData'));\r\n                    previousData.token = res.data.token;\r\n                    previousData.expiresDate = res.data.expiresDate;\r\n                    localStorage.setItem('authData', JSON.stringify(previousData));\r\n                    const newData = {\r\n                        ...user,\r\n                        token: res.data.token,\r\n                        expiresDate: res.data.expiresDate\r\n                    }\r\n                    dispatch(startLogin(newData))\r\n                })\r\n                .catch(err => {\r\n                    dispatch(authError(\"Erreur de connexion. Veuillez reéssayer.\"))\r\n                })\r\n            }\r\n        } else {\r\n            console.log(\"Logout\")\r\n            dispatch(logout());\r\n        }\r\n    }\r\n};\r\n\r\n\r\nexport const soclialAuthStart = (name, photo) => {\r\n    return dispatch => {\r\n        try {\r\n            axios.post('/api/user/socialauth', {\r\n                \"name\": name,\r\n                \"photo\": photo\r\n            })\r\n            .then(res => {\r\n                // Save in localstorage\r\n                localStorage.setItem('authData', JSON.stringify(res.data));\r\n                dispatch(startLogin(res.data))\r\n            })\r\n            .catch(err => {\r\n                console.log({err})\r\n            })\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n};","import * as actionTypes from '../actions/actionsTypes';\r\n\r\nexport const renderLoader = () => {\r\n    return {\r\n        type: actionTypes.START_LOADING\r\n    }\r\n};\r\n\r\nexport const clearLoader = () => {\r\n    return {\r\n        type: actionTypes.STOP_LOADING\r\n    }\r\n};\r\n\r\n","export {\r\n    login,\r\n    logout,\r\n    signup,\r\n    autoSignIn,\r\n    clearError,\r\n    soclialAuthStart\r\n} from './auth';\r\n\r\nexport {\r\n    renderLoader,\r\n    clearLoader\r\n} from './loader'","import React from 'react';\r\nimport Loader from 'react-loader-spinner'\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\r\n\r\nconst ReactLoader = (props) => (\r\n    <div style={{height: \"100vh\", width: \"100%\", zIndex: \"100\"}} \r\n        className=\"d-flex align-items-center justify-content-center\">\r\n        <Loader\r\n            type=\"Rings\"\r\n            color=\"#DC3545\"\r\n            height={200}\r\n            width={200}\r\n            timeout={1000} //3 secs\r\n\r\n        />\r\n    </div>\r\n);\r\n\r\nexport default ReactLoader;","import React from 'react';\r\nimport {Redirect, Route} from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={\r\n            props => localStorage.getItem(\"authData\") ?\r\n                (<Component {...props} />):\r\n                (\r\n                   <Redirect\r\n                    to={{\r\n                        pathname: \"/auth/login\",\r\n                        state: {from: props.location}\r\n                    }} />\r\n                )\r\n        } \r\n    />\r\n);","import React, { Component, Suspense, lazy } from 'react';\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport {connect} from 'react-redux';\r\n\r\nimport ReactLoader from './ui/globalComponent/ReactLoader';\r\nimport { autoSignIn } from './store/actions';\r\nimport { PrivateRoute } from './ui/utils/PrivateRoute'; \r\n\r\nconst Home = lazy(() => import('./ui/Home'))\r\nconst SignupPage = lazy(() => import('./ui/components/Forms/SignupPage'))\r\nconst LoginPage = lazy(() => import('./ui/components/Forms/LoginPage'))\r\nconst AllServicesPage = lazy(() => import('./ui/components/Services/AllServicesPage'))\r\nconst AllEventsPage = lazy(() => import('./ui/components/Events/AllEventsPage'))\r\nconst SingleCategoryPage = lazy(() => import('./ui/components/Categories/SingleCategoryPage'))\r\nconst DetailsPage = lazy(() => import('./ui/components/Details/DetailsPage'))\r\nconst SupplierDashboard = lazy(() => import('./ui/suppliers/Dashboard/Dashboard'))\r\nconst SupplierRegistration = lazy(() => import('./ui/components/Supplier/SupplierRegistration'))\r\nconst SupplierConfirmationForm = lazy(() => import('./ui/components/Supplier/SupplierConfirmationForm'))\r\nconst Gallery = lazy(() => import('./ui/users/Gallery/GalleryPage'))\r\nconst UserGallery = lazy(() => import('./ui/users/Gallery/UserGallery'))\r\nconst Profile = lazy(() => import('./ui/users/Profile/Profile'))\r\nconst Notifications = lazy(() => import('./ui/users/Notifications/NotificationsPage'))\r\nconst UserReservations = lazy(() => import('./ui/users/Reservations/Reservations'))\r\nconst FilterResults = lazy(() => import('./ui/components/Filter/FilterResults'))\r\nconst NotFound = lazy(() => import('./ui/components/NotFound/NotFound'))\r\nconst Admin = lazy(() => import('./ui/admin/Admin'))\r\n\r\n/* import Home from './ui/Home';\r\nimport SignupPage from './ui/components/Forms/SignupPage';\r\nimport LoginPage from './ui/components/Forms/LoginPage';\r\nimport AllServicesPage from './ui/components/Services/AllServicesPage';\r\nimport AllEventsPage from './ui/components/Events/AllEventsPage';\r\nimport SingleCategoryPage from './ui/components/Categories/SingleCategoryPage';\r\nimport DetailsPage from './ui/components/Details/DetailsPage';\r\nimport SupplierDashboard from './ui/suppliers/Dashboard/Dashboard';\r\nimport SupplierRegistration from './ui/components/Supplier/SupplierRegistration';\r\nimport SupplierConfirmationForm from './ui/components/Supplier/SupplierConfirmationForm';\r\nimport Gallery from './ui/users/Gallery/GalleryPage';\r\nimport UserGallery from './ui/users/Gallery/UserGallery';\r\nimport Profile from './ui/users/Profile/Profile';\r\nimport Notifications from './ui/users/Notifications/NotificationsPage';\r\nimport UserReservations from './ui/users/Reservations/Reservations';\r\nimport FilterResults from './ui/components/Filter/FilterResults';\r\nimport NotFound from './ui/components/NotFound/NotFound'; */\r\n\r\n/* Admin Pages */\r\n// import Admin from './ui/admin/Admin';\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    if(!this.props.user) {\r\n      this.props.onAutoSiginIn();\r\n    }\r\n  }\r\n\r\n  render() {\r\n      return (\r\n        <BrowserRouter>\r\n          <Suspense fallback={<ReactLoader />}>\r\n            <Switch>\r\n              <Route path=\"/\" exact component={Home}  />\r\n              <Route path=\"/auth/login\" exact component={LoginPage}  />\r\n              <Route path=\"/auth/signup\" exact component={SignupPage}  />\r\n              <Route path=\"/events\" exact component={AllEventsPage}  />\r\n              <Route path=\"/services\" exact component={AllServicesPage}  />\r\n              <Route path=\"/supplier\" exact component={SupplierRegistration}  />\r\n              <Route path=\"/supplier/:id/account/confirmation\" exact component={SupplierConfirmationForm}  />\r\n              <Route path=\"/:AnounceType/category/:id\" exact component={SingleCategoryPage}  />\r\n              <Route path=\"/category/:id\" exact component={SingleCategoryPage}  />\r\n              <Route path=\"/annonce/:anounceType/:id\" exact component={DetailsPage}  />\r\n              <Route path=\"/gallery\" exact component={Gallery}  />\r\n              <Route path=\"/filter\" exact component={() => <FilterResults filter={localStorage.getItem(\"searchParams\")} />}  />\r\n\r\n              {/* Supplier Routes */}\r\n              <PrivateRoute path=\"/dashboard/reservations\" exact component={SupplierDashboard}  />\r\n\r\n              {/* User Routes */}\r\n              <PrivateRoute path=\"/user/profile\" exact component={Profile}  />\r\n              <PrivateRoute path=\"/user/notifications\" exact component={Notifications}  />\r\n              <PrivateRoute path=\"/user/reservations\" exact component={UserReservations}  />\r\n              <PrivateRoute path=\"/user/gallery\" exact component={UserGallery}  />\r\n      \r\n              {/* Admin Routes */}\r\n              <PrivateRoute path=\"/admin\" component={Admin} />\r\n\r\n              {/* 404 page error*/}\r\n              <Route path=\"*\" component={NotFound} />\r\n            </Switch>\r\n          </Suspense>\r\n        </BrowserRouter>\r\n      );\r\n  }\r\n}\r\n\r\nconst mapPropsToState = state => {\r\n  return {\r\n    user: state.auth.user,\r\n    token: state.auth.token\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onAutoSiginIn: () => dispatch(autoSignIn())\r\n  }\r\n}\r\n\r\nexport default connect(mapPropsToState, mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import * as actionTypes from '../actions/actionsTypes';\r\n\r\nconst initialState = {\r\n    name: '',\r\n    email: '',\r\n    token: null,\r\n    error: '',\r\n    expiresDate: '',\r\n    userId: null,\r\n    role: ''\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.LOGIN:\r\n            return {\r\n                ...state,\r\n                userId: action.data.user._id,\r\n                name: action.data.user.name,\r\n                email: action.data.user.email,\r\n                token: action.data.token,\r\n                accountValidated: action.data.user.accountValidated,\r\n                expiresDate: action.data.expiresDate,\r\n                role: action.data.user.role,\r\n                user: action.data.user,\r\n                error: ''\r\n            };\r\n        case actionTypes.SIGNUP:\r\n            return {\r\n                ...state,\r\n                userId: action.data.user._id,\r\n                name: action.data.user.name,\r\n                email: action.data.user.email,\r\n                token: action.data.token,\r\n                accountValidated: action.data.user.accountValidated,\r\n                expiresDate: action.data.expiresDate,\r\n                role: action.data.user.role,\r\n                user: action.data.user,\r\n                error: ''\r\n            };\r\n        case actionTypes.LOGOUT:\r\n            return {\r\n                ...state,\r\n                userId: null,\r\n                name: '',\r\n                email: '',\r\n                token: null,\r\n                expiresDate: null,\r\n                role: '',\r\n                error: ''\r\n            };\r\n        case actionTypes.AUTH_ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.errorType\r\n            };\r\n        case actionTypes.CLEAR_ERROR:\r\n            return {\r\n                ...state,\r\n                error: ''\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionsTypes';\r\n\r\nconst initialState = {\r\n    loading: false\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.START_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case actionTypes.STOP_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import { createStore, combineReducers, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk'; \r\n\r\nimport authReducer from './reducers/auth';\r\nimport loaderReducer from './reducers/loader';\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    loader: loaderReducer\r\n});\r\n\r\nlet composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst configureStore = () => {\r\n    return createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n};\r\n\r\nexport default configureStore;","import React, { Component } from 'react';\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n        return (\r\n            <footer className=\"bg-dark footer\" style={{alignItems: 'center'}}> \r\n                <div className=\"container py-3\">\r\n                   <div className=\"row py-4 py-5\">\r\n                        <div className=\"col\">\r\n                            <h5 className=\"text-center text-white\">Copyright @2019. All rights Reserved.</h5>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </footer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport axios from 'axios';\r\nimport './index.scss';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'bootstrap/dist/js/bootstrap.min.js';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport configureStore from './store/configureStore';\r\nimport  {rootUrl} from './configs/config'\r\nimport Footer from './ui/globalComponent/Footer';\r\n\r\naxios.defaults.baseURL = rootUrl;\r\n// axios.defaults.headers.common['Authorization'] = \"token\";\r\naxios.defaults.headers.post['Content-Type'] = \"application/json\";\r\n\r\nconst store = configureStore();\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <div id=\"content\">\r\n            <App />\r\n        </div>\r\n        <Footer />\r\n    </Provider>, \r\n    document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}