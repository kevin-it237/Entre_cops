{"version":3,"sources":["../node_modules/socket.io-client/lib/index.js","../node_modules/component-emitter/index.js","../node_modules/engine.io-parser/lib/browser.js","../node_modules/socket.io-client/node_modules/debug/src/browser.js","../node_modules/parseqs/index.js","../node_modules/component-inherit/index.js","../node_modules/engine.io-client/node_modules/debug/src/browser.js","../node_modules/socket.io-parser/index.js","../node_modules/buffer/index.js","../node_modules/engine.io-client/lib/xmlhttprequest.js","../node_modules/engine.io-client/lib/transport.js","../node_modules/parseuri/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray.js","../node_modules/socket.io-parser/node_modules/isarray/index.js","../node_modules/socket.io-parser/is-buffer.js","../node_modules/socket.io-client/lib/manager.js","../node_modules/engine.io-client/lib/transports/index.js","../node_modules/engine.io-client/lib/transports/polling.js","../node_modules/has-binary2/index.js","../node_modules/yeast/index.js","../node_modules/indexof/index.js","../node_modules/socket.io-client/lib/socket.js","../node_modules/socket.io-client/lib/on.js","../node_modules/component-bind/index.js","../node_modules/socket.io-client/lib/url.js","../node_modules/socket.io-client/node_modules/debug/src/common.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/socket.io-client/node_modules/ms/index.js","../node_modules/socket.io-parser/node_modules/debug/src/browser.js","../node_modules/socket.io-parser/node_modules/debug/src/debug.js","../node_modules/ms/index.js","../node_modules/socket.io-parser/binary.js","../node_modules/base64-js/index.js","../node_modules/ieee754/index.js","../node_modules/isarray/index.js","../node_modules/engine.io-client/lib/index.js","../node_modules/engine.io-client/lib/socket.js","../node_modules/has-cors/index.js","../node_modules/engine.io-client/lib/transports/polling-xhr.js","../node_modules/engine.io-parser/lib/keys.js","../node_modules/has-binary2/node_modules/isarray/index.js","../node_modules/arraybuffer.slice/index.js","../node_modules/after/index.js","../node_modules/engine.io-parser/lib/utf8.js","../node_modules/base64-arraybuffer/lib/base64-arraybuffer.js","../node_modules/blob/index.js","../node_modules/engine.io-client/node_modules/debug/src/common.js","../node_modules/engine.io-client/node_modules/ms/index.js","../node_modules/engine.io-client/lib/transports/polling-jsonp.js","../node_modules/engine.io-client/lib/transports/websocket.js","../node_modules/to-array/index.js","../node_modules/backo2/index.js"],"names":["url","__webpack_require__","parser","Manager","debug","module","exports","lookup","cache","managers","uri","opts","undefined","io","parsed","source","id","path","sameNamespace","nsps","forceNew","multiplex","query","socket","protocol","connect","Socket","Emitter","obj","key","prototype","mixin","on","addEventListener","event","fn","this","_callbacks","push","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","length","cb","callbacks","i","splice","emit","args","slice","call","len","listeners","hasListeners","base64encoder","keys","hasBinary","sliceBuffer","after","utf8","ArrayBuffer","isAndroid","navigator","test","userAgent","isPhantomJS","dontSendBlobs","packets","open","close","ping","pong","message","upgrade","noop","packetslist","err","type","data","Blob","map","ary","each","done","result","Array","next","eachWithIndex","el","error","msg","encodePacket","packet","supportsBinary","utf8encode","callback","buffer","encodeBase64Packet","contentArray","Uint8Array","resultBuffer","byteLength","encodeArrayBuffer","fr","FileReader","onload","readAsArrayBuffer","encodeBlobAsArrayBuffer","blob","encodeBlob","base64","encodeBase64Object","encoded","encode","String","strict","b64data","b64","split","readAsDataURL","fromCharCode","e","typed","basic","btoa","decodePacket","binaryType","utf8decode","charAt","decodeBase64Packet","substr","decode","tryDecode","Number","substring","rest","encodePayload","isBinary","encodePayloadAsBlob","encodePayloadAsArrayBuffer","doneCallback","setLengthHeader","results","join","decodePayload","decodePayloadAsBinary","n","l","chr","encodedPackets","totalLength","reduce","acc","p","toString","resultArray","bufferIndex","forEach","isString","ab","view","charCodeAt","lenStr","parseInt","binaryIdentifier","size","lengthAry","bufferTail","buffers","tailArray","msgLength","total","process","log","_console","console","formatArgs","useColors","namespace","humanize","diff","c","color","index","lastC","replace","match","save","namespaces","storage","setItem","removeItem","load","r","getItem","Object","NODE_ENV","DEBUG","window","__nwjs","toLowerCase","document","documentElement","style","WebkitAppearance","firebug","exception","table","RegExp","$1","localStorage","localstorage","colors","formatters","j","v","JSON","stringify","str","hasOwnProperty","encodeURIComponent","qs","qry","pairs","pair","decodeURIComponent","a","b","constructor","binary","isArray","isBuf","Encoder","types","CONNECT","DISCONNECT","EVENT","ACK","ERROR","BINARY_EVENT","BINARY_ACK","Decoder","ERROR_PACKET","encodeAsString","attachments","nsp","payload","tryStringify","reconstructor","BinaryReconstructor","reconPack","removeBlobs","bloblessData","deconstruction","deconstructPacket","pack","unshift","encodeAsBinary","add","buf","Error","parse","tryParse","isPayloadValid","decodeString","takeBinaryData","destroy","finishedReconstruction","binData","reconstructPacket","global","ieee754","kMaxLength","Buffer","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","__proto__","arg","encodingOrOffset","allocUnsafe","from","value","TypeError","array","byteOffset","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","write","fromString","isBuffer","checked","copy","val","fromObject","assertSize","isView","loweredCase","utf8ToBytes","base64ToBytes","swap","m","bidirectionalIndexOf","dir","isNaN","arrayIndexOf","indexOf","lastIndexOf","arr","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","hexWrite","offset","remaining","strLen","utf8Write","blitBuffer","asciiWrite","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","base64Slice","start","end","fromByteArray","utf8Slice","Math","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","foo","subarray","typedArraySupport","poolSize","_augment","Symbol","species","defineProperty","configurable","fill","allocUnsafeSlow","_isBuffer","compare","x","y","concat","list","pos","swap16","swap32","swap64","hexSlice","asciiSlice","latin1Slice","utf16leSlice","equals","inspect","max","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","code","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","trim","stringtrim","base64clean","src","dst","hasCORS","xdomain","xscheme","enablesXDR","XMLHttpRequest","XDomainRequest","self","Transport","hostname","port","secure","timestampParam","timestampRequests","readyState","agent","withCredentials","pfx","passphrase","cert","ca","ciphers","rejectUnauthorized","forceNode","isReactNative","extraHeaders","localAddress","onError","desc","description","doOpen","doClose","onClose","send","onOpen","writable","onData","onPacket","re","parts","exec","host","authority","ipv6uri","arrayWithoutHoles","iterableToArray","nonIterableSpread","withNativeBuffer","withNativeArrayBuffer","eio","bind","Backoff","has","subs","reconnection","reconnectionAttempts","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","jitter","timeout","connecting","lastPing","packetBuffer","_parser","encoder","decoder","autoConnect","emitAll","updateSocketIds","generateId","engine","_reconnection","_reconnectionAttempts","_reconnectionDelay","setMin","_randomizationFactor","setJitter","_reconnectionDelayMax","setMax","_timeout","maybeReconnectOnOpen","reconnecting","attempts","reconnect","skipReconnect","openSub","onopen","errorSub","cleanup","timer","setTimeout","clearTimeout","onping","Date","onpong","ondata","ondecoded","onerror","onConnecting","options","processPacketQueue","shift","subsLength","disconnect","reset","onclose","reason","delay","duration","onreconnect","attempt","XHR","JSONP","websocket","polling","xd","xs","jsonp","location","isSSL","forceJSONP","parseqs","inherit","yeast","Polling","hasXHR2","responseType","forceBase64","name","poll","pause","onPause","doPoll","callbackfn","doWrite","schema","sid","withNativeBlob","withNativeFile","File","prev","alphabet","seed","num","now","decoded","toArray","hasBin","events","connect_error","connect_timeout","reconnect_attempt","reconnect_failed","reconnect_error","json","ids","acks","receiveBuffer","sendBuffer","connected","disconnected","flags","subEvents","ev","compress","pop","onpacket","rootNamespaceError","onconnect","onevent","onack","ondisconnect","ack","sent","emitBuffered","parseuri","loc","href","_toConsumableArray","env","selectColor","hash","createDebug","abs","prevTime","_len","_key","enabled","curr","ms","coerce","format","formatter","extend","init","instances","delimiter","newDebug","toNamespace","regexp","default","stack","disable","names","skips","enable","instance","arr2","iter","iterator","s","h","d","w","plural","msAbs","isPlural","round","parseFloat","long","fmtLong","fmtShort","Function","chrome","local","ceil","packetData","_deconstructPacket","placeholder","_placeholder","newData","_reconstructPacket","pendingBlobs","_removeBlobs","curKey","containingObject","fileReader","lens","getLens","validLen","placeHoldersLen","tmp","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","len2","encodeChunk","output","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","LN2","transports","transportOptions","writeBuffer","prevBufferLen","policyPort","rememberUpgrade","onlyBinaryUpgrades","perMessageDeflate","threshold","product","upgrades","pingInterval","pingTimeout","pingIntervalTimer","pingTimeoutTimer","priorWebsocketSuccess","createTransport","o","clone","EIO","transport","requestTimeout","protocols","setTransport","onDrain","probe","failed","onTransportOpen","upgradeLosesBinary","upgrading","flush","freezeTransport","onTransportClose","onupgrade","to","onHandshake","setPing","filterUpgrades","onHeartbeat","sendPacket","waitForUpgrade","cleanupAndClose","filteredUpgrades","empty","Request","method","async","create","request","req","sendXhr","pollXhr","xhr","setDisableHeaderCheck","setRequestHeader","hasXDR","onLoad","responseText","onreadystatechange","contentType","getResponseHeader","status","requestsCount","requests","onSuccess","fromError","abort","response","attachEvent","unloadHandler","terminationEvent","arraybuffer","abv","ii","count","err_cb","bail","proxy","byteCount","byteIndex","stringFromCharCode","ucs2decode","extra","counter","checkScalarValue","toUpperCase","createByte","encodeCodePoint","symbol","readContinuationByte","continuationByte","decodeSymbol","byte1","version","byteString","ucs2encode","chars","encoded1","encoded2","encoded3","encoded4","bufferLength","BlobBuilder","WebKitBlobBuilder","MSBlobBuilder","MozBlobBuilder","blobSupported","blobSupportsArrayBufferView","blobBuilderSupported","append","getBlob","mapArrayBufferViews","chunk","BlobBuilderConstructor","bb","part","BlobConstructor","JSONPPolling","rNewline","rEscapedNewline","glob","___eio","script","parentNode","removeChild","form","iframe","createElement","insertAt","getElementsByTagName","insertBefore","head","body","appendChild","area","iframeId","className","position","top","left","setAttribute","complete","initIframe","html","action","submit","BrowserWebSocket","NodeWebSocket","WebSocket","MozWebSocket","WebSocketImpl","WS","usingBrowserWebSocket","check","headers","ws","supports","addEventListeners","onmessage","factor","rand","random","deviation"],"mappings":"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","file":"static/js/0.804e9148.chunk.js","sourcesContent":["/**\n * Module dependencies.\n */\nvar url = require('./url');\n\nvar parser = require('socket.io-parser');\n\nvar Manager = require('./manager');\n\nvar debug = require('debug')('socket.io-client');\n/**\n * Module exports.\n */\n\n\nmodule.exports = exports = lookup;\n/**\n * Managers cache.\n */\n\nvar cache = exports.managers = {};\n/**\n * Looks up an existing `Manager` for multiplexing.\n * If the user summons:\n *\n *   `io('http://localhost/a');`\n *   `io('http://localhost/b');`\n *\n * We reuse the existing instance based on same scheme/port/host,\n * and we initialize sockets for each namespace.\n *\n * @api public\n */\n\nfunction lookup(uri, opts) {\n  if (typeof uri === 'object') {\n    opts = uri;\n    uri = undefined;\n  }\n\n  opts = opts || {};\n  var parsed = url(uri);\n  var source = parsed.source;\n  var id = parsed.id;\n  var path = parsed.path;\n  var sameNamespace = cache[id] && path in cache[id].nsps;\n  var newConnection = opts.forceNew || opts['force new connection'] || false === opts.multiplex || sameNamespace;\n  var io;\n\n  if (newConnection) {\n    debug('ignoring socket cache for %s', source);\n    io = Manager(source, opts);\n  } else {\n    if (!cache[id]) {\n      debug('new io instance for %s', source);\n      cache[id] = Manager(source, opts);\n    }\n\n    io = cache[id];\n  }\n\n  if (parsed.query && !opts.query) {\n    opts.query = parsed.query;\n  }\n\n  return io.socket(parsed.path, opts);\n}\n/**\n * Protocol version.\n *\n * @api public\n */\n\n\nexports.protocol = parser.protocol;\n/**\n * `connect`.\n *\n * @param {String} uri\n * @api public\n */\n\nexports.connect = lookup;\n/**\n * Expose constructors for standalone build.\n *\n * @api public\n */\n\nexports.Manager = require('./manager');\nexports.Socket = require('./socket');","/**\r\n * Expose `Emitter`.\r\n */\nif (typeof module !== 'undefined') {\n  module.exports = Emitter;\n}\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\n\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n;\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n\n  return obj;\n}\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\n\n\nEmitter.prototype.on = Emitter.prototype.addEventListener = function (event, fn) {\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || []).push(fn);\n  return this;\n};\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\n\n\nEmitter.prototype.once = function (event, fn) {\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\n\n\nEmitter.prototype.off = Emitter.prototype.removeListener = Emitter.prototype.removeAllListeners = Emitter.prototype.removeEventListener = function (event, fn) {\n  this._callbacks = this._callbacks || {}; // all\n\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  } // specific event\n\n\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this; // remove all handlers\n\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  } // remove specific handler\n\n\n  var cb;\n\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  return this;\n};\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\n\n\nEmitter.prototype.emit = function (event) {\n  this._callbacks = this._callbacks || {};\n  var args = [].slice.call(arguments, 1),\n      callbacks = this._callbacks['$' + event];\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\n\n\nEmitter.prototype.listeners = function (event) {\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\n\n\nEmitter.prototype.hasListeners = function (event) {\n  return !!this.listeners(event).length;\n};","/**\n * Module dependencies.\n */\nvar keys = require('./keys');\n\nvar hasBinary = require('has-binary2');\n\nvar sliceBuffer = require('arraybuffer.slice');\n\nvar after = require('after');\n\nvar utf8 = require('./utf8');\n\nvar base64encoder;\n\nif (typeof ArrayBuffer !== 'undefined') {\n  base64encoder = require('base64-arraybuffer');\n}\n/**\n * Check if we are running an android browser. That requires us to use\n * ArrayBuffer with polling transports...\n *\n * http://ghinda.net/jpeg-blob-ajax-android/\n */\n\n\nvar isAndroid = typeof navigator !== 'undefined' && /Android/i.test(navigator.userAgent);\n/**\n * Check if we are running in PhantomJS.\n * Uploading a Blob with PhantomJS does not work correctly, as reported here:\n * https://github.com/ariya/phantomjs/issues/11395\n * @type boolean\n */\n\nvar isPhantomJS = typeof navigator !== 'undefined' && /PhantomJS/i.test(navigator.userAgent);\n/**\n * When true, avoids using Blobs to encode payloads.\n * @type boolean\n */\n\nvar dontSendBlobs = isAndroid || isPhantomJS;\n/**\n * Current protocol version.\n */\n\nexports.protocol = 3;\n/**\n * Packet types.\n */\n\nvar packets = exports.packets = {\n  open: 0 // non-ws\n  ,\n  close: 1 // non-ws\n  ,\n  ping: 2,\n  pong: 3,\n  message: 4,\n  upgrade: 5,\n  noop: 6\n};\nvar packetslist = keys(packets);\n/**\n * Premade error packet.\n */\n\nvar err = {\n  type: 'error',\n  data: 'parser error'\n};\n/**\n * Create a blob api even for blob builder when vendor prefixes exist\n */\n\nvar Blob = require('blob');\n/**\n * Encodes a packet.\n *\n *     <packet type id> [ <data> ]\n *\n * Example:\n *\n *     5hello world\n *     3\n *     4\n *\n * Binary is encoded in an identical principle\n *\n * @api private\n */\n\n\nexports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {\n  if (typeof supportsBinary === 'function') {\n    callback = supportsBinary;\n    supportsBinary = false;\n  }\n\n  if (typeof utf8encode === 'function') {\n    callback = utf8encode;\n    utf8encode = null;\n  }\n\n  var data = packet.data === undefined ? undefined : packet.data.buffer || packet.data;\n\n  if (typeof ArrayBuffer !== 'undefined' && data instanceof ArrayBuffer) {\n    return encodeArrayBuffer(packet, supportsBinary, callback);\n  } else if (typeof Blob !== 'undefined' && data instanceof Blob) {\n    return encodeBlob(packet, supportsBinary, callback);\n  } // might be an object with { base64: true, data: dataAsBase64String }\n\n\n  if (data && data.base64) {\n    return encodeBase64Object(packet, callback);\n  } // Sending data as a utf-8 string\n\n\n  var encoded = packets[packet.type]; // data fragment is optional\n\n  if (undefined !== packet.data) {\n    encoded += utf8encode ? utf8.encode(String(packet.data), {\n      strict: false\n    }) : String(packet.data);\n  }\n\n  return callback('' + encoded);\n};\n\nfunction encodeBase64Object(packet, callback) {\n  // packet data is an object { base64: true, data: dataAsBase64String }\n  var message = 'b' + exports.packets[packet.type] + packet.data.data;\n  return callback(message);\n}\n/**\n * Encode packet helpers for binary types\n */\n\n\nfunction encodeArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var data = packet.data;\n  var contentArray = new Uint8Array(data);\n  var resultBuffer = new Uint8Array(1 + data.byteLength);\n  resultBuffer[0] = packets[packet.type];\n\n  for (var i = 0; i < contentArray.length; i++) {\n    resultBuffer[i + 1] = contentArray[i];\n  }\n\n  return callback(resultBuffer.buffer);\n}\n\nfunction encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var fr = new FileReader();\n\n  fr.onload = function () {\n    exports.encodePacket({\n      type: packet.type,\n      data: fr.result\n    }, supportsBinary, true, callback);\n  };\n\n  return fr.readAsArrayBuffer(packet.data);\n}\n\nfunction encodeBlob(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  if (dontSendBlobs) {\n    return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);\n  }\n\n  var length = new Uint8Array(1);\n  length[0] = packets[packet.type];\n  var blob = new Blob([length.buffer, packet.data]);\n  return callback(blob);\n}\n/**\n * Encodes a packet with binary data in a base64 string\n *\n * @param {Object} packet, has `type` and `data`\n * @return {String} base64 encoded message\n */\n\n\nexports.encodeBase64Packet = function (packet, callback) {\n  var message = 'b' + exports.packets[packet.type];\n\n  if (typeof Blob !== 'undefined' && packet.data instanceof Blob) {\n    var fr = new FileReader();\n\n    fr.onload = function () {\n      var b64 = fr.result.split(',')[1];\n      callback(message + b64);\n    };\n\n    return fr.readAsDataURL(packet.data);\n  }\n\n  var b64data;\n\n  try {\n    b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));\n  } catch (e) {\n    // iPhone Safari doesn't let you apply with typed arrays\n    var typed = new Uint8Array(packet.data);\n    var basic = new Array(typed.length);\n\n    for (var i = 0; i < typed.length; i++) {\n      basic[i] = typed[i];\n    }\n\n    b64data = String.fromCharCode.apply(null, basic);\n  }\n\n  message += btoa(b64data);\n  return callback(message);\n};\n/**\n * Decodes a packet. Changes format to Blob if requested.\n *\n * @return {Object} with `type` and `data` (if any)\n * @api private\n */\n\n\nexports.decodePacket = function (data, binaryType, utf8decode) {\n  if (data === undefined) {\n    return err;\n  } // String data\n\n\n  if (typeof data === 'string') {\n    if (data.charAt(0) === 'b') {\n      return exports.decodeBase64Packet(data.substr(1), binaryType);\n    }\n\n    if (utf8decode) {\n      data = tryDecode(data);\n\n      if (data === false) {\n        return err;\n      }\n    }\n\n    var type = data.charAt(0);\n\n    if (Number(type) != type || !packetslist[type]) {\n      return err;\n    }\n\n    if (data.length > 1) {\n      return {\n        type: packetslist[type],\n        data: data.substring(1)\n      };\n    } else {\n      return {\n        type: packetslist[type]\n      };\n    }\n  }\n\n  var asArray = new Uint8Array(data);\n  var type = asArray[0];\n  var rest = sliceBuffer(data, 1);\n\n  if (Blob && binaryType === 'blob') {\n    rest = new Blob([rest]);\n  }\n\n  return {\n    type: packetslist[type],\n    data: rest\n  };\n};\n\nfunction tryDecode(data) {\n  try {\n    data = utf8.decode(data, {\n      strict: false\n    });\n  } catch (e) {\n    return false;\n  }\n\n  return data;\n}\n/**\n * Decodes a packet encoded in a base64 string\n *\n * @param {String} base64 encoded message\n * @return {Object} with `type` and `data` (if any)\n */\n\n\nexports.decodeBase64Packet = function (msg, binaryType) {\n  var type = packetslist[msg.charAt(0)];\n\n  if (!base64encoder) {\n    return {\n      type: type,\n      data: {\n        base64: true,\n        data: msg.substr(1)\n      }\n    };\n  }\n\n  var data = base64encoder.decode(msg.substr(1));\n\n  if (binaryType === 'blob' && Blob) {\n    data = new Blob([data]);\n  }\n\n  return {\n    type: type,\n    data: data\n  };\n};\n/**\n * Encodes multiple messages (payload).\n *\n *     <length>:data\n *\n * Example:\n *\n *     11:hello world2:hi\n *\n * If any contents are binary, they will be encoded as base64 strings. Base64\n * encoded strings are marked with a b before the length specifier\n *\n * @param {Array} packets\n * @api private\n */\n\n\nexports.encodePayload = function (packets, supportsBinary, callback) {\n  if (typeof supportsBinary === 'function') {\n    callback = supportsBinary;\n    supportsBinary = null;\n  }\n\n  var isBinary = hasBinary(packets);\n\n  if (supportsBinary && isBinary) {\n    if (Blob && !dontSendBlobs) {\n      return exports.encodePayloadAsBlob(packets, callback);\n    }\n\n    return exports.encodePayloadAsArrayBuffer(packets, callback);\n  }\n\n  if (!packets.length) {\n    return callback('0:');\n  }\n\n  function setLengthHeader(message) {\n    return message.length + ':' + message;\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, !isBinary ? false : supportsBinary, false, function (message) {\n      doneCallback(null, setLengthHeader(message));\n    });\n  }\n\n  map(packets, encodeOne, function (err, results) {\n    return callback(results.join(''));\n  });\n};\n/**\n * Async array map using after\n */\n\n\nfunction map(ary, each, done) {\n  var result = new Array(ary.length);\n  var next = after(ary.length, done);\n\n  var eachWithIndex = function eachWithIndex(i, el, cb) {\n    each(el, function (error, msg) {\n      result[i] = msg;\n      cb(error, result);\n    });\n  };\n\n  for (var i = 0; i < ary.length; i++) {\n    eachWithIndex(i, ary[i], next);\n  }\n}\n/*\n * Decodes data when a payload is maybe expected. Possible binary contents are\n * decoded from their base64 representation\n *\n * @param {String} data, callback method\n * @api public\n */\n\n\nexports.decodePayload = function (data, binaryType, callback) {\n  if (typeof data !== 'string') {\n    return exports.decodePayloadAsBinary(data, binaryType, callback);\n  }\n\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var packet;\n\n  if (data === '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n  var length = '',\n      n,\n      msg;\n\n  for (var i = 0, l = data.length; i < l; i++) {\n    var chr = data.charAt(i);\n\n    if (chr !== ':') {\n      length += chr;\n      continue;\n    }\n\n    if (length === '' || length != (n = Number(length))) {\n      // parser error - ignoring payload\n      return callback(err, 0, 1);\n    }\n\n    msg = data.substr(i + 1, n);\n\n    if (length != msg.length) {\n      // parser error - ignoring payload\n      return callback(err, 0, 1);\n    }\n\n    if (msg.length) {\n      packet = exports.decodePacket(msg, binaryType, false);\n\n      if (err.type === packet.type && err.data === packet.data) {\n        // parser error in individual packet - ignoring payload\n        return callback(err, 0, 1);\n      }\n\n      var ret = callback(packet, i + n, l);\n      if (false === ret) return;\n    } // advance cursor\n\n\n    i += n;\n    length = '';\n  }\n\n  if (length !== '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n};\n/**\n * Encodes multiple messages (payload) as binary.\n *\n * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number\n * 255><data>\n *\n * Example:\n * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers\n *\n * @param {Array} packets\n * @return {ArrayBuffer} encoded payload\n * @api private\n */\n\n\nexports.encodePayloadAsArrayBuffer = function (packets, callback) {\n  if (!packets.length) {\n    return callback(new ArrayBuffer(0));\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function (data) {\n      return doneCallback(null, data);\n    });\n  }\n\n  map(packets, encodeOne, function (err, encodedPackets) {\n    var totalLength = encodedPackets.reduce(function (acc, p) {\n      var len;\n\n      if (typeof p === 'string') {\n        len = p.length;\n      } else {\n        len = p.byteLength;\n      }\n\n      return acc + len.toString().length + len + 2; // string/binary identifier + separator = 2\n    }, 0);\n    var resultArray = new Uint8Array(totalLength);\n    var bufferIndex = 0;\n    encodedPackets.forEach(function (p) {\n      var isString = typeof p === 'string';\n      var ab = p;\n\n      if (isString) {\n        var view = new Uint8Array(p.length);\n\n        for (var i = 0; i < p.length; i++) {\n          view[i] = p.charCodeAt(i);\n        }\n\n        ab = view.buffer;\n      }\n\n      if (isString) {\n        // not true binary\n        resultArray[bufferIndex++] = 0;\n      } else {\n        // true binary\n        resultArray[bufferIndex++] = 1;\n      }\n\n      var lenStr = ab.byteLength.toString();\n\n      for (var i = 0; i < lenStr.length; i++) {\n        resultArray[bufferIndex++] = parseInt(lenStr[i]);\n      }\n\n      resultArray[bufferIndex++] = 255;\n      var view = new Uint8Array(ab);\n\n      for (var i = 0; i < view.length; i++) {\n        resultArray[bufferIndex++] = view[i];\n      }\n    });\n    return callback(resultArray.buffer);\n  });\n};\n/**\n * Encode as Blob\n */\n\n\nexports.encodePayloadAsBlob = function (packets, callback) {\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function (encoded) {\n      var binaryIdentifier = new Uint8Array(1);\n      binaryIdentifier[0] = 1;\n\n      if (typeof encoded === 'string') {\n        var view = new Uint8Array(encoded.length);\n\n        for (var i = 0; i < encoded.length; i++) {\n          view[i] = encoded.charCodeAt(i);\n        }\n\n        encoded = view.buffer;\n        binaryIdentifier[0] = 0;\n      }\n\n      var len = encoded instanceof ArrayBuffer ? encoded.byteLength : encoded.size;\n      var lenStr = len.toString();\n      var lengthAry = new Uint8Array(lenStr.length + 1);\n\n      for (var i = 0; i < lenStr.length; i++) {\n        lengthAry[i] = parseInt(lenStr[i]);\n      }\n\n      lengthAry[lenStr.length] = 255;\n\n      if (Blob) {\n        var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);\n        doneCallback(null, blob);\n      }\n    });\n  }\n\n  map(packets, encodeOne, function (err, results) {\n    return callback(new Blob(results));\n  });\n};\n/*\n * Decodes data when a payload is maybe expected. Strings are decoded by\n * interpreting each byte as a key code for entries marked to start with 0. See\n * description of encodePayloadAsBinary\n *\n * @param {ArrayBuffer} data, callback method\n * @api public\n */\n\n\nexports.decodePayloadAsBinary = function (data, binaryType, callback) {\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var bufferTail = data;\n  var buffers = [];\n\n  while (bufferTail.byteLength > 0) {\n    var tailArray = new Uint8Array(bufferTail);\n    var isString = tailArray[0] === 0;\n    var msgLength = '';\n\n    for (var i = 1;; i++) {\n      if (tailArray[i] === 255) break; // 310 = char length of Number.MAX_VALUE\n\n      if (msgLength.length > 310) {\n        return callback(err, 0, 1);\n      }\n\n      msgLength += tailArray[i];\n    }\n\n    bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);\n    msgLength = parseInt(msgLength);\n    var msg = sliceBuffer(bufferTail, 0, msgLength);\n\n    if (isString) {\n      try {\n        msg = String.fromCharCode.apply(null, new Uint8Array(msg));\n      } catch (e) {\n        // iPhone Safari doesn't let you apply to typed arrays\n        var typed = new Uint8Array(msg);\n        msg = '';\n\n        for (var i = 0; i < typed.length; i++) {\n          msg += String.fromCharCode(typed[i]);\n        }\n      }\n    }\n\n    buffers.push(msg);\n    bufferTail = sliceBuffer(bufferTail, msgLength);\n  }\n\n  var total = buffers.length;\n  buffers.forEach(function (buffer, i) {\n    callback(exports.decodePacket(buffer, binaryType, true), i, total);\n  });\n};","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\n/**\n * Colors.\n */\n\nexports.colors = ['#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC', '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF', '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC', '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF', '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC', '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033', '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366', '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933', '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC', '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF', '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'];\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n// eslint-disable-next-line complexity\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n    return true;\n  } // Internet Explorer and Edge do not support colors.\n\n\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  } // Is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\n\n  return typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || // Is firebug? http://stackoverflow.com/a/398120/376773\n  typeof window !== 'undefined' && window.console && (window.console.firebug || window.console.exception && window.console.table) || // Is firefox >= v31?\n  // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31 || // Double check webkit in userAgent just in case we are in a worker\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/);\n}\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\n\nfunction formatArgs(args) {\n  args[0] = (this.useColors ? '%c' : '') + this.namespace + (this.useColors ? ' %c' : ' ') + args[0] + (this.useColors ? '%c ' : ' ') + '+' + module.exports.humanize(this.diff);\n\n  if (!this.useColors) {\n    return;\n  }\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit'); // The final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function (match) {\n    if (match === '%%') {\n      return;\n    }\n\n    index++;\n\n    if (match === '%c') {\n      // We only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n  args.splice(lastC, 0, c);\n}\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\n\nfunction log() {\n  var _console;\n\n  // This hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return typeof console === 'object' && console.log && (_console = console).log.apply(_console, arguments);\n}\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\n\nfunction save(namespaces) {\n  try {\n    if (namespaces) {\n      exports.storage.setItem('debug', namespaces);\n    } else {\n      exports.storage.removeItem('debug');\n    }\n  } catch (error) {// Swallow\n    // XXX (@Qix-) should we be logging these?\n  }\n}\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\n\nfunction load() {\n  var r;\n\n  try {\n    r = exports.storage.getItem('debug');\n  } catch (error) {} // Swallow\n  // XXX (@Qix-) should we be logging these?\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\n\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\n\nfunction localstorage() {\n  try {\n    // TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n    // The Browser also has localStorage in the global context.\n    return localStorage;\n  } catch (error) {// Swallow\n    // XXX (@Qix-) should we be logging these?\n  }\n}\n\nmodule.exports = require('./common')(exports);\nvar formatters = module.exports.formatters;\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n  try {\n    return JSON.stringify(v);\n  } catch (error) {\n    return '[UnexpectedJSONParseError]: ' + error.message;\n  }\n};","/**\r\n * Compiles a querystring\r\n * Returns string representation of the object\r\n *\r\n * @param {Object}\r\n * @api private\r\n */\nexports.encode = function (obj) {\n  var str = '';\n\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      if (str.length) str += '&';\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n    }\n  }\n\n  return str;\n};\n/**\r\n * Parses a simple querystring into an object\r\n *\r\n * @param {String} qs\r\n * @api private\r\n */\n\n\nexports.decode = function (qs) {\n  var qry = {};\n  var pairs = qs.split('&');\n\n  for (var i = 0, l = pairs.length; i < l; i++) {\n    var pair = pairs[i].split('=');\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n  }\n\n  return qry;\n};","module.exports = function (a, b) {\n  var fn = function fn() {};\n\n  fn.prototype = b.prototype;\n  a.prototype = new fn();\n  a.prototype.constructor = a;\n};","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\n/**\n * Colors.\n */\n\nexports.colors = ['#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC', '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF', '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC', '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF', '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC', '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033', '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366', '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933', '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC', '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF', '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'];\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n// eslint-disable-next-line complexity\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n    return true;\n  } // Internet Explorer and Edge do not support colors.\n\n\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  } // Is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\n\n  return typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || // Is firebug? http://stackoverflow.com/a/398120/376773\n  typeof window !== 'undefined' && window.console && (window.console.firebug || window.console.exception && window.console.table) || // Is firefox >= v31?\n  // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31 || // Double check webkit in userAgent just in case we are in a worker\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/);\n}\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\n\nfunction formatArgs(args) {\n  args[0] = (this.useColors ? '%c' : '') + this.namespace + (this.useColors ? ' %c' : ' ') + args[0] + (this.useColors ? '%c ' : ' ') + '+' + module.exports.humanize(this.diff);\n\n  if (!this.useColors) {\n    return;\n  }\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit'); // The final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function (match) {\n    if (match === '%%') {\n      return;\n    }\n\n    index++;\n\n    if (match === '%c') {\n      // We only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n  args.splice(lastC, 0, c);\n}\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\n\nfunction log() {\n  var _console;\n\n  // This hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return typeof console === 'object' && console.log && (_console = console).log.apply(_console, arguments);\n}\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\n\nfunction save(namespaces) {\n  try {\n    if (namespaces) {\n      exports.storage.setItem('debug', namespaces);\n    } else {\n      exports.storage.removeItem('debug');\n    }\n  } catch (error) {// Swallow\n    // XXX (@Qix-) should we be logging these?\n  }\n}\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\n\nfunction load() {\n  var r;\n\n  try {\n    r = exports.storage.getItem('debug');\n  } catch (error) {} // Swallow\n  // XXX (@Qix-) should we be logging these?\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\n\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\n\nfunction localstorage() {\n  try {\n    // TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n    // The Browser also has localStorage in the global context.\n    return localStorage;\n  } catch (error) {// Swallow\n    // XXX (@Qix-) should we be logging these?\n  }\n}\n\nmodule.exports = require('./common')(exports);\nvar formatters = module.exports.formatters;\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n  try {\n    return JSON.stringify(v);\n  } catch (error) {\n    return '[UnexpectedJSONParseError]: ' + error.message;\n  }\n};","/**\n * Module dependencies.\n */\nvar debug = require('debug')('socket.io-parser');\n\nvar Emitter = require('component-emitter');\n\nvar binary = require('./binary');\n\nvar isArray = require('isarray');\n\nvar isBuf = require('./is-buffer');\n/**\n * Protocol version.\n *\n * @api public\n */\n\n\nexports.protocol = 4;\n/**\n * Packet types.\n *\n * @api public\n */\n\nexports.types = ['CONNECT', 'DISCONNECT', 'EVENT', 'ACK', 'ERROR', 'BINARY_EVENT', 'BINARY_ACK'];\n/**\n * Packet type `connect`.\n *\n * @api public\n */\n\nexports.CONNECT = 0;\n/**\n * Packet type `disconnect`.\n *\n * @api public\n */\n\nexports.DISCONNECT = 1;\n/**\n * Packet type `event`.\n *\n * @api public\n */\n\nexports.EVENT = 2;\n/**\n * Packet type `ack`.\n *\n * @api public\n */\n\nexports.ACK = 3;\n/**\n * Packet type `error`.\n *\n * @api public\n */\n\nexports.ERROR = 4;\n/**\n * Packet type 'binary event'\n *\n * @api public\n */\n\nexports.BINARY_EVENT = 5;\n/**\n * Packet type `binary ack`. For acks with binary arguments.\n *\n * @api public\n */\n\nexports.BINARY_ACK = 6;\n/**\n * Encoder constructor.\n *\n * @api public\n */\n\nexports.Encoder = Encoder;\n/**\n * Decoder constructor.\n *\n * @api public\n */\n\nexports.Decoder = Decoder;\n/**\n * A socket.io Encoder instance\n *\n * @api public\n */\n\nfunction Encoder() {}\n\nvar ERROR_PACKET = exports.ERROR + '\"encode error\"';\n/**\n * Encode a packet as a single string if non-binary, or as a\n * buffer sequence, depending on packet type.\n *\n * @param {Object} obj - packet object\n * @param {Function} callback - function to handle encodings (likely engine.write)\n * @return Calls callback with Array of encodings\n * @api public\n */\n\nEncoder.prototype.encode = function (obj, callback) {\n  debug('encoding packet %j', obj);\n\n  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\n    encodeAsBinary(obj, callback);\n  } else {\n    var encoding = encodeAsString(obj);\n    callback([encoding]);\n  }\n};\n/**\n * Encode packet as string.\n *\n * @param {Object} packet\n * @return {String} encoded\n * @api private\n */\n\n\nfunction encodeAsString(obj) {\n  // first is type\n  var str = '' + obj.type; // attachments if we have them\n\n  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\n    str += obj.attachments + '-';\n  } // if we have a namespace other than `/`\n  // we append it followed by a comma `,`\n\n\n  if (obj.nsp && '/' !== obj.nsp) {\n    str += obj.nsp + ',';\n  } // immediately followed by the id\n\n\n  if (null != obj.id) {\n    str += obj.id;\n  } // json data\n\n\n  if (null != obj.data) {\n    var payload = tryStringify(obj.data);\n\n    if (payload !== false) {\n      str += payload;\n    } else {\n      return ERROR_PACKET;\n    }\n  }\n\n  debug('encoded %j as %s', obj, str);\n  return str;\n}\n\nfunction tryStringify(str) {\n  try {\n    return JSON.stringify(str);\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * Encode packet as 'buffer sequence' by removing blobs, and\n * deconstructing packet into object with placeholders and\n * a list of buffers.\n *\n * @param {Object} packet\n * @return {Buffer} encoded\n * @api private\n */\n\n\nfunction encodeAsBinary(obj, callback) {\n  function writeEncoding(bloblessData) {\n    var deconstruction = binary.deconstructPacket(bloblessData);\n    var pack = encodeAsString(deconstruction.packet);\n    var buffers = deconstruction.buffers;\n    buffers.unshift(pack); // add packet info to beginning of data list\n\n    callback(buffers); // write all the buffers\n  }\n\n  binary.removeBlobs(obj, writeEncoding);\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n * @api public\n */\n\n\nfunction Decoder() {\n  this.reconstructor = null;\n}\n/**\n * Mix in `Emitter` with Decoder.\n */\n\n\nEmitter(Decoder.prototype);\n/**\n * Decodes an encoded packet string into packet JSON.\n *\n * @param {String} obj - encoded packet\n * @return {Object} packet\n * @api public\n */\n\nDecoder.prototype.add = function (obj) {\n  var packet;\n\n  if (typeof obj === 'string') {\n    packet = decodeString(obj);\n\n    if (exports.BINARY_EVENT === packet.type || exports.BINARY_ACK === packet.type) {\n      // binary packet's json\n      this.reconstructor = new BinaryReconstructor(packet); // no attachments, labeled binary but no binary data to follow\n\n      if (this.reconstructor.reconPack.attachments === 0) {\n        this.emit('decoded', packet);\n      }\n    } else {\n      // non-binary full packet\n      this.emit('decoded', packet);\n    }\n  } else if (isBuf(obj) || obj.base64) {\n    // raw binary data\n    if (!this.reconstructor) {\n      throw new Error('got binary data when not reconstructing a packet');\n    } else {\n      packet = this.reconstructor.takeBinaryData(obj);\n\n      if (packet) {\n        // received final buffer\n        this.reconstructor = null;\n        this.emit('decoded', packet);\n      }\n    }\n  } else {\n    throw new Error('Unknown type: ' + obj);\n  }\n};\n/**\n * Decode a packet String (JSON data)\n *\n * @param {String} str\n * @return {Object} packet\n * @api private\n */\n\n\nfunction decodeString(str) {\n  var i = 0; // look up type\n\n  var p = {\n    type: Number(str.charAt(0))\n  };\n\n  if (null == exports.types[p.type]) {\n    return error('unknown packet type ' + p.type);\n  } // look up attachments if type binary\n\n\n  if (exports.BINARY_EVENT === p.type || exports.BINARY_ACK === p.type) {\n    var buf = '';\n\n    while (str.charAt(++i) !== '-') {\n      buf += str.charAt(i);\n      if (i == str.length) break;\n    }\n\n    if (buf != Number(buf) || str.charAt(i) !== '-') {\n      throw new Error('Illegal attachments');\n    }\n\n    p.attachments = Number(buf);\n  } // look up namespace (if any)\n\n\n  if ('/' === str.charAt(i + 1)) {\n    p.nsp = '';\n\n    while (++i) {\n      var c = str.charAt(i);\n      if (',' === c) break;\n      p.nsp += c;\n      if (i === str.length) break;\n    }\n  } else {\n    p.nsp = '/';\n  } // look up id\n\n\n  var next = str.charAt(i + 1);\n\n  if ('' !== next && Number(next) == next) {\n    p.id = '';\n\n    while (++i) {\n      var c = str.charAt(i);\n\n      if (null == c || Number(c) != c) {\n        --i;\n        break;\n      }\n\n      p.id += str.charAt(i);\n      if (i === str.length) break;\n    }\n\n    p.id = Number(p.id);\n  } // look up json data\n\n\n  if (str.charAt(++i)) {\n    var payload = tryParse(str.substr(i));\n    var isPayloadValid = payload !== false && (p.type === exports.ERROR || isArray(payload));\n\n    if (isPayloadValid) {\n      p.data = payload;\n    } else {\n      return error('invalid payload');\n    }\n  }\n\n  debug('decoded %s as %j', str, p);\n  return p;\n}\n\nfunction tryParse(str) {\n  try {\n    return JSON.parse(str);\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * Deallocates a parser's resources\n *\n * @api public\n */\n\n\nDecoder.prototype.destroy = function () {\n  if (this.reconstructor) {\n    this.reconstructor.finishedReconstruction();\n  }\n};\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n * @api private\n */\n\n\nfunction BinaryReconstructor(packet) {\n  this.reconPack = packet;\n  this.buffers = [];\n}\n/**\n * Method to be called when binary data received from connection\n * after a BINARY_EVENT packet.\n *\n * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n * @return {null | Object} returns null if more binary data is expected or\n *   a reconstructed packet object if all buffers have been received.\n * @api private\n */\n\n\nBinaryReconstructor.prototype.takeBinaryData = function (binData) {\n  this.buffers.push(binData);\n\n  if (this.buffers.length === this.reconPack.attachments) {\n    // done with buffer list\n    var packet = binary.reconstructPacket(this.reconPack, this.buffers);\n    this.finishedReconstruction();\n    return packet;\n  }\n\n  return null;\n};\n/**\n * Cleans up binary packet reconstruction variables.\n *\n * @api private\n */\n\n\nBinaryReconstructor.prototype.finishedReconstruction = function () {\n  this.reconPack = null;\n  this.buffers = [];\n};\n\nfunction error(msg) {\n  return {\n    type: exports.ERROR,\n    data: 'parser error: ' + msg\n  };\n}","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n\n/* eslint-disable no-proto */\n'use strict';\n\nvar base64 = require('base64-js');\n\nvar ieee754 = require('ieee754');\n\nvar isArray = require('isarray');\n\nexports.Buffer = Buffer;\nexports.SlowBuffer = SlowBuffer;\nexports.INSPECT_MAX_BYTES = 50;\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\n\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined ? global.TYPED_ARRAY_SUPPORT : typedArraySupport();\n/*\n * Export kMaxLength after typed array support is determined.\n */\n\nexports.kMaxLength = kMaxLength();\n\nfunction typedArraySupport() {\n  try {\n    var arr = new Uint8Array(1);\n    arr.__proto__ = {\n      __proto__: Uint8Array.prototype,\n      foo: function foo() {\n        return 42;\n      }\n    };\n    return arr.foo() === 42 && // typed array instances can be augmented\n    typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n    arr.subarray(1, 1).byteLength === 0; // ie10 has broken `subarray`\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction kMaxLength() {\n  return Buffer.TYPED_ARRAY_SUPPORT ? 0x7fffffff : 0x3fffffff;\n}\n\nfunction createBuffer(that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length');\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length);\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length);\n    }\n\n    that.length = length;\n  }\n\n  return that;\n}\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\n\nfunction Buffer(arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length);\n  } // Common case.\n\n\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error('If encoding is specified then the first argument must be a string');\n    }\n\n    return allocUnsafe(this, arg);\n  }\n\n  return from(this, arg, encodingOrOffset, length);\n}\n\nBuffer.poolSize = 8192; // not used by this implementation\n// TODO: Legacy, not needed anymore. Remove in next major version.\n\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype;\n  return arr;\n};\n\nfunction from(that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number');\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length);\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset);\n  }\n\n  return fromObject(that, value);\n}\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\n\n\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length);\n};\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype;\n  Buffer.__proto__ = Uint8Array;\n\n  if (typeof Symbol !== 'undefined' && Symbol.species && Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    });\n  }\n}\n\nfunction assertSize(size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number');\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative');\n  }\n}\n\nfunction alloc(that, size, fill, encoding) {\n  assertSize(size);\n\n  if (size <= 0) {\n    return createBuffer(that, size);\n  }\n\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string' ? createBuffer(that, size).fill(fill, encoding) : createBuffer(that, size).fill(fill);\n  }\n\n  return createBuffer(that, size);\n}\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\n\n\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding);\n};\n\nfunction allocUnsafe(that, size) {\n  assertSize(size);\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0);\n\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0;\n    }\n  }\n\n  return that;\n}\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\n\n\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size);\n};\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\n\n\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size);\n};\n\nfunction fromString(that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8';\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding');\n  }\n\n  var length = byteLength(string, encoding) | 0;\n  that = createBuffer(that, length);\n  var actual = that.write(string, encoding);\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual);\n  }\n\n  return that;\n}\n\nfunction fromArrayLike(that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0;\n  that = createBuffer(that, length);\n\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255;\n  }\n\n  return that;\n}\n\nfunction fromArrayBuffer(that, array, byteOffset, length) {\n  array.byteLength; // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds');\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds');\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array);\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset);\n  } else {\n    array = new Uint8Array(array, byteOffset, length);\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array;\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array);\n  }\n\n  return that;\n}\n\nfunction fromObject(that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0;\n    that = createBuffer(that, len);\n\n    if (that.length === 0) {\n      return that;\n    }\n\n    obj.copy(that, 0, 0, len);\n    return that;\n  }\n\n  if (obj) {\n    if (typeof ArrayBuffer !== 'undefined' && obj.buffer instanceof ArrayBuffer || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0);\n      }\n\n      return fromArrayLike(that, obj);\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data);\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.');\n}\n\nfunction checked(length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + kMaxLength().toString(16) + ' bytes');\n  }\n\n  return length | 0;\n}\n\nfunction SlowBuffer(length) {\n  if (+length != length) {\n    // eslint-disable-line eqeqeq\n    length = 0;\n  }\n\n  return Buffer.alloc(+length);\n}\n\nBuffer.isBuffer = function isBuffer(b) {\n  return !!(b != null && b._isBuffer);\n};\n\nBuffer.compare = function compare(a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers');\n  }\n\n  if (a === b) return 0;\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) return -1;\n  if (y < x) return 1;\n  return 0;\n};\n\nBuffer.isEncoding = function isEncoding(encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true;\n\n    default:\n      return false;\n  }\n};\n\nBuffer.concat = function concat(list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers');\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0);\n  }\n\n  var i;\n\n  if (length === undefined) {\n    length = 0;\n\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length;\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length);\n  var pos = 0;\n\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i];\n\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers');\n    }\n\n    buf.copy(buffer, pos);\n    pos += buf.length;\n  }\n\n  return buffer;\n};\n\nfunction byteLength(string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length;\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' && (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength;\n  }\n\n  if (typeof string !== 'string') {\n    string = '' + string;\n  }\n\n  var len = string.length;\n  if (len === 0) return 0; // Use a for loop to avoid recursion\n\n  var loweredCase = false;\n\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len;\n\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length;\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2;\n\n      case 'hex':\n        return len >>> 1;\n\n      case 'base64':\n        return base64ToBytes(string).length;\n\n      default:\n        if (loweredCase) return utf8ToBytes(string).length; // assume utf8\n\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\n\nBuffer.byteLength = byteLength;\n\nfunction slowToString(encoding, start, end) {\n  var loweredCase = false; // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n\n  if (start === undefined || start < 0) {\n    start = 0;\n  } // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n\n\n  if (start > this.length) {\n    return '';\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length;\n  }\n\n  if (end <= 0) {\n    return '';\n  } // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n\n\n  end >>>= 0;\n  start >>>= 0;\n\n  if (end <= start) {\n    return '';\n  }\n\n  if (!encoding) encoding = 'utf8';\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end);\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end);\n\n      case 'ascii':\n        return asciiSlice(this, start, end);\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end);\n\n      case 'base64':\n        return base64Slice(this, start, end);\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end);\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n        encoding = (encoding + '').toLowerCase();\n        loweredCase = true;\n    }\n  }\n} // The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\n\n\nBuffer.prototype._isBuffer = true;\n\nfunction swap(b, n, m) {\n  var i = b[n];\n  b[n] = b[m];\n  b[m] = i;\n}\n\nBuffer.prototype.swap16 = function swap16() {\n  var len = this.length;\n\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits');\n  }\n\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1);\n  }\n\n  return this;\n};\n\nBuffer.prototype.swap32 = function swap32() {\n  var len = this.length;\n\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits');\n  }\n\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3);\n    swap(this, i + 1, i + 2);\n  }\n\n  return this;\n};\n\nBuffer.prototype.swap64 = function swap64() {\n  var len = this.length;\n\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits');\n  }\n\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7);\n    swap(this, i + 1, i + 6);\n    swap(this, i + 2, i + 5);\n    swap(this, i + 3, i + 4);\n  }\n\n  return this;\n};\n\nBuffer.prototype.toString = function toString() {\n  var length = this.length | 0;\n  if (length === 0) return '';\n  if (arguments.length === 0) return utf8Slice(this, 0, length);\n  return slowToString.apply(this, arguments);\n};\n\nBuffer.prototype.equals = function equals(b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');\n  if (this === b) return true;\n  return Buffer.compare(this, b) === 0;\n};\n\nBuffer.prototype.inspect = function inspect() {\n  var str = '';\n  var max = exports.INSPECT_MAX_BYTES;\n\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');\n    if (this.length > max) str += ' ... ';\n  }\n\n  return '<Buffer ' + str + '>';\n};\n\nBuffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer');\n  }\n\n  if (start === undefined) {\n    start = 0;\n  }\n\n  if (end === undefined) {\n    end = target ? target.length : 0;\n  }\n\n  if (thisStart === undefined) {\n    thisStart = 0;\n  }\n\n  if (thisEnd === undefined) {\n    thisEnd = this.length;\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index');\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0;\n  }\n\n  if (thisStart >= thisEnd) {\n    return -1;\n  }\n\n  if (start >= end) {\n    return 1;\n  }\n\n  start >>>= 0;\n  end >>>= 0;\n  thisStart >>>= 0;\n  thisEnd >>>= 0;\n  if (this === target) return 0;\n  var x = thisEnd - thisStart;\n  var y = end - start;\n  var len = Math.min(x, y);\n  var thisCopy = this.slice(thisStart, thisEnd);\n  var targetCopy = target.slice(start, end);\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i];\n      y = targetCopy[i];\n      break;\n    }\n  }\n\n  if (x < y) return -1;\n  if (y < x) return 1;\n  return 0;\n}; // Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\n\n\nfunction bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1; // Normalize byteOffset\n\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset;\n    byteOffset = 0;\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff;\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000;\n  }\n\n  byteOffset = +byteOffset; // Coerce to Number.\n\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : buffer.length - 1;\n  } // Normalize byteOffset: negative offsets start from the end of the buffer\n\n\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1;else byteOffset = buffer.length - 1;\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0;else return -1;\n  } // Normalize val\n\n\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding);\n  } // Finally, search either indexOf (if dir is true) or lastIndexOf\n\n\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1;\n    }\n\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir);\n  } else if (typeof val === 'number') {\n    val = val & 0xFF; // Search for a byte value [0-255]\n\n    if (Buffer.TYPED_ARRAY_SUPPORT && typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);\n      }\n    }\n\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);\n  }\n\n  throw new TypeError('val must be string, number or Buffer');\n}\n\nfunction arrayIndexOf(arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1;\n  var arrLength = arr.length;\n  var valLength = val.length;\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase();\n\n    if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1;\n      }\n\n      indexSize = 2;\n      arrLength /= 2;\n      valLength /= 2;\n      byteOffset /= 2;\n    }\n  }\n\n  function read(buf, i) {\n    if (indexSize === 1) {\n      return buf[i];\n    } else {\n      return buf.readUInt16BE(i * indexSize);\n    }\n  }\n\n  var i;\n\n  if (dir) {\n    var foundIndex = -1;\n\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i;\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex;\n        foundIndex = -1;\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true;\n\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false;\n          break;\n        }\n      }\n\n      if (found) return i;\n    }\n  }\n\n  return -1;\n}\n\nBuffer.prototype.includes = function includes(val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1;\n};\n\nBuffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true);\n};\n\nBuffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false);\n};\n\nfunction hexWrite(buf, string, offset, length) {\n  offset = Number(offset) || 0;\n  var remaining = buf.length - offset;\n\n  if (!length) {\n    length = remaining;\n  } else {\n    length = Number(length);\n\n    if (length > remaining) {\n      length = remaining;\n    }\n  } // must be an even number of digits\n\n\n  var strLen = string.length;\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string');\n\n  if (length > strLen / 2) {\n    length = strLen / 2;\n  }\n\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16);\n    if (isNaN(parsed)) return i;\n    buf[offset + i] = parsed;\n  }\n\n  return i;\n}\n\nfunction utf8Write(buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);\n}\n\nfunction asciiWrite(buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length);\n}\n\nfunction latin1Write(buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length);\n}\n\nfunction base64Write(buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length);\n}\n\nfunction ucs2Write(buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);\n}\n\nBuffer.prototype.write = function write(string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8';\n    length = this.length;\n    offset = 0; // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset;\n    length = this.length;\n    offset = 0; // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0;\n\n    if (isFinite(length)) {\n      length = length | 0;\n      if (encoding === undefined) encoding = 'utf8';\n    } else {\n      encoding = length;\n      length = undefined;\n    } // legacy write(string, encoding, offset, length) - remove in v0.13\n\n  } else {\n    throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');\n  }\n\n  var remaining = this.length - offset;\n  if (length === undefined || length > remaining) length = remaining;\n\n  if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds');\n  }\n\n  if (!encoding) encoding = 'utf8';\n  var loweredCase = false;\n\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length);\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length);\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length);\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length);\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length);\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length);\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n};\n\nBuffer.prototype.toJSON = function toJSON() {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  };\n};\n\nfunction base64Slice(buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf);\n  } else {\n    return base64.fromByteArray(buf.slice(start, end));\n  }\n}\n\nfunction utf8Slice(buf, start, end) {\n  end = Math.min(buf.length, end);\n  var res = [];\n  var i = start;\n\n  while (i < end) {\n    var firstByte = buf[i];\n    var codePoint = null;\n    var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint;\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte;\n          }\n\n          break;\n\n        case 2:\n          secondByte = buf[i + 1];\n\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;\n\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint;\n            }\n          }\n\n          break;\n\n        case 3:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;\n\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint;\n            }\n          }\n\n          break;\n\n        case 4:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          fourthByte = buf[i + 3];\n\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;\n\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint;\n            }\n          }\n\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD;\n      bytesPerSequence = 1;\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000;\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n      codePoint = 0xDC00 | codePoint & 0x3FF;\n    }\n\n    res.push(codePoint);\n    i += bytesPerSequence;\n  }\n\n  return decodeCodePointsArray(res);\n} // Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\n\n\nvar MAX_ARGUMENTS_LENGTH = 0x1000;\n\nfunction decodeCodePointsArray(codePoints) {\n  var len = codePoints.length;\n\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints); // avoid extra slice()\n  } // Decode in chunks to avoid \"call stack size exceeded\".\n\n\n  var res = '';\n  var i = 0;\n\n  while (i < len) {\n    res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n  }\n\n  return res;\n}\n\nfunction asciiSlice(buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F);\n  }\n\n  return ret;\n}\n\nfunction latin1Slice(buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i]);\n  }\n\n  return ret;\n}\n\nfunction hexSlice(buf, start, end) {\n  var len = buf.length;\n  if (!start || start < 0) start = 0;\n  if (!end || end < 0 || end > len) end = len;\n  var out = '';\n\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i]);\n  }\n\n  return out;\n}\n\nfunction utf16leSlice(buf, start, end) {\n  var bytes = buf.slice(start, end);\n  var res = '';\n\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n  }\n\n  return res;\n}\n\nBuffer.prototype.slice = function slice(start, end) {\n  var len = this.length;\n  start = ~~start;\n  end = end === undefined ? len : ~~end;\n\n  if (start < 0) {\n    start += len;\n    if (start < 0) start = 0;\n  } else if (start > len) {\n    start = len;\n  }\n\n  if (end < 0) {\n    end += len;\n    if (end < 0) end = 0;\n  } else if (end > len) {\n    end = len;\n  }\n\n  if (end < start) end = start;\n  var newBuf;\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end);\n    newBuf.__proto__ = Buffer.prototype;\n  } else {\n    var sliceLen = end - start;\n    newBuf = new Buffer(sliceLen, undefined);\n\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start];\n    }\n  }\n\n  return newBuf;\n};\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\n\n\nfunction checkOffset(offset, ext, length) {\n  if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n\n  return val;\n};\n\nBuffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length);\n  }\n\n  var val = this[offset + --byteLength];\n  var mul = 1;\n\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul;\n  }\n\n  return val;\n};\n\nBuffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  return this[offset];\n};\n\nBuffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] | this[offset + 1] << 8;\n};\n\nBuffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] << 8 | this[offset + 1];\n};\n\nBuffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;\n};\n\nBuffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\n};\n\nBuffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n\n  mul *= 0x80;\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n  return val;\n};\n\nBuffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var i = byteLength;\n  var mul = 1;\n  var val = this[offset + --i];\n\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul;\n  }\n\n  mul *= 0x80;\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n  return val;\n};\n\nBuffer.prototype.readInt8 = function readInt8(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  if (!(this[offset] & 0x80)) return this[offset];\n  return (0xff - this[offset] + 1) * -1;\n};\n\nBuffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset] | this[offset + 1] << 8;\n  return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\n\nBuffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset + 1] | this[offset] << 8;\n  return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\n\nBuffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\n};\n\nBuffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\n};\n\nBuffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return ieee754.read(this, offset, true, 23, 4);\n};\n\nBuffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return ieee754.read(this, offset, false, 23, 4);\n};\n\nBuffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return ieee754.read(this, offset, true, 52, 8);\n};\n\nBuffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return ieee754.read(this, offset, false, 52, 8);\n};\n\nfunction checkInt(buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance');\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds');\n  if (offset + ext > buf.length) throw new RangeError('Index out of range');\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var mul = 1;\n  var i = 0;\n  this[offset] = value & 0xFF;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = value / mul & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  this[offset + i] = value & 0xFF;\n\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = value / mul & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  this[offset] = value & 0xff;\n  return offset + 1;\n};\n\nfunction objectWriteUInt16(buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1;\n\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & 0xff << 8 * (littleEndian ? i : 1 - i)) >>> (littleEndian ? i : 1 - i) * 8;\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n\n  return offset + 2;\n};\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n\n  return offset + 2;\n};\n\nfunction objectWriteUInt32(buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1;\n\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = value >>> (littleEndian ? i : 3 - i) * 8 & 0xff;\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = value >>> 24;\n    this[offset + 2] = value >>> 16;\n    this[offset + 1] = value >>> 8;\n    this[offset] = value & 0xff;\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n\n  return offset + 4;\n};\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n\n  return offset + 4;\n};\n\nBuffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = 0;\n  var mul = 1;\n  var sub = 0;\n  this[offset] = value & 0xFF;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1;\n    }\n\n    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  var sub = 0;\n  this[offset + i] = value & 0xFF;\n\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1;\n    }\n\n    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  if (value < 0) value = 0xff + value + 1;\n  this[offset] = value & 0xff;\n  return offset + 1;\n};\n\nBuffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n\n  return offset + 2;\n};\n\nBuffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n\n  return offset + 2;\n};\n\nBuffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n    this[offset + 2] = value >>> 16;\n    this[offset + 3] = value >>> 24;\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n\n  return offset + 4;\n};\n\nBuffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  if (value < 0) value = 0xffffffff + value + 1;\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n\n  return offset + 4;\n};\n\nfunction checkIEEE754(buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range');\n  if (offset < 0) throw new RangeError('Index out of range');\n}\n\nfunction writeFloat(buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38);\n  }\n\n  ieee754.write(buf, value, offset, littleEndian, 23, 4);\n  return offset + 4;\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert);\n};\n\nBuffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert);\n};\n\nfunction writeDouble(buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308);\n  }\n\n  ieee754.write(buf, value, offset, littleEndian, 52, 8);\n  return offset + 8;\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert);\n};\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert);\n}; // copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n\n\nBuffer.prototype.copy = function copy(target, targetStart, start, end) {\n  if (!start) start = 0;\n  if (!end && end !== 0) end = this.length;\n  if (targetStart >= target.length) targetStart = target.length;\n  if (!targetStart) targetStart = 0;\n  if (end > 0 && end < start) end = start; // Copy 0 bytes; we're done\n\n  if (end === start) return 0;\n  if (target.length === 0 || this.length === 0) return 0; // Fatal error conditions\n\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds');\n  }\n\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds');\n  if (end < 0) throw new RangeError('sourceEnd out of bounds'); // Are we oob?\n\n  if (end > this.length) end = this.length;\n\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start;\n  }\n\n  var len = end - start;\n  var i;\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else {\n    Uint8Array.prototype.set.call(target, this.subarray(start, start + len), targetStart);\n  }\n\n  return len;\n}; // Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\n\n\nBuffer.prototype.fill = function fill(val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start;\n      start = 0;\n      end = this.length;\n    } else if (typeof end === 'string') {\n      encoding = end;\n      end = this.length;\n    }\n\n    if (val.length === 1) {\n      var code = val.charCodeAt(0);\n\n      if (code < 256) {\n        val = code;\n      }\n    }\n\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string');\n    }\n\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding);\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255;\n  } // Invalid ranges are not set to a default, so can range check early.\n\n\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index');\n  }\n\n  if (end <= start) {\n    return this;\n  }\n\n  start = start >>> 0;\n  end = end === undefined ? this.length : end >>> 0;\n  if (!val) val = 0;\n  var i;\n\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val;\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val) ? val : utf8ToBytes(new Buffer(val, encoding).toString());\n    var len = bytes.length;\n\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len];\n    }\n  }\n\n  return this;\n}; // HELPER FUNCTIONS\n// ================\n\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g;\n\nfunction base64clean(str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, ''); // Node converts strings with length < 2 to ''\n\n  if (str.length < 2) return ''; // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n\n  while (str.length % 4 !== 0) {\n    str = str + '=';\n  }\n\n  return str;\n}\n\nfunction stringtrim(str) {\n  if (str.trim) return str.trim();\n  return str.replace(/^\\s+|\\s+$/g, '');\n}\n\nfunction toHex(n) {\n  if (n < 16) return '0' + n.toString(16);\n  return n.toString(16);\n}\n\nfunction utf8ToBytes(string, units) {\n  units = units || Infinity;\n  var codePoint;\n  var length = string.length;\n  var leadSurrogate = null;\n  var bytes = [];\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i); // is surrogate component\n\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        } // valid lead\n\n\n        leadSurrogate = codePoint;\n        continue;\n      } // 2 leads in a row\n\n\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n        leadSurrogate = codePoint;\n        continue;\n      } // valid surrogate pair\n\n\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n    }\n\n    leadSurrogate = null; // encode utf8\n\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break;\n      bytes.push(codePoint);\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break;\n      bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break;\n      bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break;\n      bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n    } else {\n      throw new Error('Invalid code point');\n    }\n  }\n\n  return bytes;\n}\n\nfunction asciiToBytes(str) {\n  var byteArray = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF);\n  }\n\n  return byteArray;\n}\n\nfunction utf16leToBytes(str, units) {\n  var c, hi, lo;\n  var byteArray = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break;\n    c = str.charCodeAt(i);\n    hi = c >> 8;\n    lo = c % 256;\n    byteArray.push(lo);\n    byteArray.push(hi);\n  }\n\n  return byteArray;\n}\n\nfunction base64ToBytes(str) {\n  return base64.toByteArray(base64clean(str));\n}\n\nfunction blitBuffer(src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if (i + offset >= dst.length || i >= src.length) break;\n    dst[i + offset] = src[i];\n  }\n\n  return i;\n}\n\nfunction isnan(val) {\n  return val !== val; // eslint-disable-line no-self-compare\n}","// browser shim for xmlhttprequest module\nvar hasCORS = require('has-cors');\n\nmodule.exports = function (opts) {\n  var xdomain = opts.xdomain; // scheme must be same when usign XDomainRequest\n  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n\n  var xscheme = opts.xscheme; // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.\n  // https://github.com/Automattic/engine.io-client/pull/217\n\n  var enablesXDR = opts.enablesXDR; // XMLHttpRequest can be disabled on IE\n\n  try {\n    if ('undefined' !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n      return new XMLHttpRequest();\n    }\n  } catch (e) {} // Use XDomainRequest for IE8 if enablesXDR is true\n  // because loading bar keeps flashing when using jsonp-polling\n  // https://github.com/yujiosaka/socke.io-ie8-loading-example\n\n\n  try {\n    if ('undefined' !== typeof XDomainRequest && !xscheme && enablesXDR) {\n      return new XDomainRequest();\n    }\n  } catch (e) {}\n\n  if (!xdomain) {\n    try {\n      return new self[['Active'].concat('Object').join('X')]('Microsoft.XMLHTTP');\n    } catch (e) {}\n  }\n};","/**\n * Module dependencies.\n */\nvar parser = require('engine.io-parser');\n\nvar Emitter = require('component-emitter');\n/**\n * Module exports.\n */\n\n\nmodule.exports = Transport;\n/**\n * Transport abstract constructor.\n *\n * @param {Object} options.\n * @api private\n */\n\nfunction Transport(opts) {\n  this.path = opts.path;\n  this.hostname = opts.hostname;\n  this.port = opts.port;\n  this.secure = opts.secure;\n  this.query = opts.query;\n  this.timestampParam = opts.timestampParam;\n  this.timestampRequests = opts.timestampRequests;\n  this.readyState = '';\n  this.agent = opts.agent || false;\n  this.socket = opts.socket;\n  this.enablesXDR = opts.enablesXDR;\n  this.withCredentials = opts.withCredentials; // SSL options for Node.js client\n\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n  this.forceNode = opts.forceNode; // results of ReactNative environment detection\n\n  this.isReactNative = opts.isReactNative; // other options for Node.js client\n\n  this.extraHeaders = opts.extraHeaders;\n  this.localAddress = opts.localAddress;\n}\n/**\n * Mix in `Emitter`.\n */\n\n\nEmitter(Transport.prototype);\n/**\n * Emits an error.\n *\n * @param {String} str\n * @return {Transport} for chaining\n * @api public\n */\n\nTransport.prototype.onError = function (msg, desc) {\n  var err = new Error(msg);\n  err.type = 'TransportError';\n  err.description = desc;\n  this.emit('error', err);\n  return this;\n};\n/**\n * Opens the transport.\n *\n * @api public\n */\n\n\nTransport.prototype.open = function () {\n  if ('closed' === this.readyState || '' === this.readyState) {\n    this.readyState = 'opening';\n    this.doOpen();\n  }\n\n  return this;\n};\n/**\n * Closes the transport.\n *\n * @api private\n */\n\n\nTransport.prototype.close = function () {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.doClose();\n    this.onClose();\n  }\n\n  return this;\n};\n/**\n * Sends multiple packets.\n *\n * @param {Array} packets\n * @api private\n */\n\n\nTransport.prototype.send = function (packets) {\n  if ('open' === this.readyState) {\n    this.write(packets);\n  } else {\n    throw new Error('Transport not open');\n  }\n};\n/**\n * Called upon open\n *\n * @api private\n */\n\n\nTransport.prototype.onOpen = function () {\n  this.readyState = 'open';\n  this.writable = true;\n  this.emit('open');\n};\n/**\n * Called with data.\n *\n * @param {String} data\n * @api private\n */\n\n\nTransport.prototype.onData = function (data) {\n  var packet = parser.decodePacket(data, this.socket.binaryType);\n  this.onPacket(packet);\n};\n/**\n * Called with a decoded packet.\n */\n\n\nTransport.prototype.onPacket = function (packet) {\n  this.emit('packet', packet);\n};\n/**\n * Called upon close.\n *\n * @api private\n */\n\n\nTransport.prototype.onClose = function () {\n  this.readyState = 'closed';\n  this.emit('close');\n};","/**\r\n * Parses an URI\r\n *\r\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\r\n * @api private\r\n */\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nvar parts = ['source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'];\n\nmodule.exports = function parseuri(str) {\n  var src = str,\n      b = str.indexOf('['),\n      e = str.indexOf(']');\n\n  if (b != -1 && e != -1) {\n    str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n  }\n\n  var m = re.exec(str || ''),\n      uri = {},\n      i = 14;\n\n  while (i--) {\n    uri[parts[i]] = m[i] || '';\n  }\n\n  if (b != -1 && e != -1) {\n    uri.source = src;\n    uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n    uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n    uri.ipv6uri = true;\n  }\n\n  return uri;\n};","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};","module.exports = isBuf;\nvar withNativeBuffer = typeof Buffer === 'function' && typeof Buffer.isBuffer === 'function';\nvar withNativeArrayBuffer = typeof ArrayBuffer === 'function';\n\nvar isView = function isView(obj) {\n  return typeof ArrayBuffer.isView === 'function' ? ArrayBuffer.isView(obj) : obj.buffer instanceof ArrayBuffer;\n};\n/**\n * Returns true if obj is a buffer or an arraybuffer.\n *\n * @api private\n */\n\n\nfunction isBuf(obj) {\n  return withNativeBuffer && Buffer.isBuffer(obj) || withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj));\n}","/**\n * Module dependencies.\n */\nvar eio = require('engine.io-client');\n\nvar Socket = require('./socket');\n\nvar Emitter = require('component-emitter');\n\nvar parser = require('socket.io-parser');\n\nvar on = require('./on');\n\nvar bind = require('component-bind');\n\nvar debug = require('debug')('socket.io-client:manager');\n\nvar indexOf = require('indexof');\n\nvar Backoff = require('backo2');\n/**\n * IE6+ hasOwnProperty\n */\n\n\nvar has = Object.prototype.hasOwnProperty;\n/**\n * Module exports\n */\n\nmodule.exports = Manager;\n/**\n * `Manager` constructor.\n *\n * @param {String} engine instance or engine uri/opts\n * @param {Object} options\n * @api public\n */\n\nfunction Manager(uri, opts) {\n  if (!(this instanceof Manager)) return new Manager(uri, opts);\n\n  if (uri && 'object' === typeof uri) {\n    opts = uri;\n    uri = undefined;\n  }\n\n  opts = opts || {};\n  opts.path = opts.path || '/socket.io';\n  this.nsps = {};\n  this.subs = [];\n  this.opts = opts;\n  this.reconnection(opts.reconnection !== false);\n  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n  this.reconnectionDelay(opts.reconnectionDelay || 1000);\n  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n  this.randomizationFactor(opts.randomizationFactor || 0.5);\n  this.backoff = new Backoff({\n    min: this.reconnectionDelay(),\n    max: this.reconnectionDelayMax(),\n    jitter: this.randomizationFactor()\n  });\n  this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n  this.readyState = 'closed';\n  this.uri = uri;\n  this.connecting = [];\n  this.lastPing = null;\n  this.encoding = false;\n  this.packetBuffer = [];\n\n  var _parser = opts.parser || parser;\n\n  this.encoder = new _parser.Encoder();\n  this.decoder = new _parser.Decoder();\n  this.autoConnect = opts.autoConnect !== false;\n  if (this.autoConnect) this.open();\n}\n/**\n * Propagate given event to sockets and emit on `this`\n *\n * @api private\n */\n\n\nManager.prototype.emitAll = function () {\n  this.emit.apply(this, arguments);\n\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);\n    }\n  }\n};\n/**\n * Update `socket.id` of all sockets\n *\n * @api private\n */\n\n\nManager.prototype.updateSocketIds = function () {\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].id = this.generateId(nsp);\n    }\n  }\n};\n/**\n * generate `socket.id` for the given `nsp`\n *\n * @param {String} nsp\n * @return {String}\n * @api private\n */\n\n\nManager.prototype.generateId = function (nsp) {\n  return (nsp === '/' ? '' : nsp + '#') + this.engine.id;\n};\n/**\n * Mix in `Emitter`.\n */\n\n\nEmitter(Manager.prototype);\n/**\n * Sets the `reconnection` config.\n *\n * @param {Boolean} true/false if it should automatically reconnect\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnection = function (v) {\n  if (!arguments.length) return this._reconnection;\n  this._reconnection = !!v;\n  return this;\n};\n/**\n * Sets the reconnection attempts config.\n *\n * @param {Number} max reconnection attempts before giving up\n * @return {Manager} self or value\n * @api public\n */\n\n\nManager.prototype.reconnectionAttempts = function (v) {\n  if (!arguments.length) return this._reconnectionAttempts;\n  this._reconnectionAttempts = v;\n  return this;\n};\n/**\n * Sets the delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\n\nManager.prototype.reconnectionDelay = function (v) {\n  if (!arguments.length) return this._reconnectionDelay;\n  this._reconnectionDelay = v;\n  this.backoff && this.backoff.setMin(v);\n  return this;\n};\n\nManager.prototype.randomizationFactor = function (v) {\n  if (!arguments.length) return this._randomizationFactor;\n  this._randomizationFactor = v;\n  this.backoff && this.backoff.setJitter(v);\n  return this;\n};\n/**\n * Sets the maximum delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\n\nManager.prototype.reconnectionDelayMax = function (v) {\n  if (!arguments.length) return this._reconnectionDelayMax;\n  this._reconnectionDelayMax = v;\n  this.backoff && this.backoff.setMax(v);\n  return this;\n};\n/**\n * Sets the connection timeout. `false` to disable\n *\n * @return {Manager} self or value\n * @api public\n */\n\n\nManager.prototype.timeout = function (v) {\n  if (!arguments.length) return this._timeout;\n  this._timeout = v;\n  return this;\n};\n/**\n * Starts trying to reconnect if reconnection is enabled and we have not\n * started reconnecting yet\n *\n * @api private\n */\n\n\nManager.prototype.maybeReconnectOnOpen = function () {\n  // Only try to reconnect if it's the first time we're connecting\n  if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {\n    // keeps reconnection from firing twice for the same reconnection loop\n    this.reconnect();\n  }\n};\n/**\n * Sets the current transport `socket`.\n *\n * @param {Function} optional, callback\n * @return {Manager} self\n * @api public\n */\n\n\nManager.prototype.open = Manager.prototype.connect = function (fn, opts) {\n  debug('readyState %s', this.readyState);\n  if (~this.readyState.indexOf('open')) return this;\n  debug('opening %s', this.uri);\n  this.engine = eio(this.uri, this.opts);\n  var socket = this.engine;\n  var self = this;\n  this.readyState = 'opening';\n  this.skipReconnect = false; // emit `open`\n\n  var openSub = on(socket, 'open', function () {\n    self.onopen();\n    fn && fn();\n  }); // emit `connect_error`\n\n  var errorSub = on(socket, 'error', function (data) {\n    debug('connect_error');\n    self.cleanup();\n    self.readyState = 'closed';\n    self.emitAll('connect_error', data);\n\n    if (fn) {\n      var err = new Error('Connection error');\n      err.data = data;\n      fn(err);\n    } else {\n      // Only do this if there is no fn to handle the error\n      self.maybeReconnectOnOpen();\n    }\n  }); // emit `connect_timeout`\n\n  if (false !== this._timeout) {\n    var timeout = this._timeout;\n    debug('connect attempt will timeout after %d', timeout); // set timer\n\n    var timer = setTimeout(function () {\n      debug('connect attempt timed out after %d', timeout);\n      openSub.destroy();\n      socket.close();\n      socket.emit('error', 'timeout');\n      self.emitAll('connect_timeout', timeout);\n    }, timeout);\n    this.subs.push({\n      destroy: function destroy() {\n        clearTimeout(timer);\n      }\n    });\n  }\n\n  this.subs.push(openSub);\n  this.subs.push(errorSub);\n  return this;\n};\n/**\n * Called upon transport open.\n *\n * @api private\n */\n\n\nManager.prototype.onopen = function () {\n  debug('open'); // clear old subs\n\n  this.cleanup(); // mark as open\n\n  this.readyState = 'open';\n  this.emit('open'); // add new subs\n\n  var socket = this.engine;\n  this.subs.push(on(socket, 'data', bind(this, 'ondata')));\n  this.subs.push(on(socket, 'ping', bind(this, 'onping')));\n  this.subs.push(on(socket, 'pong', bind(this, 'onpong')));\n  this.subs.push(on(socket, 'error', bind(this, 'onerror')));\n  this.subs.push(on(socket, 'close', bind(this, 'onclose')));\n  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));\n};\n/**\n * Called upon a ping.\n *\n * @api private\n */\n\n\nManager.prototype.onping = function () {\n  this.lastPing = new Date();\n  this.emitAll('ping');\n};\n/**\n * Called upon a packet.\n *\n * @api private\n */\n\n\nManager.prototype.onpong = function () {\n  this.emitAll('pong', new Date() - this.lastPing);\n};\n/**\n * Called with data.\n *\n * @api private\n */\n\n\nManager.prototype.ondata = function (data) {\n  this.decoder.add(data);\n};\n/**\n * Called when parser fully decodes a packet.\n *\n * @api private\n */\n\n\nManager.prototype.ondecoded = function (packet) {\n  this.emit('packet', packet);\n};\n/**\n * Called upon socket error.\n *\n * @api private\n */\n\n\nManager.prototype.onerror = function (err) {\n  debug('error', err);\n  this.emitAll('error', err);\n};\n/**\n * Creates a new socket for the given `nsp`.\n *\n * @return {Socket}\n * @api public\n */\n\n\nManager.prototype.socket = function (nsp, opts) {\n  var socket = this.nsps[nsp];\n\n  if (!socket) {\n    socket = new Socket(this, nsp, opts);\n    this.nsps[nsp] = socket;\n    var self = this;\n    socket.on('connecting', onConnecting);\n    socket.on('connect', function () {\n      socket.id = self.generateId(nsp);\n    });\n\n    if (this.autoConnect) {\n      // manually call here since connecting event is fired before listening\n      onConnecting();\n    }\n  }\n\n  function onConnecting() {\n    if (!~indexOf(self.connecting, socket)) {\n      self.connecting.push(socket);\n    }\n  }\n\n  return socket;\n};\n/**\n * Called upon a socket close.\n *\n * @param {Socket} socket\n */\n\n\nManager.prototype.destroy = function (socket) {\n  var index = indexOf(this.connecting, socket);\n  if (~index) this.connecting.splice(index, 1);\n  if (this.connecting.length) return;\n  this.close();\n};\n/**\n * Writes a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\n\nManager.prototype.packet = function (packet) {\n  debug('writing packet %j', packet);\n  var self = this;\n  if (packet.query && packet.type === 0) packet.nsp += '?' + packet.query;\n\n  if (!self.encoding) {\n    // encode, then write to engine with result\n    self.encoding = true;\n    this.encoder.encode(packet, function (encodedPackets) {\n      for (var i = 0; i < encodedPackets.length; i++) {\n        self.engine.write(encodedPackets[i], packet.options);\n      }\n\n      self.encoding = false;\n      self.processPacketQueue();\n    });\n  } else {\n    // add packet to the queue\n    self.packetBuffer.push(packet);\n  }\n};\n/**\n * If packet buffer is non-empty, begins encoding the\n * next packet in line.\n *\n * @api private\n */\n\n\nManager.prototype.processPacketQueue = function () {\n  if (this.packetBuffer.length > 0 && !this.encoding) {\n    var pack = this.packetBuffer.shift();\n    this.packet(pack);\n  }\n};\n/**\n * Clean up transport subscriptions and packet buffer.\n *\n * @api private\n */\n\n\nManager.prototype.cleanup = function () {\n  debug('cleanup');\n  var subsLength = this.subs.length;\n\n  for (var i = 0; i < subsLength; i++) {\n    var sub = this.subs.shift();\n    sub.destroy();\n  }\n\n  this.packetBuffer = [];\n  this.encoding = false;\n  this.lastPing = null;\n  this.decoder.destroy();\n};\n/**\n * Close the current socket.\n *\n * @api private\n */\n\n\nManager.prototype.close = Manager.prototype.disconnect = function () {\n  debug('disconnect');\n  this.skipReconnect = true;\n  this.reconnecting = false;\n\n  if ('opening' === this.readyState) {\n    // `onclose` will not fire because\n    // an open event never happened\n    this.cleanup();\n  }\n\n  this.backoff.reset();\n  this.readyState = 'closed';\n  if (this.engine) this.engine.close();\n};\n/**\n * Called upon engine close.\n *\n * @api private\n */\n\n\nManager.prototype.onclose = function (reason) {\n  debug('onclose');\n  this.cleanup();\n  this.backoff.reset();\n  this.readyState = 'closed';\n  this.emit('close', reason);\n\n  if (this._reconnection && !this.skipReconnect) {\n    this.reconnect();\n  }\n};\n/**\n * Attempt a reconnection.\n *\n * @api private\n */\n\n\nManager.prototype.reconnect = function () {\n  if (this.reconnecting || this.skipReconnect) return this;\n  var self = this;\n\n  if (this.backoff.attempts >= this._reconnectionAttempts) {\n    debug('reconnect failed');\n    this.backoff.reset();\n    this.emitAll('reconnect_failed');\n    this.reconnecting = false;\n  } else {\n    var delay = this.backoff.duration();\n    debug('will wait %dms before reconnect attempt', delay);\n    this.reconnecting = true;\n    var timer = setTimeout(function () {\n      if (self.skipReconnect) return;\n      debug('attempting reconnect');\n      self.emitAll('reconnect_attempt', self.backoff.attempts);\n      self.emitAll('reconnecting', self.backoff.attempts); // check again for the case socket closed in above events\n\n      if (self.skipReconnect) return;\n      self.open(function (err) {\n        if (err) {\n          debug('reconnect attempt error');\n          self.reconnecting = false;\n          self.reconnect();\n          self.emitAll('reconnect_error', err.data);\n        } else {\n          debug('reconnect success');\n          self.onreconnect();\n        }\n      });\n    }, delay);\n    this.subs.push({\n      destroy: function destroy() {\n        clearTimeout(timer);\n      }\n    });\n  }\n};\n/**\n * Called upon successful reconnect.\n *\n * @api private\n */\n\n\nManager.prototype.onreconnect = function () {\n  var attempt = this.backoff.attempts;\n  this.reconnecting = false;\n  this.backoff.reset();\n  this.updateSocketIds();\n  this.emitAll('reconnect', attempt);\n};","/**\n * Module dependencies\n */\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\n\nvar XHR = require('./polling-xhr');\n\nvar JSONP = require('./polling-jsonp');\n\nvar websocket = require('./websocket');\n/**\n * Export transports.\n */\n\n\nexports.polling = polling;\nexports.websocket = websocket;\n/**\n * Polling transport polymorphic constructor.\n * Decides on xhr vs jsonp based on feature detection.\n *\n * @api private\n */\n\nfunction polling(opts) {\n  var xhr;\n  var xd = false;\n  var xs = false;\n  var jsonp = false !== opts.jsonp;\n\n  if (typeof location !== 'undefined') {\n    var isSSL = 'https:' === location.protocol;\n    var port = location.port; // some user agents have empty `location.port`\n\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    xd = opts.hostname !== location.hostname || port !== opts.port;\n    xs = opts.secure !== isSSL;\n  }\n\n  opts.xdomain = xd;\n  opts.xscheme = xs;\n  xhr = new XMLHttpRequest(opts);\n\n  if ('open' in xhr && !opts.forceJSONP) {\n    return new XHR(opts);\n  } else {\n    if (!jsonp) throw new Error('JSONP disabled');\n    return new JSONP(opts);\n  }\n}","/**\n * Module dependencies.\n */\nvar Transport = require('../transport');\n\nvar parseqs = require('parseqs');\n\nvar parser = require('engine.io-parser');\n\nvar inherit = require('component-inherit');\n\nvar yeast = require('yeast');\n\nvar debug = require('debug')('engine.io-client:polling');\n/**\n * Module exports.\n */\n\n\nmodule.exports = Polling;\n/**\n * Is XHR2 supported?\n */\n\nvar hasXHR2 = function () {\n  var XMLHttpRequest = require('xmlhttprequest-ssl');\n\n  var xhr = new XMLHttpRequest({\n    xdomain: false\n  });\n  return null != xhr.responseType;\n}();\n/**\n * Polling interface.\n *\n * @param {Object} opts\n * @api private\n */\n\n\nfunction Polling(opts) {\n  var forceBase64 = opts && opts.forceBase64;\n\n  if (!hasXHR2 || forceBase64) {\n    this.supportsBinary = false;\n  }\n\n  Transport.call(this, opts);\n}\n/**\n * Inherits from Transport.\n */\n\n\ninherit(Polling, Transport);\n/**\n * Transport name.\n */\n\nPolling.prototype.name = 'polling';\n/**\n * Opens the socket (triggers polling). We write a PING message to determine\n * when the transport is open.\n *\n * @api private\n */\n\nPolling.prototype.doOpen = function () {\n  this.poll();\n};\n/**\n * Pauses polling.\n *\n * @param {Function} callback upon buffers are flushed and transport is paused\n * @api private\n */\n\n\nPolling.prototype.pause = function (onPause) {\n  var self = this;\n  this.readyState = 'pausing';\n\n  function pause() {\n    debug('paused');\n    self.readyState = 'paused';\n    onPause();\n  }\n\n  if (this.polling || !this.writable) {\n    var total = 0;\n\n    if (this.polling) {\n      debug('we are currently polling - waiting to pause');\n      total++;\n      this.once('pollComplete', function () {\n        debug('pre-pause polling complete');\n        --total || pause();\n      });\n    }\n\n    if (!this.writable) {\n      debug('we are currently writing - waiting to pause');\n      total++;\n      this.once('drain', function () {\n        debug('pre-pause writing complete');\n        --total || pause();\n      });\n    }\n  } else {\n    pause();\n  }\n};\n/**\n * Starts polling cycle.\n *\n * @api public\n */\n\n\nPolling.prototype.poll = function () {\n  debug('polling');\n  this.polling = true;\n  this.doPoll();\n  this.emit('poll');\n};\n/**\n * Overloads onData to detect payloads.\n *\n * @api private\n */\n\n\nPolling.prototype.onData = function (data) {\n  var self = this;\n  debug('polling got data %s', data);\n\n  var callback = function callback(packet, index, total) {\n    // if its the first message we consider the transport open\n    if ('opening' === self.readyState) {\n      self.onOpen();\n    } // if its a close packet, we close the ongoing requests\n\n\n    if ('close' === packet.type) {\n      self.onClose();\n      return false;\n    } // otherwise bypass onData and handle the message\n\n\n    self.onPacket(packet);\n  }; // decode payload\n\n\n  parser.decodePayload(data, this.socket.binaryType, callback); // if an event did not trigger closing\n\n  if ('closed' !== this.readyState) {\n    // if we got data we're not polling\n    this.polling = false;\n    this.emit('pollComplete');\n\n    if ('open' === this.readyState) {\n      this.poll();\n    } else {\n      debug('ignoring poll - transport state \"%s\"', this.readyState);\n    }\n  }\n};\n/**\n * For polling, send a close packet.\n *\n * @api private\n */\n\n\nPolling.prototype.doClose = function () {\n  var self = this;\n\n  function close() {\n    debug('writing close packet');\n    self.write([{\n      type: 'close'\n    }]);\n  }\n\n  if ('open' === this.readyState) {\n    debug('transport open - closing');\n    close();\n  } else {\n    // in case we're trying to close while\n    // handshaking is in progress (GH-164)\n    debug('transport not open - deferring close');\n    this.once('open', close);\n  }\n};\n/**\n * Writes a packets payload.\n *\n * @param {Array} data packets\n * @param {Function} drain callback\n * @api private\n */\n\n\nPolling.prototype.write = function (packets) {\n  var self = this;\n  this.writable = false;\n\n  var callbackfn = function callbackfn() {\n    self.writable = true;\n    self.emit('drain');\n  };\n\n  parser.encodePayload(packets, this.supportsBinary, function (data) {\n    self.doWrite(data, callbackfn);\n  });\n};\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\n\nPolling.prototype.uri = function () {\n  var query = this.query || {};\n  var schema = this.secure ? 'https' : 'http';\n  var port = ''; // cache busting is forced\n\n  if (false !== this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  if (!this.supportsBinary && !query.sid) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query); // avoid port if default for schema\n\n  if (this.port && ('https' === schema && Number(this.port) !== 443 || 'http' === schema && Number(this.port) !== 80)) {\n    port = ':' + this.port;\n  } // prepend ? to query\n\n\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};","/* global Blob File */\n\n/*\n * Module requirements.\n */\nvar isArray = require('isarray');\n\nvar toString = Object.prototype.toString;\nvar withNativeBlob = typeof Blob === 'function' || typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]';\nvar withNativeFile = typeof File === 'function' || typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]';\n/**\n * Module exports.\n */\n\nmodule.exports = hasBinary;\n/**\n * Checks for binary data.\n *\n * Supports Buffer, ArrayBuffer, Blob and File.\n *\n * @param {Object} anything\n * @api public\n */\n\nfunction hasBinary(obj) {\n  if (!obj || typeof obj !== 'object') {\n    return false;\n  }\n\n  if (isArray(obj)) {\n    for (var i = 0, l = obj.length; i < l; i++) {\n      if (hasBinary(obj[i])) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  if (typeof Buffer === 'function' && Buffer.isBuffer && Buffer.isBuffer(obj) || typeof ArrayBuffer === 'function' && obj instanceof ArrayBuffer || withNativeBlob && obj instanceof Blob || withNativeFile && obj instanceof File) {\n    return true;\n  } // see: https://github.com/Automattic/has-binary/pull/4\n\n\n  if (obj.toJSON && typeof obj.toJSON === 'function' && arguments.length === 1) {\n    return hasBinary(obj.toJSON(), true);\n  }\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n      return true;\n    }\n  }\n\n  return false;\n}","'use strict';\n\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''),\n    length = 64,\n    map = {},\n    seed = 0,\n    i = 0,\n    prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\n\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\n\n\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\n\n\nfunction yeast() {\n  var now = encode(+new Date());\n  if (now !== prev) return seed = 0, prev = now;\n  return now + '.' + encode(seed++);\n} //\n// Map each character to its index.\n//\n\n\nfor (; i < length; i++) {\n  map[alphabet[i]] = i;\n} //\n// Expose the `yeast`, `encode` and `decode` functions.\n//\n\n\nyeast.encode = encode;\nyeast.decode = decode;\nmodule.exports = yeast;","var indexOf = [].indexOf;\n\nmodule.exports = function (arr, obj) {\n  if (indexOf) return arr.indexOf(obj);\n\n  for (var i = 0; i < arr.length; ++i) {\n    if (arr[i] === obj) return i;\n  }\n\n  return -1;\n};","/**\n * Module dependencies.\n */\nvar parser = require('socket.io-parser');\n\nvar Emitter = require('component-emitter');\n\nvar toArray = require('to-array');\n\nvar on = require('./on');\n\nvar bind = require('component-bind');\n\nvar debug = require('debug')('socket.io-client:socket');\n\nvar parseqs = require('parseqs');\n\nvar hasBin = require('has-binary2');\n/**\n * Module exports.\n */\n\n\nmodule.exports = exports = Socket;\n/**\n * Internal events (blacklisted).\n * These events can't be emitted by the user.\n *\n * @api private\n */\n\nvar events = {\n  connect: 1,\n  connect_error: 1,\n  connect_timeout: 1,\n  connecting: 1,\n  disconnect: 1,\n  error: 1,\n  reconnect: 1,\n  reconnect_attempt: 1,\n  reconnect_failed: 1,\n  reconnect_error: 1,\n  reconnecting: 1,\n  ping: 1,\n  pong: 1\n};\n/**\n * Shortcut to `Emitter#emit`.\n */\n\nvar emit = Emitter.prototype.emit;\n/**\n * `Socket` constructor.\n *\n * @api public\n */\n\nfunction Socket(io, nsp, opts) {\n  this.io = io;\n  this.nsp = nsp;\n  this.json = this; // compat\n\n  this.ids = 0;\n  this.acks = {};\n  this.receiveBuffer = [];\n  this.sendBuffer = [];\n  this.connected = false;\n  this.disconnected = true;\n  this.flags = {};\n\n  if (opts && opts.query) {\n    this.query = opts.query;\n  }\n\n  if (this.io.autoConnect) this.open();\n}\n/**\n * Mix in `Emitter`.\n */\n\n\nEmitter(Socket.prototype);\n/**\n * Subscribe to open, close and packet events\n *\n * @api private\n */\n\nSocket.prototype.subEvents = function () {\n  if (this.subs) return;\n  var io = this.io;\n  this.subs = [on(io, 'open', bind(this, 'onopen')), on(io, 'packet', bind(this, 'onpacket')), on(io, 'close', bind(this, 'onclose'))];\n};\n/**\n * \"Opens\" the socket.\n *\n * @api public\n */\n\n\nSocket.prototype.open = Socket.prototype.connect = function () {\n  if (this.connected) return this;\n  this.subEvents();\n  this.io.open(); // ensure open\n\n  if ('open' === this.io.readyState) this.onopen();\n  this.emit('connecting');\n  return this;\n};\n/**\n * Sends a `message` event.\n *\n * @return {Socket} self\n * @api public\n */\n\n\nSocket.prototype.send = function () {\n  var args = toArray(arguments);\n  args.unshift('message');\n  this.emit.apply(this, args);\n  return this;\n};\n/**\n * Override `emit`.\n * If the event is in `events`, it's emitted normally.\n *\n * @param {String} event name\n * @return {Socket} self\n * @api public\n */\n\n\nSocket.prototype.emit = function (ev) {\n  if (events.hasOwnProperty(ev)) {\n    emit.apply(this, arguments);\n    return this;\n  }\n\n  var args = toArray(arguments);\n  var packet = {\n    type: (this.flags.binary !== undefined ? this.flags.binary : hasBin(args)) ? parser.BINARY_EVENT : parser.EVENT,\n    data: args\n  };\n  packet.options = {};\n  packet.options.compress = !this.flags || false !== this.flags.compress; // event ack callback\n\n  if ('function' === typeof args[args.length - 1]) {\n    debug('emitting packet with ack id %d', this.ids);\n    this.acks[this.ids] = args.pop();\n    packet.id = this.ids++;\n  }\n\n  if (this.connected) {\n    this.packet(packet);\n  } else {\n    this.sendBuffer.push(packet);\n  }\n\n  this.flags = {};\n  return this;\n};\n/**\n * Sends a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\n\nSocket.prototype.packet = function (packet) {\n  packet.nsp = this.nsp;\n  this.io.packet(packet);\n};\n/**\n * Called upon engine `open`.\n *\n * @api private\n */\n\n\nSocket.prototype.onopen = function () {\n  debug('transport is open - connecting'); // write connect packet if necessary\n\n  if ('/' !== this.nsp) {\n    if (this.query) {\n      var query = typeof this.query === 'object' ? parseqs.encode(this.query) : this.query;\n      debug('sending connect packet with query %s', query);\n      this.packet({\n        type: parser.CONNECT,\n        query: query\n      });\n    } else {\n      this.packet({\n        type: parser.CONNECT\n      });\n    }\n  }\n};\n/**\n * Called upon engine `close`.\n *\n * @param {String} reason\n * @api private\n */\n\n\nSocket.prototype.onclose = function (reason) {\n  debug('close (%s)', reason);\n  this.connected = false;\n  this.disconnected = true;\n  delete this.id;\n  this.emit('disconnect', reason);\n};\n/**\n * Called with socket packet.\n *\n * @param {Object} packet\n * @api private\n */\n\n\nSocket.prototype.onpacket = function (packet) {\n  var sameNamespace = packet.nsp === this.nsp;\n  var rootNamespaceError = packet.type === parser.ERROR && packet.nsp === '/';\n  if (!sameNamespace && !rootNamespaceError) return;\n\n  switch (packet.type) {\n    case parser.CONNECT:\n      this.onconnect();\n      break;\n\n    case parser.EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.BINARY_EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.ACK:\n      this.onack(packet);\n      break;\n\n    case parser.BINARY_ACK:\n      this.onack(packet);\n      break;\n\n    case parser.DISCONNECT:\n      this.ondisconnect();\n      break;\n\n    case parser.ERROR:\n      this.emit('error', packet.data);\n      break;\n  }\n};\n/**\n * Called upon a server event.\n *\n * @param {Object} packet\n * @api private\n */\n\n\nSocket.prototype.onevent = function (packet) {\n  var args = packet.data || [];\n  debug('emitting event %j', args);\n\n  if (null != packet.id) {\n    debug('attaching ack callback to event');\n    args.push(this.ack(packet.id));\n  }\n\n  if (this.connected) {\n    emit.apply(this, args);\n  } else {\n    this.receiveBuffer.push(args);\n  }\n};\n/**\n * Produces an ack callback to emit with an event.\n *\n * @api private\n */\n\n\nSocket.prototype.ack = function (id) {\n  var self = this;\n  var sent = false;\n  return function () {\n    // prevent double callbacks\n    if (sent) return;\n    sent = true;\n    var args = toArray(arguments);\n    debug('sending ack %j', args);\n    self.packet({\n      type: hasBin(args) ? parser.BINARY_ACK : parser.ACK,\n      id: id,\n      data: args\n    });\n  };\n};\n/**\n * Called upon a server acknowlegement.\n *\n * @param {Object} packet\n * @api private\n */\n\n\nSocket.prototype.onack = function (packet) {\n  var ack = this.acks[packet.id];\n\n  if ('function' === typeof ack) {\n    debug('calling ack %s with %j', packet.id, packet.data);\n    ack.apply(this, packet.data);\n    delete this.acks[packet.id];\n  } else {\n    debug('bad ack %s', packet.id);\n  }\n};\n/**\n * Called upon server connect.\n *\n * @api private\n */\n\n\nSocket.prototype.onconnect = function () {\n  this.connected = true;\n  this.disconnected = false;\n  this.emit('connect');\n  this.emitBuffered();\n};\n/**\n * Emit buffered events (received and emitted).\n *\n * @api private\n */\n\n\nSocket.prototype.emitBuffered = function () {\n  var i;\n\n  for (i = 0; i < this.receiveBuffer.length; i++) {\n    emit.apply(this, this.receiveBuffer[i]);\n  }\n\n  this.receiveBuffer = [];\n\n  for (i = 0; i < this.sendBuffer.length; i++) {\n    this.packet(this.sendBuffer[i]);\n  }\n\n  this.sendBuffer = [];\n};\n/**\n * Called upon server disconnect.\n *\n * @api private\n */\n\n\nSocket.prototype.ondisconnect = function () {\n  debug('server disconnect (%s)', this.nsp);\n  this.destroy();\n  this.onclose('io server disconnect');\n};\n/**\n * Called upon forced client/server side disconnections,\n * this method ensures the manager stops tracking us and\n * that reconnections don't get triggered for this.\n *\n * @api private.\n */\n\n\nSocket.prototype.destroy = function () {\n  if (this.subs) {\n    // clean subscriptions to avoid reconnections\n    for (var i = 0; i < this.subs.length; i++) {\n      this.subs[i].destroy();\n    }\n\n    this.subs = null;\n  }\n\n  this.io.destroy(this);\n};\n/**\n * Disconnects the socket manually.\n *\n * @return {Socket} self\n * @api public\n */\n\n\nSocket.prototype.close = Socket.prototype.disconnect = function () {\n  if (this.connected) {\n    debug('performing disconnect (%s)', this.nsp);\n    this.packet({\n      type: parser.DISCONNECT\n    });\n  } // remove socket from pool\n\n\n  this.destroy();\n\n  if (this.connected) {\n    // fire events\n    this.onclose('io client disconnect');\n  }\n\n  return this;\n};\n/**\n * Sets the compress flag.\n *\n * @param {Boolean} if `true`, compresses the sending data\n * @return {Socket} self\n * @api public\n */\n\n\nSocket.prototype.compress = function (compress) {\n  this.flags.compress = compress;\n  return this;\n};\n/**\n * Sets the binary flag\n *\n * @param {Boolean} whether the emitted data contains binary\n * @return {Socket} self\n * @api public\n */\n\n\nSocket.prototype.binary = function (binary) {\n  this.flags.binary = binary;\n  return this;\n};","/**\n * Module exports.\n */\nmodule.exports = on;\n/**\n * Helper for subscriptions.\n *\n * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`\n * @param {String} event name\n * @param {Function} callback\n * @api public\n */\n\nfunction on(obj, ev, fn) {\n  obj.on(ev, fn);\n  return {\n    destroy: function destroy() {\n      obj.removeListener(ev, fn);\n    }\n  };\n}","/**\n * Slice reference.\n */\nvar slice = [].slice;\n/**\n * Bind `obj` to `fn`.\n *\n * @param {Object} obj\n * @param {Function|String} fn or string\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function (obj, fn) {\n  if ('string' == typeof fn) fn = obj[fn];\n  if ('function' != typeof fn) throw new Error('bind() requires a function');\n  var args = slice.call(arguments, 2);\n  return function () {\n    return fn.apply(obj, args.concat(slice.call(arguments)));\n  };\n};","/**\n * Module dependencies.\n */\nvar parseuri = require('parseuri');\n\nvar debug = require('debug')('socket.io-client:url');\n/**\n * Module exports.\n */\n\n\nmodule.exports = url;\n/**\n * URL parser.\n *\n * @param {String} url\n * @param {Object} An object meant to mimic window.location.\n *                 Defaults to window.location.\n * @api public\n */\n\nfunction url(uri, loc) {\n  var obj = uri; // default to window.location\n\n  loc = loc || typeof location !== 'undefined' && location;\n  if (null == uri) uri = loc.protocol + '//' + loc.host; // relative path support\n\n  if ('string' === typeof uri) {\n    if ('/' === uri.charAt(0)) {\n      if ('/' === uri.charAt(1)) {\n        uri = loc.protocol + uri;\n      } else {\n        uri = loc.host + uri;\n      }\n    }\n\n    if (!/^(https?|wss?):\\/\\//.test(uri)) {\n      debug('protocol-less url %s', uri);\n\n      if ('undefined' !== typeof loc) {\n        uri = loc.protocol + '//' + uri;\n      } else {\n        uri = 'https://' + uri;\n      }\n    } // parse\n\n\n    debug('parse %s', uri);\n    obj = parseuri(uri);\n  } // make sure we treat `localhost:80` and `localhost` equally\n\n\n  if (!obj.port) {\n    if (/^(http|ws)$/.test(obj.protocol)) {\n      obj.port = '80';\n    } else if (/^(http|ws)s$/.test(obj.protocol)) {\n      obj.port = '443';\n    }\n  }\n\n  obj.path = obj.path || '/';\n  var ipv6 = obj.host.indexOf(':') !== -1;\n  var host = ipv6 ? '[' + obj.host + ']' : obj.host; // define unique id\n\n  obj.id = obj.protocol + '://' + host + ':' + obj.port; // define href\n\n  obj.href = obj.protocol + '://' + host + (loc && loc.port === obj.port ? '' : ':' + obj.port);\n  return obj;\n}","var _toConsumableArray = require(\"C:\\\\Users\\\\User\\\\Desktop\\\\Web\\\\projects\\\\Entre_cops\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/toConsumableArray\");\n\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\nfunction setup(env) {\n  createDebug.debug = createDebug;\n  createDebug.default = createDebug;\n  createDebug.coerce = coerce;\n  createDebug.disable = disable;\n  createDebug.enable = enable;\n  createDebug.enabled = enabled;\n  createDebug.humanize = require('ms');\n  Object.keys(env).forEach(function (key) {\n    createDebug[key] = env[key];\n  });\n  /**\n  * Active `debug` instances.\n  */\n\n  createDebug.instances = [];\n  /**\n  * The currently active debug mode names, and names to skip.\n  */\n\n  createDebug.names = [];\n  createDebug.skips = [];\n  /**\n  * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n  *\n  * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n  */\n\n  createDebug.formatters = {};\n  /**\n  * Selects a color for a debug namespace\n  * @param {String} namespace The namespace string for the for the debug instance to be colored\n  * @return {Number|String} An ANSI color code for the given namespace\n  * @api private\n  */\n\n  function selectColor(namespace) {\n    var hash = 0;\n\n    for (var i = 0; i < namespace.length; i++) {\n      hash = (hash << 5) - hash + namespace.charCodeAt(i);\n      hash |= 0; // Convert to 32bit integer\n    }\n\n    return createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n  }\n\n  createDebug.selectColor = selectColor;\n  /**\n  * Create a debugger with the given `namespace`.\n  *\n  * @param {String} namespace\n  * @return {Function}\n  * @api public\n  */\n\n  function createDebug(namespace) {\n    var prevTime;\n\n    function debug() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      // Disabled?\n      if (!debug.enabled) {\n        return;\n      }\n\n      var self = debug; // Set `diff` timestamp\n\n      var curr = Number(new Date());\n      var ms = curr - (prevTime || curr);\n      self.diff = ms;\n      self.prev = prevTime;\n      self.curr = curr;\n      prevTime = curr;\n      args[0] = createDebug.coerce(args[0]);\n\n      if (typeof args[0] !== 'string') {\n        // Anything else let's inspect with %O\n        args.unshift('%O');\n      } // Apply any `formatters` transformations\n\n\n      var index = 0;\n      args[0] = args[0].replace(/%([a-zA-Z%])/g, function (match, format) {\n        // If we encounter an escaped % then don't increase the array index\n        if (match === '%%') {\n          return match;\n        }\n\n        index++;\n        var formatter = createDebug.formatters[format];\n\n        if (typeof formatter === 'function') {\n          var val = args[index];\n          match = formatter.call(self, val); // Now we need to remove `args[index]` since it's inlined in the `format`\n\n          args.splice(index, 1);\n          index--;\n        }\n\n        return match;\n      }); // Apply env-specific formatting (colors, etc.)\n\n      createDebug.formatArgs.call(self, args);\n      var logFn = self.log || createDebug.log;\n      logFn.apply(self, args);\n    }\n\n    debug.namespace = namespace;\n    debug.enabled = createDebug.enabled(namespace);\n    debug.useColors = createDebug.useColors();\n    debug.color = selectColor(namespace);\n    debug.destroy = destroy;\n    debug.extend = extend; // Debug.formatArgs = formatArgs;\n    // debug.rawLog = rawLog;\n    // env-specific initialization logic for debug instances\n\n    if (typeof createDebug.init === 'function') {\n      createDebug.init(debug);\n    }\n\n    createDebug.instances.push(debug);\n    return debug;\n  }\n\n  function destroy() {\n    var index = createDebug.instances.indexOf(this);\n\n    if (index !== -1) {\n      createDebug.instances.splice(index, 1);\n      return true;\n    }\n\n    return false;\n  }\n\n  function extend(namespace, delimiter) {\n    var newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n    newDebug.log = this.log;\n    return newDebug;\n  }\n  /**\n  * Enables a debug mode by namespaces. This can include modes\n  * separated by a colon and wildcards.\n  *\n  * @param {String} namespaces\n  * @api public\n  */\n\n\n  function enable(namespaces) {\n    createDebug.save(namespaces);\n    createDebug.names = [];\n    createDebug.skips = [];\n    var i;\n    var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n    var len = split.length;\n\n    for (i = 0; i < len; i++) {\n      if (!split[i]) {\n        // ignore empty strings\n        continue;\n      }\n\n      namespaces = split[i].replace(/\\*/g, '.*?');\n\n      if (namespaces[0] === '-') {\n        createDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n      } else {\n        createDebug.names.push(new RegExp('^' + namespaces + '$'));\n      }\n    }\n\n    for (i = 0; i < createDebug.instances.length; i++) {\n      var instance = createDebug.instances[i];\n      instance.enabled = createDebug.enabled(instance.namespace);\n    }\n  }\n  /**\n  * Disable debug output.\n  *\n  * @return {String} namespaces\n  * @api public\n  */\n\n\n  function disable() {\n    var namespaces = [].concat(_toConsumableArray(createDebug.names.map(toNamespace)), _toConsumableArray(createDebug.skips.map(toNamespace).map(function (namespace) {\n      return '-' + namespace;\n    }))).join(',');\n    createDebug.enable('');\n    return namespaces;\n  }\n  /**\n  * Returns true if the given mode name is enabled, false otherwise.\n  *\n  * @param {String} name\n  * @return {Boolean}\n  * @api public\n  */\n\n\n  function enabled(name) {\n    if (name[name.length - 1] === '*') {\n      return true;\n    }\n\n    var i;\n    var len;\n\n    for (i = 0, len = createDebug.skips.length; i < len; i++) {\n      if (createDebug.skips[i].test(name)) {\n        return false;\n      }\n    }\n\n    for (i = 0, len = createDebug.names.length; i < len; i++) {\n      if (createDebug.names[i].test(name)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n  * Convert regexp to namespace\n  *\n  * @param {RegExp} regxep\n  * @return {String} namespace\n  * @api private\n  */\n\n\n  function toNamespace(regexp) {\n    return regexp.toString().substring(2, regexp.toString().length - 2).replace(/\\.\\*\\?$/, '*');\n  }\n  /**\n  * Coerce `val`.\n  *\n  * @param {Mixed} val\n  * @return {Mixed}\n  * @api private\n  */\n\n\n  function coerce(val) {\n    if (val instanceof Error) {\n      return val.stack || val.message;\n    }\n\n    return val;\n  }\n\n  createDebug.enable(createDebug.load());\n  return createDebug;\n}\n\nmodule.exports = setup;","function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nmodule.exports = _nonIterableSpread;","/**\n * Helpers.\n */\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  var type = typeof val;\n\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n\n  throw new Error('val is not a non-empty string or a valid number. val=' + JSON.stringify(val));\n};\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\n\nfunction parse(str) {\n  str = String(str);\n\n  if (str.length > 100) {\n    return;\n  }\n\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(str);\n\n  if (!match) {\n    return;\n  }\n\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n\n    default:\n      return undefined;\n  }\n}\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n\n  return ms + 'ms';\n}\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n\n  return ms + ' ms';\n}\n/**\n * Pluralization helper.\n */\n\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome && 'undefined' != typeof chrome.storage ? chrome.storage.local : localstorage();\n/**\n * Colors.\n */\n\nexports.colors = ['#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC', '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF', '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC', '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF', '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC', '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033', '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366', '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933', '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC', '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF', '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'];\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  } // Internet Explorer and Edge do not support colors.\n\n\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  } // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\n\n  return typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || // is firebug? http://stackoverflow.com/a/398120/376773\n  typeof window !== 'undefined' && window.console && (window.console.firebug || window.console.exception && window.console.table) || // is firefox >= v31?\n  // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31 || // double check webkit in userAgent just in case we are in a worker\n  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/);\n}\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\n\nexports.formatters.j = function (v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n  args[0] = (useColors ? '%c' : '') + this.namespace + (useColors ? ' %c' : ' ') + args[0] + (useColors ? '%c ' : ' ') + '+' + exports.humanize(this.diff);\n  if (!useColors) return;\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit'); // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function (match) {\n    if ('%%' === match) return;\n    index++;\n\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n  args.splice(lastC, 0, c);\n}\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console && console.log && Function.prototype.apply.call(console.log, console, arguments);\n}\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch (e) {}\n}\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\n\nfunction load() {\n  var r;\n\n  try {\n    r = exports.storage.debug;\n  } catch (e) {} // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\n\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\n\nexports.enable(load());\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}","/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n/**\n * Active `debug` instances.\n */\n\nexports.instances = [];\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0,\n      i;\n\n  for (i in namespace) {\n    hash = (hash << 5) - hash + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\n\nfunction createDebug(namespace) {\n  var prevTime;\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n    var self = debug; // set `diff` timestamp\n\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr; // turn the `arguments` into a proper Array\n\n    var args = new Array(arguments.length);\n\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    } // apply any `formatters` transformations\n\n\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function (match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val); // now we need to remove `args[index]` since it's inlined in the `format`\n\n        args.splice(index, 1);\n        index--;\n      }\n\n      return match;\n    }); // apply env-specific formatting (colors, etc.)\n\n    exports.formatArgs.call(self, args);\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n  debug.destroy = destroy; // env-specific initialization logic for debug instances\n\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  exports.instances.push(debug);\n  return debug;\n}\n\nfunction destroy() {\n  var index = exports.instances.indexOf(this);\n\n  if (index !== -1) {\n    exports.instances.splice(index, 1);\n    return true;\n  } else {\n    return false;\n  }\n}\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n  exports.names = [];\n  exports.skips = [];\n  var i;\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n\n    namespaces = split[i].replace(/\\*/g, '.*?');\n\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n\n  for (i = 0; i < exports.instances.length; i++) {\n    var instance = exports.instances[i];\n    instance.enabled = exports.enabled(instance.namespace);\n  }\n}\n/**\n * Disable debug output.\n *\n * @api public\n */\n\n\nfunction disable() {\n  exports.enable('');\n}\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\n\nfunction enabled(name) {\n  if (name[name.length - 1] === '*') {\n    return true;\n  }\n\n  var i, len;\n\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}","/**\n * Helpers.\n */\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  var type = typeof val;\n\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n\n  throw new Error('val is not a non-empty string or a valid number. val=' + JSON.stringify(val));\n};\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\n\nfunction parse(str) {\n  str = String(str);\n\n  if (str.length > 100) {\n    return;\n  }\n\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);\n\n  if (!match) {\n    return;\n  }\n\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n\n    default:\n      return undefined;\n  }\n}\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n\n  return ms + 'ms';\n}\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') || plural(ms, h, 'hour') || plural(ms, m, 'minute') || plural(ms, s, 'second') || ms + ' ms';\n}\n/**\n * Pluralization helper.\n */\n\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}","/*global Blob,File*/\n\n/**\n * Module requirements\n */\nvar isArray = require('isarray');\n\nvar isBuf = require('./is-buffer');\n\nvar toString = Object.prototype.toString;\nvar withNativeBlob = typeof Blob === 'function' || typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]';\nvar withNativeFile = typeof File === 'function' || typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]';\n/**\n * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.\n * Anything with blobs or files should be fed through removeBlobs before coming\n * here.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @api public\n */\n\nexports.deconstructPacket = function (packet) {\n  var buffers = [];\n  var packetData = packet.data;\n  var pack = packet;\n  pack.data = _deconstructPacket(packetData, buffers);\n  pack.attachments = buffers.length; // number of binary 'attachments'\n\n  return {\n    packet: pack,\n    buffers: buffers\n  };\n};\n\nfunction _deconstructPacket(data, buffers) {\n  if (!data) return data;\n\n  if (isBuf(data)) {\n    var placeholder = {\n      _placeholder: true,\n      num: buffers.length\n    };\n    buffers.push(data);\n    return placeholder;\n  } else if (isArray(data)) {\n    var newData = new Array(data.length);\n\n    for (var i = 0; i < data.length; i++) {\n      newData[i] = _deconstructPacket(data[i], buffers);\n    }\n\n    return newData;\n  } else if (typeof data === 'object' && !(data instanceof Date)) {\n    var newData = {};\n\n    for (var key in data) {\n      newData[key] = _deconstructPacket(data[key], buffers);\n    }\n\n    return newData;\n  }\n\n  return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @api public\n */\n\n\nexports.reconstructPacket = function (packet, buffers) {\n  packet.data = _reconstructPacket(packet.data, buffers);\n  packet.attachments = undefined; // no longer useful\n\n  return packet;\n};\n\nfunction _reconstructPacket(data, buffers) {\n  if (!data) return data;\n\n  if (data && data._placeholder) {\n    return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n  } else if (isArray(data)) {\n    for (var i = 0; i < data.length; i++) {\n      data[i] = _reconstructPacket(data[i], buffers);\n    }\n  } else if (typeof data === 'object') {\n    for (var key in data) {\n      data[key] = _reconstructPacket(data[key], buffers);\n    }\n  }\n\n  return data;\n}\n/**\n * Asynchronously removes Blobs or Files from data via\n * FileReader's readAsArrayBuffer method. Used before encoding\n * data as msgpack. Calls callback with the blobless data.\n *\n * @param {Object} data\n * @param {Function} callback\n * @api private\n */\n\n\nexports.removeBlobs = function (data, callback) {\n  function _removeBlobs(obj, curKey, containingObject) {\n    if (!obj) return obj; // convert any blob\n\n    if (withNativeBlob && obj instanceof Blob || withNativeFile && obj instanceof File) {\n      pendingBlobs++; // async filereader\n\n      var fileReader = new FileReader();\n\n      fileReader.onload = function () {\n        // this.result == arraybuffer\n        if (containingObject) {\n          containingObject[curKey] = this.result;\n        } else {\n          bloblessData = this.result;\n        } // if nothing pending its callback time\n\n\n        if (! --pendingBlobs) {\n          callback(bloblessData);\n        }\n      };\n\n      fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer\n    } else if (isArray(obj)) {\n      // handle array\n      for (var i = 0; i < obj.length; i++) {\n        _removeBlobs(obj[i], i, obj);\n      }\n    } else if (typeof obj === 'object' && !isBuf(obj)) {\n      // and object\n      for (var key in obj) {\n        _removeBlobs(obj[key], key, obj);\n      }\n    }\n  }\n\n  var pendingBlobs = 0;\n  var bloblessData = data;\n\n  _removeBlobs(bloblessData);\n\n  if (!pendingBlobs) {\n    callback(bloblessData);\n  }\n};","'use strict';\n\nexports.byteLength = byteLength;\nexports.toByteArray = toByteArray;\nexports.fromByteArray = fromByteArray;\nvar lookup = [];\nvar revLookup = [];\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i];\n  revLookup[code.charCodeAt(i)] = i;\n} // Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\n\n\nrevLookup['-'.charCodeAt(0)] = 62;\nrevLookup['_'.charCodeAt(0)] = 63;\n\nfunction getLens(b64) {\n  var len = b64.length;\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4');\n  } // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n\n\n  var validLen = b64.indexOf('=');\n  if (validLen === -1) validLen = len;\n  var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;\n  return [validLen, placeHoldersLen];\n} // base64 is 4/3 + up to two characters of the original data\n\n\nfunction byteLength(b64) {\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\n\nfunction _byteLength(b64, validLen, placeHoldersLen) {\n  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\n\nfunction toByteArray(b64) {\n  var tmp;\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));\n  var curByte = 0; // if there are placeholders, only get up to the last complete 4 chars\n\n  var len = placeHoldersLen > 0 ? validLen - 4 : validLen;\n  var i;\n\n  for (i = 0; i < len; i += 4) {\n    tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];\n    arr[curByte++] = tmp >> 16 & 0xFF;\n    arr[curByte++] = tmp >> 8 & 0xFF;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;\n    arr[curByte++] = tmp >> 8 & 0xFF;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  return arr;\n}\n\nfunction tripletToBase64(num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];\n}\n\nfunction encodeChunk(uint8, start, end) {\n  var tmp;\n  var output = [];\n\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16 & 0xFF0000) + (uint8[i + 1] << 8 & 0xFF00) + (uint8[i + 2] & 0xFF);\n    output.push(tripletToBase64(tmp));\n  }\n\n  return output.join('');\n}\n\nfunction fromByteArray(uint8) {\n  var tmp;\n  var len = uint8.length;\n  var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\n\n  var parts = [];\n  var maxChunkLength = 16383; // must be multiple of 3\n  // go through the array every three bytes, we'll deal with trailing stuff later\n\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));\n  } // pad the end with zeros, but make sure to not forget the extra bytes\n\n\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1];\n    parts.push(lookup[tmp >> 2] + lookup[tmp << 4 & 0x3F] + '==');\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1];\n    parts.push(lookup[tmp >> 10] + lookup[tmp >> 4 & 0x3F] + lookup[tmp << 2 & 0x3F] + '=');\n  }\n\n  return parts.join('');\n}","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var nBits = -7;\n  var i = isLE ? nBytes - 1 : 0;\n  var d = isLE ? -1 : 1;\n  var s = buffer[offset + i];\n  i += d;\n  e = s & (1 << -nBits) - 1;\n  s >>= -nBits;\n  nBits += eLen;\n\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & (1 << -nBits) - 1;\n  e >>= -nBits;\n  nBits += mLen;\n\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : (s ? -1 : 1) * Infinity;\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n};\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n  var i = isLE ? 0 : nBytes - 1;\n  var d = isLE ? 1 : -1;\n  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n  value = Math.abs(value);\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = e << mLen | m;\n  eLen += mLen;\n\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128;\n};","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};","module.exports = require('./socket');\n/**\n * Exports parser\n *\n * @api public\n *\n */\n\nmodule.exports.parser = require('engine.io-parser');","/**\n * Module dependencies.\n */\nvar transports = require('./transports/index');\n\nvar Emitter = require('component-emitter');\n\nvar debug = require('debug')('engine.io-client:socket');\n\nvar index = require('indexof');\n\nvar parser = require('engine.io-parser');\n\nvar parseuri = require('parseuri');\n\nvar parseqs = require('parseqs');\n/**\n * Module exports.\n */\n\n\nmodule.exports = Socket;\n/**\n * Socket constructor.\n *\n * @param {String|Object} uri or options\n * @param {Object} options\n * @api public\n */\n\nfunction Socket(uri, opts) {\n  if (!(this instanceof Socket)) return new Socket(uri, opts);\n  opts = opts || {};\n\n  if (uri && 'object' === typeof uri) {\n    opts = uri;\n    uri = null;\n  }\n\n  if (uri) {\n    uri = parseuri(uri);\n    opts.hostname = uri.host;\n    opts.secure = uri.protocol === 'https' || uri.protocol === 'wss';\n    opts.port = uri.port;\n    if (uri.query) opts.query = uri.query;\n  } else if (opts.host) {\n    opts.hostname = parseuri(opts.host).host;\n  }\n\n  this.secure = null != opts.secure ? opts.secure : typeof location !== 'undefined' && 'https:' === location.protocol;\n\n  if (opts.hostname && !opts.port) {\n    // if no port is specified manually, use the protocol default\n    opts.port = this.secure ? '443' : '80';\n  }\n\n  this.agent = opts.agent || false;\n  this.hostname = opts.hostname || (typeof location !== 'undefined' ? location.hostname : 'localhost');\n  this.port = opts.port || (typeof location !== 'undefined' && location.port ? location.port : this.secure ? 443 : 80);\n  this.query = opts.query || {};\n  if ('string' === typeof this.query) this.query = parseqs.decode(this.query);\n  this.upgrade = false !== opts.upgrade;\n  this.path = (opts.path || '/engine.io').replace(/\\/$/, '') + '/';\n  this.forceJSONP = !!opts.forceJSONP;\n  this.jsonp = false !== opts.jsonp;\n  this.forceBase64 = !!opts.forceBase64;\n  this.enablesXDR = !!opts.enablesXDR;\n  this.withCredentials = false !== opts.withCredentials;\n  this.timestampParam = opts.timestampParam || 't';\n  this.timestampRequests = opts.timestampRequests;\n  this.transports = opts.transports || ['polling', 'websocket'];\n  this.transportOptions = opts.transportOptions || {};\n  this.readyState = '';\n  this.writeBuffer = [];\n  this.prevBufferLen = 0;\n  this.policyPort = opts.policyPort || 843;\n  this.rememberUpgrade = opts.rememberUpgrade || false;\n  this.binaryType = null;\n  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;\n  this.perMessageDeflate = false !== opts.perMessageDeflate ? opts.perMessageDeflate || {} : false;\n  if (true === this.perMessageDeflate) this.perMessageDeflate = {};\n\n  if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {\n    this.perMessageDeflate.threshold = 1024;\n  } // SSL options for Node.js client\n\n\n  this.pfx = opts.pfx || null;\n  this.key = opts.key || null;\n  this.passphrase = opts.passphrase || null;\n  this.cert = opts.cert || null;\n  this.ca = opts.ca || null;\n  this.ciphers = opts.ciphers || null;\n  this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? true : opts.rejectUnauthorized;\n  this.forceNode = !!opts.forceNode; // detect ReactNative environment\n\n  this.isReactNative = typeof navigator !== 'undefined' && typeof navigator.product === 'string' && navigator.product.toLowerCase() === 'reactnative'; // other options for Node.js or ReactNative client\n\n  if (typeof self === 'undefined' || this.isReactNative) {\n    if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {\n      this.extraHeaders = opts.extraHeaders;\n    }\n\n    if (opts.localAddress) {\n      this.localAddress = opts.localAddress;\n    }\n  } // set on handshake\n\n\n  this.id = null;\n  this.upgrades = null;\n  this.pingInterval = null;\n  this.pingTimeout = null; // set on heartbeat\n\n  this.pingIntervalTimer = null;\n  this.pingTimeoutTimer = null;\n  this.open();\n}\n\nSocket.priorWebsocketSuccess = false;\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n/**\n * Protocol version.\n *\n * @api public\n */\n\nSocket.protocol = parser.protocol; // this is an int\n\n/**\n * Expose deps for legacy compatibility\n * and standalone browser access.\n */\n\nSocket.Socket = Socket;\nSocket.Transport = require('./transport');\nSocket.transports = require('./transports/index');\nSocket.parser = require('engine.io-parser');\n/**\n * Creates transport of the given type.\n *\n * @param {String} transport name\n * @return {Transport}\n * @api private\n */\n\nSocket.prototype.createTransport = function (name) {\n  debug('creating transport \"%s\"', name);\n  var query = clone(this.query); // append engine.io protocol identifier\n\n  query.EIO = parser.protocol; // transport name\n\n  query.transport = name; // per-transport options\n\n  var options = this.transportOptions[name] || {}; // session id if we already have one\n\n  if (this.id) query.sid = this.id;\n  var transport = new transports[name]({\n    query: query,\n    socket: this,\n    agent: options.agent || this.agent,\n    hostname: options.hostname || this.hostname,\n    port: options.port || this.port,\n    secure: options.secure || this.secure,\n    path: options.path || this.path,\n    forceJSONP: options.forceJSONP || this.forceJSONP,\n    jsonp: options.jsonp || this.jsonp,\n    forceBase64: options.forceBase64 || this.forceBase64,\n    enablesXDR: options.enablesXDR || this.enablesXDR,\n    withCredentials: options.withCredentials || this.withCredentials,\n    timestampRequests: options.timestampRequests || this.timestampRequests,\n    timestampParam: options.timestampParam || this.timestampParam,\n    policyPort: options.policyPort || this.policyPort,\n    pfx: options.pfx || this.pfx,\n    key: options.key || this.key,\n    passphrase: options.passphrase || this.passphrase,\n    cert: options.cert || this.cert,\n    ca: options.ca || this.ca,\n    ciphers: options.ciphers || this.ciphers,\n    rejectUnauthorized: options.rejectUnauthorized || this.rejectUnauthorized,\n    perMessageDeflate: options.perMessageDeflate || this.perMessageDeflate,\n    extraHeaders: options.extraHeaders || this.extraHeaders,\n    forceNode: options.forceNode || this.forceNode,\n    localAddress: options.localAddress || this.localAddress,\n    requestTimeout: options.requestTimeout || this.requestTimeout,\n    protocols: options.protocols || void 0,\n    isReactNative: this.isReactNative\n  });\n  return transport;\n};\n\nfunction clone(obj) {\n  var o = {};\n\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      o[i] = obj[i];\n    }\n  }\n\n  return o;\n}\n/**\n * Initializes transport to use and starts probe.\n *\n * @api private\n */\n\n\nSocket.prototype.open = function () {\n  var transport;\n\n  if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') !== -1) {\n    transport = 'websocket';\n  } else if (0 === this.transports.length) {\n    // Emit error on next tick so it can be listened to\n    var self = this;\n    setTimeout(function () {\n      self.emit('error', 'No transports available');\n    }, 0);\n    return;\n  } else {\n    transport = this.transports[0];\n  }\n\n  this.readyState = 'opening'; // Retry with the next transport if the transport is disabled (jsonp: false)\n\n  try {\n    transport = this.createTransport(transport);\n  } catch (e) {\n    this.transports.shift();\n    this.open();\n    return;\n  }\n\n  transport.open();\n  this.setTransport(transport);\n};\n/**\n * Sets the current transport. Disables the existing one (if any).\n *\n * @api private\n */\n\n\nSocket.prototype.setTransport = function (transport) {\n  debug('setting transport %s', transport.name);\n  var self = this;\n\n  if (this.transport) {\n    debug('clearing existing transport %s', this.transport.name);\n    this.transport.removeAllListeners();\n  } // set up transport\n\n\n  this.transport = transport; // set up transport listeners\n\n  transport.on('drain', function () {\n    self.onDrain();\n  }).on('packet', function (packet) {\n    self.onPacket(packet);\n  }).on('error', function (e) {\n    self.onError(e);\n  }).on('close', function () {\n    self.onClose('transport close');\n  });\n};\n/**\n * Probes a transport.\n *\n * @param {String} transport name\n * @api private\n */\n\n\nSocket.prototype.probe = function (name) {\n  debug('probing transport \"%s\"', name);\n  var transport = this.createTransport(name, {\n    probe: 1\n  });\n  var failed = false;\n  var self = this;\n  Socket.priorWebsocketSuccess = false;\n\n  function onTransportOpen() {\n    if (self.onlyBinaryUpgrades) {\n      var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;\n      failed = failed || upgradeLosesBinary;\n    }\n\n    if (failed) return;\n    debug('probe transport \"%s\" opened', name);\n    transport.send([{\n      type: 'ping',\n      data: 'probe'\n    }]);\n    transport.once('packet', function (msg) {\n      if (failed) return;\n\n      if ('pong' === msg.type && 'probe' === msg.data) {\n        debug('probe transport \"%s\" pong', name);\n        self.upgrading = true;\n        self.emit('upgrading', transport);\n        if (!transport) return;\n        Socket.priorWebsocketSuccess = 'websocket' === transport.name;\n        debug('pausing current transport \"%s\"', self.transport.name);\n        self.transport.pause(function () {\n          if (failed) return;\n          if ('closed' === self.readyState) return;\n          debug('changing transport and sending upgrade packet');\n          cleanup();\n          self.setTransport(transport);\n          transport.send([{\n            type: 'upgrade'\n          }]);\n          self.emit('upgrade', transport);\n          transport = null;\n          self.upgrading = false;\n          self.flush();\n        });\n      } else {\n        debug('probe transport \"%s\" failed', name);\n        var err = new Error('probe error');\n        err.transport = transport.name;\n        self.emit('upgradeError', err);\n      }\n    });\n  }\n\n  function freezeTransport() {\n    if (failed) return; // Any callback called by transport should be ignored since now\n\n    failed = true;\n    cleanup();\n    transport.close();\n    transport = null;\n  } // Handle any error that happens while probing\n\n\n  function onerror(err) {\n    var error = new Error('probe error: ' + err);\n    error.transport = transport.name;\n    freezeTransport();\n    debug('probe transport \"%s\" failed because of error: %s', name, err);\n    self.emit('upgradeError', error);\n  }\n\n  function onTransportClose() {\n    onerror('transport closed');\n  } // When the socket is closed while we're probing\n\n\n  function onclose() {\n    onerror('socket closed');\n  } // When the socket is upgraded while we're probing\n\n\n  function onupgrade(to) {\n    if (transport && to.name !== transport.name) {\n      debug('\"%s\" works - aborting \"%s\"', to.name, transport.name);\n      freezeTransport();\n    }\n  } // Remove all listeners on the transport and on self\n\n\n  function cleanup() {\n    transport.removeListener('open', onTransportOpen);\n    transport.removeListener('error', onerror);\n    transport.removeListener('close', onTransportClose);\n    self.removeListener('close', onclose);\n    self.removeListener('upgrading', onupgrade);\n  }\n\n  transport.once('open', onTransportOpen);\n  transport.once('error', onerror);\n  transport.once('close', onTransportClose);\n  this.once('close', onclose);\n  this.once('upgrading', onupgrade);\n  transport.open();\n};\n/**\n * Called when connection is deemed open.\n *\n * @api public\n */\n\n\nSocket.prototype.onOpen = function () {\n  debug('socket open');\n  this.readyState = 'open';\n  Socket.priorWebsocketSuccess = 'websocket' === this.transport.name;\n  this.emit('open');\n  this.flush(); // we check for `readyState` in case an `open`\n  // listener already closed the socket\n\n  if ('open' === this.readyState && this.upgrade && this.transport.pause) {\n    debug('starting upgrade probes');\n\n    for (var i = 0, l = this.upgrades.length; i < l; i++) {\n      this.probe(this.upgrades[i]);\n    }\n  }\n};\n/**\n * Handles a packet.\n *\n * @api private\n */\n\n\nSocket.prototype.onPacket = function (packet) {\n  if ('opening' === this.readyState || 'open' === this.readyState || 'closing' === this.readyState) {\n    debug('socket receive: type \"%s\", data \"%s\"', packet.type, packet.data);\n    this.emit('packet', packet); // Socket is live - any packet counts\n\n    this.emit('heartbeat');\n\n    switch (packet.type) {\n      case 'open':\n        this.onHandshake(JSON.parse(packet.data));\n        break;\n\n      case 'pong':\n        this.setPing();\n        this.emit('pong');\n        break;\n\n      case 'error':\n        var err = new Error('server error');\n        err.code = packet.data;\n        this.onError(err);\n        break;\n\n      case 'message':\n        this.emit('data', packet.data);\n        this.emit('message', packet.data);\n        break;\n    }\n  } else {\n    debug('packet received with socket readyState \"%s\"', this.readyState);\n  }\n};\n/**\n * Called upon handshake completion.\n *\n * @param {Object} handshake obj\n * @api private\n */\n\n\nSocket.prototype.onHandshake = function (data) {\n  this.emit('handshake', data);\n  this.id = data.sid;\n  this.transport.query.sid = data.sid;\n  this.upgrades = this.filterUpgrades(data.upgrades);\n  this.pingInterval = data.pingInterval;\n  this.pingTimeout = data.pingTimeout;\n  this.onOpen(); // In case open handler closes socket\n\n  if ('closed' === this.readyState) return;\n  this.setPing(); // Prolong liveness of socket on heartbeat\n\n  this.removeListener('heartbeat', this.onHeartbeat);\n  this.on('heartbeat', this.onHeartbeat);\n};\n/**\n * Resets ping timeout.\n *\n * @api private\n */\n\n\nSocket.prototype.onHeartbeat = function (timeout) {\n  clearTimeout(this.pingTimeoutTimer);\n  var self = this;\n  self.pingTimeoutTimer = setTimeout(function () {\n    if ('closed' === self.readyState) return;\n    self.onClose('ping timeout');\n  }, timeout || self.pingInterval + self.pingTimeout);\n};\n/**\n * Pings server every `this.pingInterval` and expects response\n * within `this.pingTimeout` or closes connection.\n *\n * @api private\n */\n\n\nSocket.prototype.setPing = function () {\n  var self = this;\n  clearTimeout(self.pingIntervalTimer);\n  self.pingIntervalTimer = setTimeout(function () {\n    debug('writing ping packet - expecting pong within %sms', self.pingTimeout);\n    self.ping();\n    self.onHeartbeat(self.pingTimeout);\n  }, self.pingInterval);\n};\n/**\n* Sends a ping packet.\n*\n* @api private\n*/\n\n\nSocket.prototype.ping = function () {\n  var self = this;\n  this.sendPacket('ping', function () {\n    self.emit('ping');\n  });\n};\n/**\n * Called on `drain` event\n *\n * @api private\n */\n\n\nSocket.prototype.onDrain = function () {\n  this.writeBuffer.splice(0, this.prevBufferLen); // setting prevBufferLen = 0 is very important\n  // for example, when upgrading, upgrade packet is sent over,\n  // and a nonzero prevBufferLen could cause problems on `drain`\n\n  this.prevBufferLen = 0;\n\n  if (0 === this.writeBuffer.length) {\n    this.emit('drain');\n  } else {\n    this.flush();\n  }\n};\n/**\n * Flush write buffers.\n *\n * @api private\n */\n\n\nSocket.prototype.flush = function () {\n  if ('closed' !== this.readyState && this.transport.writable && !this.upgrading && this.writeBuffer.length) {\n    debug('flushing %d packets in socket', this.writeBuffer.length);\n    this.transport.send(this.writeBuffer); // keep track of current length of writeBuffer\n    // splice writeBuffer and callbackBuffer on `drain`\n\n    this.prevBufferLen = this.writeBuffer.length;\n    this.emit('flush');\n  }\n};\n/**\n * Sends a message.\n *\n * @param {String} message.\n * @param {Function} callback function.\n * @param {Object} options.\n * @return {Socket} for chaining.\n * @api public\n */\n\n\nSocket.prototype.write = Socket.prototype.send = function (msg, options, fn) {\n  this.sendPacket('message', msg, options, fn);\n  return this;\n};\n/**\n * Sends a packet.\n *\n * @param {String} packet type.\n * @param {String} data.\n * @param {Object} options.\n * @param {Function} callback function.\n * @api private\n */\n\n\nSocket.prototype.sendPacket = function (type, data, options, fn) {\n  if ('function' === typeof data) {\n    fn = data;\n    data = undefined;\n  }\n\n  if ('function' === typeof options) {\n    fn = options;\n    options = null;\n  }\n\n  if ('closing' === this.readyState || 'closed' === this.readyState) {\n    return;\n  }\n\n  options = options || {};\n  options.compress = false !== options.compress;\n  var packet = {\n    type: type,\n    data: data,\n    options: options\n  };\n  this.emit('packetCreate', packet);\n  this.writeBuffer.push(packet);\n  if (fn) this.once('flush', fn);\n  this.flush();\n};\n/**\n * Closes the connection.\n *\n * @api private\n */\n\n\nSocket.prototype.close = function () {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.readyState = 'closing';\n    var self = this;\n\n    if (this.writeBuffer.length) {\n      this.once('drain', function () {\n        if (this.upgrading) {\n          waitForUpgrade();\n        } else {\n          close();\n        }\n      });\n    } else if (this.upgrading) {\n      waitForUpgrade();\n    } else {\n      close();\n    }\n  }\n\n  function close() {\n    self.onClose('forced close');\n    debug('socket closing - telling transport to close');\n    self.transport.close();\n  }\n\n  function cleanupAndClose() {\n    self.removeListener('upgrade', cleanupAndClose);\n    self.removeListener('upgradeError', cleanupAndClose);\n    close();\n  }\n\n  function waitForUpgrade() {\n    // wait for upgrade to finish since we can't send packets while pausing a transport\n    self.once('upgrade', cleanupAndClose);\n    self.once('upgradeError', cleanupAndClose);\n  }\n\n  return this;\n};\n/**\n * Called upon transport error\n *\n * @api private\n */\n\n\nSocket.prototype.onError = function (err) {\n  debug('socket error %j', err);\n  Socket.priorWebsocketSuccess = false;\n  this.emit('error', err);\n  this.onClose('transport error', err);\n};\n/**\n * Called upon transport close.\n *\n * @api private\n */\n\n\nSocket.prototype.onClose = function (reason, desc) {\n  if ('opening' === this.readyState || 'open' === this.readyState || 'closing' === this.readyState) {\n    debug('socket close with reason: \"%s\"', reason);\n    var self = this; // clear timers\n\n    clearTimeout(this.pingIntervalTimer);\n    clearTimeout(this.pingTimeoutTimer); // stop event from firing again for transport\n\n    this.transport.removeAllListeners('close'); // ensure transport won't stay open\n\n    this.transport.close(); // ignore further transport communication\n\n    this.transport.removeAllListeners(); // set ready state\n\n    this.readyState = 'closed'; // clear session id\n\n    this.id = null; // emit close event\n\n    this.emit('close', reason, desc); // clean buffers after, so users can still\n    // grab the buffers on `close` event\n\n    self.writeBuffer = [];\n    self.prevBufferLen = 0;\n  }\n};\n/**\n * Filters upgrades, returning only those matching client transports.\n *\n * @param {Array} server upgrades\n * @api private\n *\n */\n\n\nSocket.prototype.filterUpgrades = function (upgrades) {\n  var filteredUpgrades = [];\n\n  for (var i = 0, j = upgrades.length; i < j; i++) {\n    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);\n  }\n\n  return filteredUpgrades;\n};","/**\n * Module exports.\n *\n * Logic borrowed from Modernizr:\n *\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n */\ntry {\n  module.exports = typeof XMLHttpRequest !== 'undefined' && 'withCredentials' in new XMLHttpRequest();\n} catch (err) {\n  // if XMLHttp support is disabled in IE then it will throw\n  // when trying to create\n  module.exports = false;\n}","/* global attachEvent */\n\n/**\n * Module requirements.\n */\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\n\nvar Polling = require('./polling');\n\nvar Emitter = require('component-emitter');\n\nvar inherit = require('component-inherit');\n\nvar debug = require('debug')('engine.io-client:polling-xhr');\n/**\n * Module exports.\n */\n\n\nmodule.exports = XHR;\nmodule.exports.Request = Request;\n/**\n * Empty function\n */\n\nfunction empty() {}\n/**\n * XHR Polling constructor.\n *\n * @param {Object} opts\n * @api public\n */\n\n\nfunction XHR(opts) {\n  Polling.call(this, opts);\n  this.requestTimeout = opts.requestTimeout;\n  this.extraHeaders = opts.extraHeaders;\n\n  if (typeof location !== 'undefined') {\n    var isSSL = 'https:' === location.protocol;\n    var port = location.port; // some user agents have empty `location.port`\n\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    this.xd = typeof location !== 'undefined' && opts.hostname !== location.hostname || port !== opts.port;\n    this.xs = opts.secure !== isSSL;\n  }\n}\n/**\n * Inherits from Polling.\n */\n\n\ninherit(XHR, Polling);\n/**\n * XHR supports binary\n */\n\nXHR.prototype.supportsBinary = true;\n/**\n * Creates a request.\n *\n * @param {String} method\n * @api private\n */\n\nXHR.prototype.request = function (opts) {\n  opts = opts || {};\n  opts.uri = this.uri();\n  opts.xd = this.xd;\n  opts.xs = this.xs;\n  opts.agent = this.agent || false;\n  opts.supportsBinary = this.supportsBinary;\n  opts.enablesXDR = this.enablesXDR;\n  opts.withCredentials = this.withCredentials; // SSL options for Node.js client\n\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  opts.requestTimeout = this.requestTimeout; // other options for Node.js client\n\n  opts.extraHeaders = this.extraHeaders;\n  return new Request(opts);\n};\n/**\n * Sends data.\n *\n * @param {String} data to send.\n * @param {Function} called upon flush.\n * @api private\n */\n\n\nXHR.prototype.doWrite = function (data, fn) {\n  var isBinary = typeof data !== 'string' && data !== undefined;\n  var req = this.request({\n    method: 'POST',\n    data: data,\n    isBinary: isBinary\n  });\n  var self = this;\n  req.on('success', fn);\n  req.on('error', function (err) {\n    self.onError('xhr post error', err);\n  });\n  this.sendXhr = req;\n};\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\n\nXHR.prototype.doPoll = function () {\n  debug('xhr poll');\n  var req = this.request();\n  var self = this;\n  req.on('data', function (data) {\n    self.onData(data);\n  });\n  req.on('error', function (err) {\n    self.onError('xhr poll error', err);\n  });\n  this.pollXhr = req;\n};\n/**\n * Request constructor\n *\n * @param {Object} options\n * @api public\n */\n\n\nfunction Request(opts) {\n  this.method = opts.method || 'GET';\n  this.uri = opts.uri;\n  this.xd = !!opts.xd;\n  this.xs = !!opts.xs;\n  this.async = false !== opts.async;\n  this.data = undefined !== opts.data ? opts.data : null;\n  this.agent = opts.agent;\n  this.isBinary = opts.isBinary;\n  this.supportsBinary = opts.supportsBinary;\n  this.enablesXDR = opts.enablesXDR;\n  this.withCredentials = opts.withCredentials;\n  this.requestTimeout = opts.requestTimeout; // SSL options for Node.js client\n\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized; // other options for Node.js client\n\n  this.extraHeaders = opts.extraHeaders;\n  this.create();\n}\n/**\n * Mix in `Emitter`.\n */\n\n\nEmitter(Request.prototype);\n/**\n * Creates the XHR object and sends the request.\n *\n * @api private\n */\n\nRequest.prototype.create = function () {\n  var opts = {\n    agent: this.agent,\n    xdomain: this.xd,\n    xscheme: this.xs,\n    enablesXDR: this.enablesXDR\n  }; // SSL options for Node.js client\n\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  var xhr = this.xhr = new XMLHttpRequest(opts);\n  var self = this;\n\n  try {\n    debug('xhr open %s: %s', this.method, this.uri);\n    xhr.open(this.method, this.uri, this.async);\n\n    try {\n      if (this.extraHeaders) {\n        xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n\n        for (var i in this.extraHeaders) {\n          if (this.extraHeaders.hasOwnProperty(i)) {\n            xhr.setRequestHeader(i, this.extraHeaders[i]);\n          }\n        }\n      }\n    } catch (e) {}\n\n    if ('POST' === this.method) {\n      try {\n        if (this.isBinary) {\n          xhr.setRequestHeader('Content-type', 'application/octet-stream');\n        } else {\n          xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');\n        }\n      } catch (e) {}\n    }\n\n    try {\n      xhr.setRequestHeader('Accept', '*/*');\n    } catch (e) {} // ie6 check\n\n\n    if ('withCredentials' in xhr) {\n      xhr.withCredentials = this.withCredentials;\n    }\n\n    if (this.requestTimeout) {\n      xhr.timeout = this.requestTimeout;\n    }\n\n    if (this.hasXDR()) {\n      xhr.onload = function () {\n        self.onLoad();\n      };\n\n      xhr.onerror = function () {\n        self.onError(xhr.responseText);\n      };\n    } else {\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState === 2) {\n          try {\n            var contentType = xhr.getResponseHeader('Content-Type');\n\n            if (self.supportsBinary && contentType === 'application/octet-stream' || contentType === 'application/octet-stream; charset=UTF-8') {\n              xhr.responseType = 'arraybuffer';\n            }\n          } catch (e) {}\n        }\n\n        if (4 !== xhr.readyState) return;\n\n        if (200 === xhr.status || 1223 === xhr.status) {\n          self.onLoad();\n        } else {\n          // make sure the `error` event handler that's user-set\n          // does not throw in the same tick and gets caught here\n          setTimeout(function () {\n            self.onError(typeof xhr.status === 'number' ? xhr.status : 0);\n          }, 0);\n        }\n      };\n    }\n\n    debug('xhr data %s', this.data);\n    xhr.send(this.data);\n  } catch (e) {\n    // Need to defer since .create() is called directly fhrom the constructor\n    // and thus the 'error' event can only be only bound *after* this exception\n    // occurs.  Therefore, also, we cannot throw here at all.\n    setTimeout(function () {\n      self.onError(e);\n    }, 0);\n    return;\n  }\n\n  if (typeof document !== 'undefined') {\n    this.index = Request.requestsCount++;\n    Request.requests[this.index] = this;\n  }\n};\n/**\n * Called upon successful response.\n *\n * @api private\n */\n\n\nRequest.prototype.onSuccess = function () {\n  this.emit('success');\n  this.cleanup();\n};\n/**\n * Called if we have data.\n *\n * @api private\n */\n\n\nRequest.prototype.onData = function (data) {\n  this.emit('data', data);\n  this.onSuccess();\n};\n/**\n * Called upon error.\n *\n * @api private\n */\n\n\nRequest.prototype.onError = function (err) {\n  this.emit('error', err);\n  this.cleanup(true);\n};\n/**\n * Cleans up house.\n *\n * @api private\n */\n\n\nRequest.prototype.cleanup = function (fromError) {\n  if ('undefined' === typeof this.xhr || null === this.xhr) {\n    return;\n  } // xmlhttprequest\n\n\n  if (this.hasXDR()) {\n    this.xhr.onload = this.xhr.onerror = empty;\n  } else {\n    this.xhr.onreadystatechange = empty;\n  }\n\n  if (fromError) {\n    try {\n      this.xhr.abort();\n    } catch (e) {}\n  }\n\n  if (typeof document !== 'undefined') {\n    delete Request.requests[this.index];\n  }\n\n  this.xhr = null;\n};\n/**\n * Called upon load.\n *\n * @api private\n */\n\n\nRequest.prototype.onLoad = function () {\n  var data;\n\n  try {\n    var contentType;\n\n    try {\n      contentType = this.xhr.getResponseHeader('Content-Type');\n    } catch (e) {}\n\n    if (contentType === 'application/octet-stream' || contentType === 'application/octet-stream; charset=UTF-8') {\n      data = this.xhr.response || this.xhr.responseText;\n    } else {\n      data = this.xhr.responseText;\n    }\n  } catch (e) {\n    this.onError(e);\n  }\n\n  if (null != data) {\n    this.onData(data);\n  }\n};\n/**\n * Check if it has XDomainRequest.\n *\n * @api private\n */\n\n\nRequest.prototype.hasXDR = function () {\n  return typeof XDomainRequest !== 'undefined' && !this.xs && this.enablesXDR;\n};\n/**\n * Aborts the request.\n *\n * @api public\n */\n\n\nRequest.prototype.abort = function () {\n  this.cleanup();\n};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\n\n\nRequest.requestsCount = 0;\nRequest.requests = {};\n\nif (typeof document !== 'undefined') {\n  if (typeof attachEvent === 'function') {\n    attachEvent('onunload', unloadHandler);\n  } else if (typeof addEventListener === 'function') {\n    var terminationEvent = 'onpagehide' in self ? 'pagehide' : 'unload';\n    addEventListener(terminationEvent, unloadHandler, false);\n  }\n}\n\nfunction unloadHandler() {\n  for (var i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}","/**\n * Gets the keys for an object.\n *\n * @return {Array} keys\n * @api private\n */\nmodule.exports = Object.keys || function keys(obj) {\n  var arr = [];\n  var has = Object.prototype.hasOwnProperty;\n\n  for (var i in obj) {\n    if (has.call(obj, i)) {\n      arr.push(i);\n    }\n  }\n\n  return arr;\n};","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};","/**\n * An abstraction for slicing an arraybuffer even when\n * ArrayBuffer.prototype.slice is not supported\n *\n * @api public\n */\nmodule.exports = function (arraybuffer, start, end) {\n  var bytes = arraybuffer.byteLength;\n  start = start || 0;\n  end = end || bytes;\n\n  if (arraybuffer.slice) {\n    return arraybuffer.slice(start, end);\n  }\n\n  if (start < 0) {\n    start += bytes;\n  }\n\n  if (end < 0) {\n    end += bytes;\n  }\n\n  if (end > bytes) {\n    end = bytes;\n  }\n\n  if (start >= bytes || start >= end || bytes === 0) {\n    return new ArrayBuffer(0);\n  }\n\n  var abv = new Uint8Array(arraybuffer);\n  var result = new Uint8Array(end - start);\n\n  for (var i = start, ii = 0; i < end; i++, ii++) {\n    result[ii] = abv[i];\n  }\n\n  return result.buffer;\n};","module.exports = after;\n\nfunction after(count, callback, err_cb) {\n  var bail = false;\n  err_cb = err_cb || noop;\n  proxy.count = count;\n  return count === 0 ? callback() : proxy;\n\n  function proxy(err, result) {\n    if (proxy.count <= 0) {\n      throw new Error('after called too many times');\n    }\n\n    --proxy.count; // after first error, rest are passed to err_cb\n\n    if (err) {\n      bail = true;\n      callback(err); // future error callbacks will go to error handler\n\n      callback = err_cb;\n    } else if (proxy.count === 0 && !bail) {\n      callback(null, result);\n    }\n  }\n}\n\nfunction noop() {}","/*! https://mths.be/utf8js v2.1.2 by @mathias */\nvar stringFromCharCode = String.fromCharCode; // Taken from https://mths.be/punycode\n\nfunction ucs2decode(string) {\n  var output = [];\n  var counter = 0;\n  var length = string.length;\n  var value;\n  var extra;\n\n  while (counter < length) {\n    value = string.charCodeAt(counter++);\n\n    if (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n      // high surrogate, and there is a next character\n      extra = string.charCodeAt(counter++);\n\n      if ((extra & 0xFC00) == 0xDC00) {\n        // low surrogate\n        output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n      } else {\n        // unmatched surrogate; only append this code unit, in case the next\n        // code unit is the high surrogate of a surrogate pair\n        output.push(value);\n        counter--;\n      }\n    } else {\n      output.push(value);\n    }\n  }\n\n  return output;\n} // Taken from https://mths.be/punycode\n\n\nfunction ucs2encode(array) {\n  var length = array.length;\n  var index = -1;\n  var value;\n  var output = '';\n\n  while (++index < length) {\n    value = array[index];\n\n    if (value > 0xFFFF) {\n      value -= 0x10000;\n      output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n      value = 0xDC00 | value & 0x3FF;\n    }\n\n    output += stringFromCharCode(value);\n  }\n\n  return output;\n}\n\nfunction checkScalarValue(codePoint, strict) {\n  if (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n    if (strict) {\n      throw Error('Lone surrogate U+' + codePoint.toString(16).toUpperCase() + ' is not a scalar value');\n    }\n\n    return false;\n  }\n\n  return true;\n}\n/*--------------------------------------------------------------------------*/\n\n\nfunction createByte(codePoint, shift) {\n  return stringFromCharCode(codePoint >> shift & 0x3F | 0x80);\n}\n\nfunction encodeCodePoint(codePoint, strict) {\n  if ((codePoint & 0xFFFFFF80) == 0) {\n    // 1-byte sequence\n    return stringFromCharCode(codePoint);\n  }\n\n  var symbol = '';\n\n  if ((codePoint & 0xFFFFF800) == 0) {\n    // 2-byte sequence\n    symbol = stringFromCharCode(codePoint >> 6 & 0x1F | 0xC0);\n  } else if ((codePoint & 0xFFFF0000) == 0) {\n    // 3-byte sequence\n    if (!checkScalarValue(codePoint, strict)) {\n      codePoint = 0xFFFD;\n    }\n\n    symbol = stringFromCharCode(codePoint >> 12 & 0x0F | 0xE0);\n    symbol += createByte(codePoint, 6);\n  } else if ((codePoint & 0xFFE00000) == 0) {\n    // 4-byte sequence\n    symbol = stringFromCharCode(codePoint >> 18 & 0x07 | 0xF0);\n    symbol += createByte(codePoint, 12);\n    symbol += createByte(codePoint, 6);\n  }\n\n  symbol += stringFromCharCode(codePoint & 0x3F | 0x80);\n  return symbol;\n}\n\nfunction utf8encode(string, opts) {\n  opts = opts || {};\n  var strict = false !== opts.strict;\n  var codePoints = ucs2decode(string);\n  var length = codePoints.length;\n  var index = -1;\n  var codePoint;\n  var byteString = '';\n\n  while (++index < length) {\n    codePoint = codePoints[index];\n    byteString += encodeCodePoint(codePoint, strict);\n  }\n\n  return byteString;\n}\n/*--------------------------------------------------------------------------*/\n\n\nfunction readContinuationByte() {\n  if (byteIndex >= byteCount) {\n    throw Error('Invalid byte index');\n  }\n\n  var continuationByte = byteArray[byteIndex] & 0xFF;\n  byteIndex++;\n\n  if ((continuationByte & 0xC0) == 0x80) {\n    return continuationByte & 0x3F;\n  } // If we end up here, it’s not a continuation byte\n\n\n  throw Error('Invalid continuation byte');\n}\n\nfunction decodeSymbol(strict) {\n  var byte1;\n  var byte2;\n  var byte3;\n  var byte4;\n  var codePoint;\n\n  if (byteIndex > byteCount) {\n    throw Error('Invalid byte index');\n  }\n\n  if (byteIndex == byteCount) {\n    return false;\n  } // Read first byte\n\n\n  byte1 = byteArray[byteIndex] & 0xFF;\n  byteIndex++; // 1-byte sequence (no continuation bytes)\n\n  if ((byte1 & 0x80) == 0) {\n    return byte1;\n  } // 2-byte sequence\n\n\n  if ((byte1 & 0xE0) == 0xC0) {\n    byte2 = readContinuationByte();\n    codePoint = (byte1 & 0x1F) << 6 | byte2;\n\n    if (codePoint >= 0x80) {\n      return codePoint;\n    } else {\n      throw Error('Invalid continuation byte');\n    }\n  } // 3-byte sequence (may include unpaired surrogates)\n\n\n  if ((byte1 & 0xF0) == 0xE0) {\n    byte2 = readContinuationByte();\n    byte3 = readContinuationByte();\n    codePoint = (byte1 & 0x0F) << 12 | byte2 << 6 | byte3;\n\n    if (codePoint >= 0x0800) {\n      return checkScalarValue(codePoint, strict) ? codePoint : 0xFFFD;\n    } else {\n      throw Error('Invalid continuation byte');\n    }\n  } // 4-byte sequence\n\n\n  if ((byte1 & 0xF8) == 0xF0) {\n    byte2 = readContinuationByte();\n    byte3 = readContinuationByte();\n    byte4 = readContinuationByte();\n    codePoint = (byte1 & 0x07) << 0x12 | byte2 << 0x0C | byte3 << 0x06 | byte4;\n\n    if (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n      return codePoint;\n    }\n  }\n\n  throw Error('Invalid UTF-8 detected');\n}\n\nvar byteArray;\nvar byteCount;\nvar byteIndex;\n\nfunction utf8decode(byteString, opts) {\n  opts = opts || {};\n  var strict = false !== opts.strict;\n  byteArray = ucs2decode(byteString);\n  byteCount = byteArray.length;\n  byteIndex = 0;\n  var codePoints = [];\n  var tmp;\n\n  while ((tmp = decodeSymbol(strict)) !== false) {\n    codePoints.push(tmp);\n  }\n\n  return ucs2encode(codePoints);\n}\n\nmodule.exports = {\n  version: '2.1.2',\n  encode: utf8encode,\n  decode: utf8decode\n};","/*\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n(function () {\n  \"use strict\";\n\n  var chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\"; // Use a lookup table to find the index.\n\n  var lookup = new Uint8Array(256);\n\n  for (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n  }\n\n  exports.encode = function (arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer),\n        i,\n        len = bytes.length,\n        base64 = \"\";\n\n    for (i = 0; i < len; i += 3) {\n      base64 += chars[bytes[i] >> 2];\n      base64 += chars[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n      base64 += chars[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n      base64 += chars[bytes[i + 2] & 63];\n    }\n\n    if (len % 3 === 2) {\n      base64 = base64.substring(0, base64.length - 1) + \"=\";\n    } else if (len % 3 === 1) {\n      base64 = base64.substring(0, base64.length - 2) + \"==\";\n    }\n\n    return base64;\n  };\n\n  exports.decode = function (base64) {\n    var bufferLength = base64.length * 0.75,\n        len = base64.length,\n        i,\n        p = 0,\n        encoded1,\n        encoded2,\n        encoded3,\n        encoded4;\n\n    if (base64[base64.length - 1] === \"=\") {\n      bufferLength--;\n\n      if (base64[base64.length - 2] === \"=\") {\n        bufferLength--;\n      }\n    }\n\n    var arraybuffer = new ArrayBuffer(bufferLength),\n        bytes = new Uint8Array(arraybuffer);\n\n    for (i = 0; i < len; i += 4) {\n      encoded1 = lookup[base64.charCodeAt(i)];\n      encoded2 = lookup[base64.charCodeAt(i + 1)];\n      encoded3 = lookup[base64.charCodeAt(i + 2)];\n      encoded4 = lookup[base64.charCodeAt(i + 3)];\n      bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n      bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n      bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n\n    return arraybuffer;\n  };\n})();","/**\r\n * Create a blob builder even when vendor prefixes exist\r\n */\nvar BlobBuilder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof WebKitBlobBuilder !== 'undefined' ? WebKitBlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : false;\n/**\r\n * Check if Blob constructor is supported\r\n */\n\nvar blobSupported = function () {\n  try {\n    var a = new Blob(['hi']);\n    return a.size === 2;\n  } catch (e) {\n    return false;\n  }\n}();\n/**\r\n * Check if Blob constructor supports ArrayBufferViews\r\n * Fails in Safari 6, so we need to map to ArrayBuffers there.\r\n */\n\n\nvar blobSupportsArrayBufferView = blobSupported && function () {\n  try {\n    var b = new Blob([new Uint8Array([1, 2])]);\n    return b.size === 2;\n  } catch (e) {\n    return false;\n  }\n}();\n/**\r\n * Check if BlobBuilder is supported\r\n */\n\n\nvar blobBuilderSupported = BlobBuilder && BlobBuilder.prototype.append && BlobBuilder.prototype.getBlob;\n/**\r\n * Helper function that maps ArrayBufferViews to ArrayBuffers\r\n * Used by BlobBuilder constructor and old browsers that didn't\r\n * support it in the Blob constructor.\r\n */\n\nfunction mapArrayBufferViews(ary) {\n  return ary.map(function (chunk) {\n    if (chunk.buffer instanceof ArrayBuffer) {\n      var buf = chunk.buffer; // if this is a subarray, make a copy so we only\n      // include the subarray region from the underlying buffer\n\n      if (chunk.byteLength !== buf.byteLength) {\n        var copy = new Uint8Array(chunk.byteLength);\n        copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));\n        buf = copy.buffer;\n      }\n\n      return buf;\n    }\n\n    return chunk;\n  });\n}\n\nfunction BlobBuilderConstructor(ary, options) {\n  options = options || {};\n  var bb = new BlobBuilder();\n  mapArrayBufferViews(ary).forEach(function (part) {\n    bb.append(part);\n  });\n  return options.type ? bb.getBlob(options.type) : bb.getBlob();\n}\n\n;\n\nfunction BlobConstructor(ary, options) {\n  return new Blob(mapArrayBufferViews(ary), options || {});\n}\n\n;\n\nif (typeof Blob !== 'undefined') {\n  BlobBuilderConstructor.prototype = Blob.prototype;\n  BlobConstructor.prototype = Blob.prototype;\n}\n\nmodule.exports = function () {\n  if (blobSupported) {\n    return blobSupportsArrayBufferView ? Blob : BlobConstructor;\n  } else if (blobBuilderSupported) {\n    return BlobBuilderConstructor;\n  } else {\n    return undefined;\n  }\n}();","var _toConsumableArray = require(\"C:\\\\Users\\\\User\\\\Desktop\\\\Web\\\\projects\\\\Entre_cops\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/toConsumableArray\");\n\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\nfunction setup(env) {\n  createDebug.debug = createDebug;\n  createDebug.default = createDebug;\n  createDebug.coerce = coerce;\n  createDebug.disable = disable;\n  createDebug.enable = enable;\n  createDebug.enabled = enabled;\n  createDebug.humanize = require('ms');\n  Object.keys(env).forEach(function (key) {\n    createDebug[key] = env[key];\n  });\n  /**\n  * Active `debug` instances.\n  */\n\n  createDebug.instances = [];\n  /**\n  * The currently active debug mode names, and names to skip.\n  */\n\n  createDebug.names = [];\n  createDebug.skips = [];\n  /**\n  * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n  *\n  * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n  */\n\n  createDebug.formatters = {};\n  /**\n  * Selects a color for a debug namespace\n  * @param {String} namespace The namespace string for the for the debug instance to be colored\n  * @return {Number|String} An ANSI color code for the given namespace\n  * @api private\n  */\n\n  function selectColor(namespace) {\n    var hash = 0;\n\n    for (var i = 0; i < namespace.length; i++) {\n      hash = (hash << 5) - hash + namespace.charCodeAt(i);\n      hash |= 0; // Convert to 32bit integer\n    }\n\n    return createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n  }\n\n  createDebug.selectColor = selectColor;\n  /**\n  * Create a debugger with the given `namespace`.\n  *\n  * @param {String} namespace\n  * @return {Function}\n  * @api public\n  */\n\n  function createDebug(namespace) {\n    var prevTime;\n\n    function debug() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      // Disabled?\n      if (!debug.enabled) {\n        return;\n      }\n\n      var self = debug; // Set `diff` timestamp\n\n      var curr = Number(new Date());\n      var ms = curr - (prevTime || curr);\n      self.diff = ms;\n      self.prev = prevTime;\n      self.curr = curr;\n      prevTime = curr;\n      args[0] = createDebug.coerce(args[0]);\n\n      if (typeof args[0] !== 'string') {\n        // Anything else let's inspect with %O\n        args.unshift('%O');\n      } // Apply any `formatters` transformations\n\n\n      var index = 0;\n      args[0] = args[0].replace(/%([a-zA-Z%])/g, function (match, format) {\n        // If we encounter an escaped % then don't increase the array index\n        if (match === '%%') {\n          return match;\n        }\n\n        index++;\n        var formatter = createDebug.formatters[format];\n\n        if (typeof formatter === 'function') {\n          var val = args[index];\n          match = formatter.call(self, val); // Now we need to remove `args[index]` since it's inlined in the `format`\n\n          args.splice(index, 1);\n          index--;\n        }\n\n        return match;\n      }); // Apply env-specific formatting (colors, etc.)\n\n      createDebug.formatArgs.call(self, args);\n      var logFn = self.log || createDebug.log;\n      logFn.apply(self, args);\n    }\n\n    debug.namespace = namespace;\n    debug.enabled = createDebug.enabled(namespace);\n    debug.useColors = createDebug.useColors();\n    debug.color = selectColor(namespace);\n    debug.destroy = destroy;\n    debug.extend = extend; // Debug.formatArgs = formatArgs;\n    // debug.rawLog = rawLog;\n    // env-specific initialization logic for debug instances\n\n    if (typeof createDebug.init === 'function') {\n      createDebug.init(debug);\n    }\n\n    createDebug.instances.push(debug);\n    return debug;\n  }\n\n  function destroy() {\n    var index = createDebug.instances.indexOf(this);\n\n    if (index !== -1) {\n      createDebug.instances.splice(index, 1);\n      return true;\n    }\n\n    return false;\n  }\n\n  function extend(namespace, delimiter) {\n    var newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n    newDebug.log = this.log;\n    return newDebug;\n  }\n  /**\n  * Enables a debug mode by namespaces. This can include modes\n  * separated by a colon and wildcards.\n  *\n  * @param {String} namespaces\n  * @api public\n  */\n\n\n  function enable(namespaces) {\n    createDebug.save(namespaces);\n    createDebug.names = [];\n    createDebug.skips = [];\n    var i;\n    var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n    var len = split.length;\n\n    for (i = 0; i < len; i++) {\n      if (!split[i]) {\n        // ignore empty strings\n        continue;\n      }\n\n      namespaces = split[i].replace(/\\*/g, '.*?');\n\n      if (namespaces[0] === '-') {\n        createDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n      } else {\n        createDebug.names.push(new RegExp('^' + namespaces + '$'));\n      }\n    }\n\n    for (i = 0; i < createDebug.instances.length; i++) {\n      var instance = createDebug.instances[i];\n      instance.enabled = createDebug.enabled(instance.namespace);\n    }\n  }\n  /**\n  * Disable debug output.\n  *\n  * @return {String} namespaces\n  * @api public\n  */\n\n\n  function disable() {\n    var namespaces = [].concat(_toConsumableArray(createDebug.names.map(toNamespace)), _toConsumableArray(createDebug.skips.map(toNamespace).map(function (namespace) {\n      return '-' + namespace;\n    }))).join(',');\n    createDebug.enable('');\n    return namespaces;\n  }\n  /**\n  * Returns true if the given mode name is enabled, false otherwise.\n  *\n  * @param {String} name\n  * @return {Boolean}\n  * @api public\n  */\n\n\n  function enabled(name) {\n    if (name[name.length - 1] === '*') {\n      return true;\n    }\n\n    var i;\n    var len;\n\n    for (i = 0, len = createDebug.skips.length; i < len; i++) {\n      if (createDebug.skips[i].test(name)) {\n        return false;\n      }\n    }\n\n    for (i = 0, len = createDebug.names.length; i < len; i++) {\n      if (createDebug.names[i].test(name)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n  * Convert regexp to namespace\n  *\n  * @param {RegExp} regxep\n  * @return {String} namespace\n  * @api private\n  */\n\n\n  function toNamespace(regexp) {\n    return regexp.toString().substring(2, regexp.toString().length - 2).replace(/\\.\\*\\?$/, '*');\n  }\n  /**\n  * Coerce `val`.\n  *\n  * @param {Mixed} val\n  * @return {Mixed}\n  * @api private\n  */\n\n\n  function coerce(val) {\n    if (val instanceof Error) {\n      return val.stack || val.message;\n    }\n\n    return val;\n  }\n\n  createDebug.enable(createDebug.load());\n  return createDebug;\n}\n\nmodule.exports = setup;","/**\n * Helpers.\n */\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  var type = typeof val;\n\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n\n  throw new Error('val is not a non-empty string or a valid number. val=' + JSON.stringify(val));\n};\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\n\nfunction parse(str) {\n  str = String(str);\n\n  if (str.length > 100) {\n    return;\n  }\n\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(str);\n\n  if (!match) {\n    return;\n  }\n\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n\n    default:\n      return undefined;\n  }\n}\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n\n  return ms + 'ms';\n}\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n\n  return ms + ' ms';\n}\n/**\n * Pluralization helper.\n */\n\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}","/**\n * Module requirements.\n */\nvar Polling = require('./polling');\n\nvar inherit = require('component-inherit');\n/**\n * Module exports.\n */\n\n\nmodule.exports = JSONPPolling;\n/**\n * Cached regular expressions.\n */\n\nvar rNewline = /\\n/g;\nvar rEscapedNewline = /\\\\n/g;\n/**\n * Global JSONP callbacks.\n */\n\nvar callbacks;\n/**\n * Noop.\n */\n\nfunction empty() {}\n/**\n * Until https://github.com/tc39/proposal-global is shipped.\n */\n\n\nfunction glob() {\n  return typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : {};\n}\n/**\n * JSONP Polling constructor.\n *\n * @param {Object} opts.\n * @api public\n */\n\n\nfunction JSONPPolling(opts) {\n  Polling.call(this, opts);\n  this.query = this.query || {}; // define global callbacks array if not present\n  // we do this here (lazily) to avoid unneeded global pollution\n\n  if (!callbacks) {\n    // we need to consider multiple engines in the same page\n    var global = glob();\n    callbacks = global.___eio = global.___eio || [];\n  } // callback identifier\n\n\n  this.index = callbacks.length; // add callback to jsonp global\n\n  var self = this;\n  callbacks.push(function (msg) {\n    self.onData(msg);\n  }); // append to query string\n\n  this.query.j = this.index; // prevent spurious errors from being emitted when the window is unloaded\n\n  if (typeof addEventListener === 'function') {\n    addEventListener('beforeunload', function () {\n      if (self.script) self.script.onerror = empty;\n    }, false);\n  }\n}\n/**\n * Inherits from Polling.\n */\n\n\ninherit(JSONPPolling, Polling);\n/*\n * JSONP only supports binary as base64 encoded strings\n */\n\nJSONPPolling.prototype.supportsBinary = false;\n/**\n * Closes the socket.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doClose = function () {\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  if (this.form) {\n    this.form.parentNode.removeChild(this.form);\n    this.form = null;\n    this.iframe = null;\n  }\n\n  Polling.prototype.doClose.call(this);\n};\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\n\nJSONPPolling.prototype.doPoll = function () {\n  var self = this;\n  var script = document.createElement('script');\n\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  script.async = true;\n  script.src = this.uri();\n\n  script.onerror = function (e) {\n    self.onError('jsonp poll error', e);\n  };\n\n  var insertAt = document.getElementsByTagName('script')[0];\n\n  if (insertAt) {\n    insertAt.parentNode.insertBefore(script, insertAt);\n  } else {\n    (document.head || document.body).appendChild(script);\n  }\n\n  this.script = script;\n  var isUAgecko = 'undefined' !== typeof navigator && /gecko/i.test(navigator.userAgent);\n\n  if (isUAgecko) {\n    setTimeout(function () {\n      var iframe = document.createElement('iframe');\n      document.body.appendChild(iframe);\n      document.body.removeChild(iframe);\n    }, 100);\n  }\n};\n/**\n * Writes with a hidden iframe.\n *\n * @param {String} data to send\n * @param {Function} called upon flush.\n * @api private\n */\n\n\nJSONPPolling.prototype.doWrite = function (data, fn) {\n  var self = this;\n\n  if (!this.form) {\n    var form = document.createElement('form');\n    var area = document.createElement('textarea');\n    var id = this.iframeId = 'eio_iframe_' + this.index;\n    var iframe;\n    form.className = 'socketio';\n    form.style.position = 'absolute';\n    form.style.top = '-1000px';\n    form.style.left = '-1000px';\n    form.target = id;\n    form.method = 'POST';\n    form.setAttribute('accept-charset', 'utf-8');\n    area.name = 'd';\n    form.appendChild(area);\n    document.body.appendChild(form);\n    this.form = form;\n    this.area = area;\n  }\n\n  this.form.action = this.uri();\n\n  function complete() {\n    initIframe();\n    fn();\n  }\n\n  function initIframe() {\n    if (self.iframe) {\n      try {\n        self.form.removeChild(self.iframe);\n      } catch (e) {\n        self.onError('jsonp polling iframe removal error', e);\n      }\n    }\n\n    try {\n      // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n      var html = '<iframe src=\"javascript:0\" name=\"' + self.iframeId + '\">';\n      iframe = document.createElement(html);\n    } catch (e) {\n      iframe = document.createElement('iframe');\n      iframe.name = self.iframeId;\n      iframe.src = 'javascript:0';\n    }\n\n    iframe.id = self.iframeId;\n    self.form.appendChild(iframe);\n    self.iframe = iframe;\n  }\n\n  initIframe(); // escape \\n to prevent it from being converted into \\r\\n by some UAs\n  // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\n\n  data = data.replace(rEscapedNewline, '\\\\\\n');\n  this.area.value = data.replace(rNewline, '\\\\n');\n\n  try {\n    this.form.submit();\n  } catch (e) {}\n\n  if (this.iframe.attachEvent) {\n    this.iframe.onreadystatechange = function () {\n      if (self.iframe.readyState === 'complete') {\n        complete();\n      }\n    };\n  } else {\n    this.iframe.onload = complete;\n  }\n};","/**\n * Module dependencies.\n */\nvar Transport = require('../transport');\n\nvar parser = require('engine.io-parser');\n\nvar parseqs = require('parseqs');\n\nvar inherit = require('component-inherit');\n\nvar yeast = require('yeast');\n\nvar debug = require('debug')('engine.io-client:websocket');\n\nvar BrowserWebSocket, NodeWebSocket;\n\nif (typeof WebSocket !== 'undefined') {\n  BrowserWebSocket = WebSocket;\n} else if (typeof self !== 'undefined') {\n  BrowserWebSocket = self.WebSocket || self.MozWebSocket;\n}\n\nif (typeof window === 'undefined') {\n  try {\n    NodeWebSocket = require('ws');\n  } catch (e) {}\n}\n/**\n * Get either the `WebSocket` or `MozWebSocket` globals\n * in the browser or try to resolve WebSocket-compatible\n * interface exposed by `ws` for Node-like environment.\n */\n\n\nvar WebSocketImpl = BrowserWebSocket || NodeWebSocket;\n/**\n * Module exports.\n */\n\nmodule.exports = WS;\n/**\n * WebSocket transport constructor.\n *\n * @api {Object} connection options\n * @api public\n */\n\nfunction WS(opts) {\n  var forceBase64 = opts && opts.forceBase64;\n\n  if (forceBase64) {\n    this.supportsBinary = false;\n  }\n\n  this.perMessageDeflate = opts.perMessageDeflate;\n  this.usingBrowserWebSocket = BrowserWebSocket && !opts.forceNode;\n  this.protocols = opts.protocols;\n\n  if (!this.usingBrowserWebSocket) {\n    WebSocketImpl = NodeWebSocket;\n  }\n\n  Transport.call(this, opts);\n}\n/**\n * Inherits from Transport.\n */\n\n\ninherit(WS, Transport);\n/**\n * Transport name.\n *\n * @api public\n */\n\nWS.prototype.name = 'websocket';\n/*\n * WebSockets support binary\n */\n\nWS.prototype.supportsBinary = true;\n/**\n * Opens socket.\n *\n * @api private\n */\n\nWS.prototype.doOpen = function () {\n  if (!this.check()) {\n    // let probe timeout\n    return;\n  }\n\n  var uri = this.uri();\n  var protocols = this.protocols;\n  var opts = {\n    agent: this.agent,\n    perMessageDeflate: this.perMessageDeflate\n  }; // SSL options for Node.js client\n\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n\n  if (this.extraHeaders) {\n    opts.headers = this.extraHeaders;\n  }\n\n  if (this.localAddress) {\n    opts.localAddress = this.localAddress;\n  }\n\n  try {\n    this.ws = this.usingBrowserWebSocket && !this.isReactNative ? protocols ? new WebSocketImpl(uri, protocols) : new WebSocketImpl(uri) : new WebSocketImpl(uri, protocols, opts);\n  } catch (err) {\n    return this.emit('error', err);\n  }\n\n  if (this.ws.binaryType === undefined) {\n    this.supportsBinary = false;\n  }\n\n  if (this.ws.supports && this.ws.supports.binary) {\n    this.supportsBinary = true;\n    this.ws.binaryType = 'nodebuffer';\n  } else {\n    this.ws.binaryType = 'arraybuffer';\n  }\n\n  this.addEventListeners();\n};\n/**\n * Adds event listeners to the socket\n *\n * @api private\n */\n\n\nWS.prototype.addEventListeners = function () {\n  var self = this;\n\n  this.ws.onopen = function () {\n    self.onOpen();\n  };\n\n  this.ws.onclose = function () {\n    self.onClose();\n  };\n\n  this.ws.onmessage = function (ev) {\n    self.onData(ev.data);\n  };\n\n  this.ws.onerror = function (e) {\n    self.onError('websocket error', e);\n  };\n};\n/**\n * Writes data to socket.\n *\n * @param {Array} array of packets.\n * @api private\n */\n\n\nWS.prototype.write = function (packets) {\n  var self = this;\n  this.writable = false; // encodePacket efficient as it uses WS framing\n  // no need for encodePayload\n\n  var total = packets.length;\n\n  for (var i = 0, l = total; i < l; i++) {\n    (function (packet) {\n      parser.encodePacket(packet, self.supportsBinary, function (data) {\n        if (!self.usingBrowserWebSocket) {\n          // always create a new object (GH-437)\n          var opts = {};\n\n          if (packet.options) {\n            opts.compress = packet.options.compress;\n          }\n\n          if (self.perMessageDeflate) {\n            var len = 'string' === typeof data ? Buffer.byteLength(data) : data.length;\n\n            if (len < self.perMessageDeflate.threshold) {\n              opts.compress = false;\n            }\n          }\n        } // Sometimes the websocket has already been closed but the browser didn't\n        // have a chance of informing us about it yet, in that case send will\n        // throw an error\n\n\n        try {\n          if (self.usingBrowserWebSocket) {\n            // TypeError is thrown when passing the second argument on Safari\n            self.ws.send(data);\n          } else {\n            self.ws.send(data, opts);\n          }\n        } catch (e) {\n          debug('websocket closed before onclose event');\n        }\n\n        --total || done();\n      });\n    })(packets[i]);\n  }\n\n  function done() {\n    self.emit('flush'); // fake drain\n    // defer to next tick to allow Socket to clear writeBuffer\n\n    setTimeout(function () {\n      self.writable = true;\n      self.emit('drain');\n    }, 0);\n  }\n};\n/**\n * Called upon close\n *\n * @api private\n */\n\n\nWS.prototype.onClose = function () {\n  Transport.prototype.onClose.call(this);\n};\n/**\n * Closes socket.\n *\n * @api private\n */\n\n\nWS.prototype.doClose = function () {\n  if (typeof this.ws !== 'undefined') {\n    this.ws.close();\n  }\n};\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\n\nWS.prototype.uri = function () {\n  var query = this.query || {};\n  var schema = this.secure ? 'wss' : 'ws';\n  var port = ''; // avoid port if default for schema\n\n  if (this.port && ('wss' === schema && Number(this.port) !== 443 || 'ws' === schema && Number(this.port) !== 80)) {\n    port = ':' + this.port;\n  } // append timestamp to URI\n\n\n  if (this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  } // communicate binary support capabilities\n\n\n  if (!this.supportsBinary) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query); // prepend ? to query\n\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n/**\n * Feature detection for WebSocket.\n *\n * @return {Boolean} whether this transport is available.\n * @api public\n */\n\n\nWS.prototype.check = function () {\n  return !!WebSocketImpl && !('__initialize' in WebSocketImpl && this.name === WS.prototype.name);\n};","module.exports = toArray;\n\nfunction toArray(list, index) {\n  var array = [];\n  index = index || 0;\n\n  for (var i = index || 0; i < list.length; i++) {\n    array[i - index] = list[i];\n  }\n\n  return array;\n}","/**\n * Expose `Backoff`.\n */\nmodule.exports = Backoff;\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\n\nBackoff.prototype.duration = function () {\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n\n  if (this.jitter) {\n    var rand = Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n  }\n\n  return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\n\nBackoff.prototype.reset = function () {\n  this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\n\nBackoff.prototype.setMin = function (min) {\n  this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\n\nBackoff.prototype.setMax = function (max) {\n  this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\n\n\nBackoff.prototype.setJitter = function (jitter) {\n  this.jitter = jitter;\n};"],"sourceRoot":""}