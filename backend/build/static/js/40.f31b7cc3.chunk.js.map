{"version":3,"sources":["ui/components/Forms/LoginForm.js","ui/components/Forms/LoginPage.js"],"names":["socket","io","rootUrl","LoginForm","state","email","password","isTyping","formErrors","emailValid","passwordValid","formValid","loading","handleInputChange","e","preventDefault","name","target","value","_this","setState","Object","defineProperty","validateField","handleSubmit","props","onRenderLoader","data","onLogin","this","onClearError","fieldName","fieldValidationErrors","match","length","validateForm","_this2","_this$state","_this$props","error","loader","react_default","a","createElement","className","id","src","userLogo","alt","type","onChange","placeholder","style","color","disabled","onClick","Loader","OAuth","provider","key","react_router_dom","to","Component","connect","auth","dispatch","login","renderLoader","clearError","withRouter","LoginPage","Hoc","token","history","goBack","Header","Forms_LoginForm"],"mappings":"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","file":"static/js/40.f31b7cc3.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Forms.scss'; \r\nimport { connect } from 'react-redux';\r\nimport {Link, withRouter} from 'react-router-dom';\r\nimport { login, renderLoader, clearError } from '../../../store/actions';\r\nimport Loader from '../../globalComponent/Loader';\r\nimport OAuth from '../Oauth/OAuth'\r\nimport io from 'socket.io-client';\r\nimport { rootUrl } from '../../../configs/config'\r\n\r\nimport userLogo from '../../../assets/images/logo.png';\r\nconst socket = io(rootUrl);\r\n\r\nclass LoginForm extends Component {\r\n\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        isTyping: false,\r\n        formErrors: { email: '', password: '' },\r\n        emailValid: false,\r\n        passwordValid: false,\r\n        formValid: false,\r\n        loading: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onClearError();\r\n    }\r\n\r\n    handleInputChange = (e) => {\r\n        e.preventDefault();\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState({ [name]: value },\r\n            () => { this.validateField(name, value) });\r\n    }\r\n\r\n    validateField(fieldName, value) {\r\n        let fieldValidationErrors = this.state.formErrors;\r\n        let emailValid = this.state.emailValid;\r\n        let passwordValid = this.state.passwordValid;\r\n\r\n        switch (fieldName) {\r\n            case 'email':\r\n                emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\r\n                fieldValidationErrors.email = emailValid ? '' : ' is invalid';\r\n                break;\r\n            case 'password':\r\n                passwordValid = value.length >= 6;\r\n                fieldValidationErrors.password = passwordValid ? '' : ' is too short';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        this.setState({\r\n            formErrors: fieldValidationErrors,\r\n            emailValid: emailValid,\r\n            passwordValid: passwordValid\r\n        }, this.validateForm);\r\n    }\r\n\r\n    validateForm() {\r\n        this.setState({ formValid: this.state.emailValid && this.state.passwordValid });\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // Display Loader\r\n        this.setState({isTyping: true});\r\n        if(this.state.formValid) {\r\n            this.props.onRenderLoader();\r\n            const data = {\r\n                email: this.state.email,\r\n                password: this.state.password\r\n            }\r\n            // Launch the signup\r\n            this.props.onLogin(data);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { isTyping, emailValid, email, password } = this.state;\r\n        const { error, loader } = this.props;\r\n        \r\n        return (\r\n            <div className=\"wrapper fadeInDown\">\r\n                <div id=\"formContent\">\r\n                    <div className=\"fadeIn first mt-5\">\r\n                    <img src={userLogo} id=\"icon\" alt=\"User Icon\" />\r\n                    </div>\r\n\r\n                    <form>\r\n                        {error && error.length ? <div className=\"alert alert-danger\">{error}</div> : null}\r\n                        <input type=\"email\" value={email} onChange={(e) => this.handleInputChange(e)} id=\"email\" className=\"fadeIn second\" name=\"email\" placeholder=\"Adresse Email\" />\r\n                        {isTyping && !emailValid ? <div style={{ color: \"red\" }}>Email non valide.</div> : null}\r\n                        <input type=\"password\" value={password} onChange={(e) => this.handleInputChange(e)} id=\"password\" className=\"fadeIn third\" name=\"password\" placeholder=\"Mot de passe\" />\r\n                        {isTyping && !this.state.passwordValid ? <div style={{ color: \"red\" }}>Invalide. Min 6 carat√®res</div> : null}\r\n                        <button disabled={loader} type=\"submit\" onClick={(e) => this.handleSubmit(e)} id=\"signBtn\" className=\"button fadeIn fourth mt-4 mb-5\">{loader ? <Loader color=\"white\" /> : \"Se connecter\"}</button>\r\n                    </form>\r\n                    <p>Ou bien connectez vous avec:</p>\r\n                    <div className=\"d-flex socialWrapper\">\r\n                        <OAuth\r\n                            provider={\"google\"}\r\n                            key={\"google\"}\r\n                            socket={socket}\r\n                        />\r\n                        <OAuth\r\n                            provider={\"facebook\"}\r\n                            key={\"facebook\"}\r\n                            socket={socket}\r\n                        />\r\n                    </div>\r\n\r\n                    <div id=\"formFooter\">\r\n                        <Link to=\"/auth/signup\" className=\"underlineHover\">Ou bien Inscrivez vous Ici.</Link>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapPropsToState = state => {\r\n    return {\r\n        loader: state.loader.loading,\r\n        error: state.auth.error\r\n    }\r\n}\r\n\r\nconst mapDispatchToState = dispatch => {\r\n    return {\r\n        onLogin: (data) => dispatch(login(data)),\r\n        onRenderLoader: () => dispatch(renderLoader()),\r\n        onClearError: () => dispatch(clearError()),\r\n    }\r\n}\r\n\r\nexport default connect(mapPropsToState, mapDispatchToState)(withRouter(LoginForm));","import React, { Component } from 'react';\r\nimport Header from '../../globalComponent/Header';\r\nimport Hoc from '../../globalComponent/Hoc'\r\nimport LoginForm from './LoginForm';\r\nimport { connect } from 'react-redux';\r\n\r\nclass LoginPage extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Hoc>\r\n                {this.props.token ? this.props.history.goBack(): null}\r\n                <Header />\r\n                <LoginForm />\r\n            </Hoc>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapPropsToState = state => {\r\n    return {\r\n        token: state.auth.token,\r\n    }\r\n}\r\n\r\nexport default connect(mapPropsToState)(LoginPage);"],"sourceRoot":""}