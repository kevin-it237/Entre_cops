{"version":3,"sources":["ui/globalComponent/Notifications.js","ui/admin/AdminEMails/AdminEMails.js"],"names":["__webpack_require__","d","__webpack_exports__","Notification","addNotification","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_notifications_component__WEBPACK_IMPORTED_MODULE_1__","react_notifications_component__WEBPACK_IMPORTED_MODULE_1___default","props","a","createElement","type","title","message","store","insert","container","animationIn","animationOut","dismiss","duration","onScreen","AdminEmails","_this","Object","C_Users_User_Desktop_Web_projects_Entre_cops_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","C_Users_User_Desktop_Web_projects_Entre_cops_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","C_Users_User_Desktop_Web_projects_Entre_cops_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","handleInputChange","e","value","target","name","selectedUsers","state","includes","users","filter","user","setState","concat","C_Users_User_Desktop_Web_projects_Entre_cops_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__","C_Users_User_Desktop_Web_projects_Entre_cops_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","sendEmails","_this$state","object","content","length","sending","emails","trim","axios","post","html","JSON","stringify","then","res","showModal","emailError","catch","err","console","log","selectAllUsers","inputClass","toggleBtn","usersCheckboxToggleAll","document","getElementsByClassName","usersCheckboxes","checked","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","input","push","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_loop","_iterator2","suppliers","loading","error","onChange","editorState","_this2","get","data","_this3","_this$state2","react__WEBPACK_IMPORTED_MODULE_7___default","react__WEBPACK_IMPORTED_MODULE_7__","_globalComponent_Notifications__WEBPACK_IMPORTED_MODULE_11__","className","_globalComponent_Loader__WEBPACK_IMPORTED_MODULE_13__","map","i","key","scope","email","supplier","onClick","react_bootstrap_Modal__WEBPACK_IMPORTED_MODULE_12___default","show","onHide","size","Header","closeButton","Title","Body","for","placeholder","required","_ckeditor_ckeditor5_react__WEBPACK_IMPORTED_MODULE_9___default","editor","ClassicEditor","config","toolbar","onInit","event","getData","onBlur","onFocus","color","Component"],"mappings":"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","file":"static/js/40.ac8a6f88.chunk.js","sourcesContent":["import React from 'react'\r\nimport ReactNotification from 'react-notifications-component'\r\nimport 'react-notifications-component/dist/theme.css'\r\nimport 'animate.css/animate.css'\r\nimport { store } from 'react-notifications-component';\r\n\r\nexport const Notification = (props) => {\r\n    return (\r\n        <ReactNotification />\r\n    )\r\n};\r\n\r\nexport const addNotification = (type, title, message) => {\r\n    store.addNotification({\r\n        title: title,\r\n        message: message,\r\n        type: type,\r\n        insert: \"top\",\r\n        container: \"top-center\",\r\n        animationIn: [\"animated\", \"bounceIn\"],\r\n        animationOut: [\"animated\", \"fadeOut\"],\r\n        dismiss: {\r\n            duration: 4000,\r\n            onScreen: false\r\n        }\r\n    });\r\n} ","import React, { Component, Fragment } from 'react';\r\nimport axios from 'axios';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\nimport { Notification, addNotification } from '../../globalComponent/Notifications'\r\n\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Loader from '../../globalComponent/Loader';\r\n\r\n\r\nclass AdminEmails extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            users: [],\r\n            suppliers: [],\r\n            loading: true,\r\n            sending: false,\r\n            selectedUsers: [],\r\n            content: '',\r\n            object: '',\r\n            error: '',\r\n            emailError: '',\r\n        };\r\n        this.onChange = (editorState) => this.setState({ editorState });\r\n    }\r\n\r\n    handleInputChange = (e) => {\r\n        const value = e.target.value;\r\n        const name = e.target.name;\r\n        if(e.target.type === \"checkbox\") {\r\n            const {selectedUsers} = this.state;\r\n            if(selectedUsers.includes(value)) {\r\n                let users = selectedUsers.filter(user => (user !== value))\r\n                this.setState({selectedUsers: users});\r\n            } else {\r\n                this.setState(state => ({selectedUsers: [...state.selectedUsers, value]}));\r\n            }\r\n        } else {\r\n            this.setState({[name]: value});\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        //get user list\r\n        axios.get('/api/user')\r\n        .then(res => {\r\n            this.setState({loading: false, users: res.data.users, error: ''})\r\n        })\r\n        .catch(err => {\r\n            this.setState({loading: false,  error: 'Erreur, Veuillez reéssayer'})\r\n        })\r\n        //get suoolier list\r\n        axios.get('/api/supplier/all')\r\n        .then(res => {\r\n            this.setState({loading: false, suppliers: res.data.suppliers, error: ''})\r\n        })\r\n        .catch(err => {\r\n            this.setState({loading: false,  error: 'Erreur, Veuillez reéssayer'})\r\n        })\r\n    }\r\n\r\n    sendEmails = () => {\r\n        const {object, content, selectedUsers} = this.state;\r\n        if(object.length <= 0 || content.length <= 0 || selectedUsers.length === 0 ) {\r\n            addNotification(\"warning\", \"Envoi des Emails!\", \"Selectionez des utilisateurs et remplissez tous les champs\")\r\n        } else {\r\n            this.setState({ sending: true })\r\n            let emails = selectedUsers.filter(user => user.trim().length > 0);\r\n            // Envoi des Emails avec AWS SES\r\n           /*  \r\n            axios.post('/api/email/sendemail', {\r\n                object: object,\r\n                emails: emails,\r\n                html: JSON.stringify(content)\r\n            })\r\n            .then(res => {\r\n                this.setState({ sending: false, showModal: false })\r\n            })\r\n            .catch(err => {\r\n                this.setState({ sending: false, emailError: \"Une érreur ss'est produite\" })\r\n                console.log(err)\r\n            }) */\r\n            // Sending with gmail\r\n            axios.post('/api/email/sendemail/gmail', {\r\n                object: object,\r\n                emails: emails,\r\n                html: JSON.stringify(content)\r\n            })\r\n            .then(res => {\r\n                this.setState({ sending: false, showModal: false, emailError: '', content: '', object: '', selectedUsers: [] })\r\n                addNotification(\"success\", \"Envoi des Emails!\", \"Emails envoyés avec succès\")\r\n            })\r\n            .catch(err => {\r\n                this.setState({ sending: false, emailError: \"Une érreur ss'est produite\" })\r\n                console.log(err)\r\n            })\r\n        }\r\n    }\r\n\r\n    selectAllUsers = (e, inputClass, toggleBtn) => {\r\n        let usersCheckboxToggleAll = document.getElementsByClassName(toggleBtn)\r\n        let usersCheckboxes = document.getElementsByClassName(inputClass)\r\n        if(usersCheckboxToggleAll[0].checked) {\r\n            let users = [];\r\n            for (const input of usersCheckboxes) {\r\n                input.checked = true\r\n                users.push(input.value)\r\n            }\r\n            this.setState({selectedUsers: [...this.state.selectedUsers, ...users]})\r\n        } else {\r\n            let users = [...this.state.selectedUsers]\r\n            for (const input of usersCheckboxes) {\r\n                input.checked = false;\r\n                users = users.filter(user => (user !== input.value))\r\n            }\r\n            this.setState({selectedUsers: users})\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {loading, users, suppliers, error, selectedUsers, content, object, sending, emailError} = this.state;\r\n        console.log(content)\r\n        return (\r\n            <Fragment>\r\n                <Notification />\r\n                <div className=\"container mt-4\">\r\n                    <div className=\"row pt-5 pb-3\">\r\n                        <div className=\"col-sm-12\">\r\n                            <h2>Envoi des Emails</h2>\r\n                        </div>\r\n                        {error&&error.length ? <div className=\"alert alert-danger\">{error}</div>:null}\r\n                        {\r\n                            loading ? <div className=\"col-sm-12\"><div className=\"d-flex justify-content-center\"><Loader /></div></div>:\r\n                            <Fragment>\r\n                                <div className=\"col-sm-12 user-list\">\r\n                                    <h4 className=\"mb-4 mt-4\">Liste des utilisateurs</h4>\r\n                                    <table className=\"table table-bordered reservations-list\">\r\n                                        <thead className=\"thead-inverse thead-dark\">\r\n                                            <tr>\r\n                                                <th>#</th>\r\n                                                <th>Nom</th>\r\n                                                <th>Email</th>\r\n                                                <th>Actions <input onChange={(e) => this.selectAllUsers(e, \"user-check\", \"user-check-verify\")} type=\"checkbox\" className=\"form-check-inline user-check-verify\" /></th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                        {\r\n                                            users.map((user, i) => (\r\n                                                <tr key={i}>\r\n                                                    <th scope=\"row\">{i + 1}</th>\r\n                                                    <td>{user.name}</td>\r\n                                                    <td>{user.email}</td>\r\n                                                    <td><input onChange={(e) => this.handleInputChange(e)} type=\"checkbox\" className=\"form-check-inline user-check\" value={user.email} /></td>\r\n                                                </tr>\r\n                                            ))\r\n                                        }\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                                <div className=\"col-sm-12 supplier-list\">\r\n                                    <h4 className=\"mb-4 mt-4\">Liste des Fournisseurs</h4>\r\n                                    <table className=\"table table-bordered reservations-list\">\r\n                                        <thead className=\"thead-inverse thead-dark\">\r\n                                            <tr>\r\n                                                <th>#</th>\r\n                                                <th>Nom</th>\r\n                                                <th>Email</th>\r\n                                                <th>Actions <input onChange={(e) => this.selectAllUsers(e, \"supplier-check\", \"supplier-check-verify\")} type=\"checkbox\" className=\"form-check-inline supplier-check-verify\" /></th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                        {\r\n                                            suppliers.map((supplier, i) => (\r\n                                                <tr key={i}>\r\n                                                    <th scope=\"row\">{i + 1}</th>\r\n                                                    <td>{supplier.name}</td>\r\n                                                    <td>{supplier.email}</td>\r\n                                                    <td><input onChange={(e) => this.handleInputChange(e)} type=\"checkbox\" className=\"form-check-inline supplier-check\" name={supplier.email} value={supplier.email} /></td>\r\n                                                </tr>\r\n                                            ))\r\n                                        }\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                                <button onClick={() => this.setState({showModal: true})} className=\"button send-email-btn\">Envoyer un Email ({this.state.selectedUsers.length})</button>\r\n                            </Fragment>\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Envoyer les mail */}\r\n                <Modal show={this.state.showModal} onHide={() => this.setState({showModal: !this.state.showModal})} size=\"lg\" >\r\n                    <Modal.Header closeButton>\r\n                    <Modal.Title>Envoi du mail</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <div className=\"container\">\r\n                            <div className=\"row\">\r\n                               <div className=\"col\">\r\n                                    {emailError && emailError.length ? <div className=\"alert alert-danger\">{emailError}</div> : null}\r\n                                    <div className=\"d-flex mb-4 flex-wrap\">\r\n                                        {\r\n                                            selectedUsers.map((user, i) => <p className=\"user-email-item\" key={i}>{user}</p>)\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label for=\"name\">Objet</label>\r\n                                        <input  type=\"text\" className=\"form-control\" value={object} onChange={(e) => this.handleInputChange(e)} name=\"object\" placeholder=\"Objet\" required />\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label for=\"name\">Contenu</label>\r\n                                        <CKEditor\r\n                                            editor={ClassicEditor}\r\n                                            data=\"\"\r\n                                            config={{\r\n                                                toolbar: ['heading', '|', 'bold', 'italic', 'insertTable',\r\n                                                    'tableColumn', 'tableRow', 'mergeTableCells', '|', 'undo', 'redo']\r\n                                            }} \r\n                                            onInit={editor => {\r\n                                                // You can store the \"editor\" and use when it is needed.\r\n                                                console.log('Editor is ready to use!', editor);\r\n                                            }}\r\n                                            onChange={(event, editor) => {\r\n                                                const data = editor.getData();\r\n                                                this.setState({content: data})\r\n                                            }}\r\n                                            onBlur={(event, editor) => {\r\n                                                console.log('Blur.', editor);\r\n                                            }}\r\n                                            onFocus={(event, editor) => {\r\n                                                console.log('Focus.', editor);\r\n                                            }}\r\n                                        />\r\n                                        {/* <textarea style={{fontSize: \"1.5rem\"}} type=\"text\" className=\"form-control\" value={content} onChange={(e) => this.handleInputChange(e)} name=\"content\" rows={5} placeholder=\"Contenu de l'email\"></textarea> */}\r\n                                    </div>\r\n                                    <div className=\"d-flex justify-content-end\">\r\n                                        <button onClick={this.sendEmails} className=\"button my-4\">Envoyer ({selectedUsers.length}) {sending&&<Loader color=\"white\"/>}</button>\r\n                                    </div>\r\n                               </div>\r\n                            </div>\r\n                        </div>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AdminEmails;"],"sourceRoot":""}